{
    "BugReport": {
        "en": {
            "content": "the physics gun no longer works on meth props\n\n= What to do when you have a problem in DarkRP =\n\nThere are three kinds of problems that can happen in DarkRP:\n- The problem caused by the end user (think of a bad modification or a bad setting)\n- The problem caused by a mod for DarkRP (think of a weapon pack, model pack or extra money printers or things like that)\n- The problem caused by the developer of DarkRP\n\nThe very first step of solving your problem is figuring out who caused it. Often this is easy to figure out. If DarkRP started to error\nwhen you edited your HUD, it's probably your fault (or the server host's). If the server starts in sandbox, or if you get the error\n\"couldn't include file darkrp\\gamemode\\cl_init.lua (File not found)\"\nit's your fault. \n\nWhen a weapon from a weapon pack does crazy things, it's probably the person who made that weapon pack.\nWhen the problem occurs with unedited DarkRP features, it might be DarkRP's fault.\nThere are cases for which it might be difficult to determine who is responsible for the problem.\nIn these cases you should look at the errors that usually show up. The errors usually say which mod caused the problem.\n\nIf it's your fault, blame yourself. If you caused a problem you don't know how to solve, you have two options:\n<ol>\n<li>ask on a forum or ask your friends for help. If you contact mod developers, they might get mad at you for being asked something they have nothing to do with</li>\n<li>undo the change that broke DarkRP. To do this, always make sure you have a backup</li>\n</ol>\n\nIf it's the fault of a third party mod developer, contact them to report the bug. They are the only ones who can (and are willing to)\nsolve the problems caused by their mod.\n\n\n= Reporting a bug for DarkRP =\nOnly report bugs for issues of which you are VERY SURE that it is the fault of DarkRP developers.\n\nTo report a bug for DarkRP, you need to follow very strict rules. These rules exist so the bugs can be easily identified and solved.\n\nThe most important rules are:\n<ol>\n<li>Do not ask for help. Your need of help is not the fault of DarkRP.</li>\n<li>Do not report an issue when you are unable to install DarkRP.</li>\n<li>Do not report problems that you caused yourself.</li>\n<li>Do not report problems for other mods.</li>\n<li>Do not report problems for a server that you do not own or develop for</li>\n<li>Do not report a problem that has been reported before (you can search on the bug reporting site)</li>\n<li>Do not repost your problem when your previous problem has been closed. You can post in a closed issue and you will still be listened to.</li>\n<li>Never just post \"It doesn't work\" that's no information to work on.</li>\n</ol>\n\nFailure to abide by these rules will get your report closed and/or your account banned from reporting issues.\n\nHow to report a bug:\n<ol>\n<li> Enter lua_log_sv 1 in RCon or the server console</li>\n<li> Make the problem happen</li>\n\tif a weapon messes up when you shoot, shoot the weapon.\n\tif it happens on server start, change level or restart the server\n\tif it happens when the mayor tries to place a lawboard, make the mayor try to spawn a lawboard\n\tetc.</li>\n<li> Go to the FTP of your server.</li>\n<li> In the garrysmod/ folder you should see \"lua_errors_server.txt\" and/or \"clientside_errors.txt\"\n \tupload the contents of BOTH these files to www.pastebin.com\n \tif you don't see those files, make sure you did everything right (lua_log_sv must be 1).\n \tif you don't see the files and you're sure that you did the logging right, mention this in the bug report:\n \t\"No error log files were generated.\"\n \tIf you only see one file, upload that one file to www.pastebin.com and mention the following in the bug report:\n \t\"The other error log file was not generated.\"\n \tThanks. Errors help A LOT.</li>\n<li> Go to https://github.com/FPtje/DarkRP/issues/new (DON'T SKIP THE PREVIOUS STEPS)</li>\n<li> Think of an appropriate title. Try to be specific here</li>\n<li> Take the issue template from \"github issue template.txt\", which is in the HELP folder, and copy paste it into the \"Write\" field.</li>\n<li> Fill it in, try not to leave anything empty!</li>\n\tMORE information = MUCH HIGHER chance that the problem will be solved\n<li> Click \"Submit new issue\"</li>\n</ol>",
            "timestamp": "2021-04-22 20:52:16"
        }
    },
    "Create modules": {
        "ru": {
            "content": "{{Languages|en=Creating modules|ru=Creating modules:ru|fr=Creating modules:fr}}\n\n\u041b\u0443\u0447\u0448\u0438\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 DarkRP \u044d\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0443\u043b\u0435\u0439. \u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u043e\u0434\u0443\u043b\u0435\u0439 \u043d\u0430\u043c\u043d\u043e\u0433\u043e \u0443\u0434\u043e\u0431\u043d\u0435\u0435 \u0437\u0430\u0434\u0430\u0432\u0430\u0442\u044c \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438. \u042d\u0442\u043e \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u043e \u043f\u0440\u043e\u0441\u0442\u043e. \u041a\u0430\u0442\u0430\u043b\u043e\u0433 DarkRP \u043c\u043e\u0434\u0443\u043b\u0435\u0439 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0437\u0434\u0435\u0441\u044c ''DarkRP/gamemode/modules''\n\n== \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043c\u043e\u0434\u0443\u043b\u044f ==\n\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u043d\u043e\u0432\u0443\u044e \u043f\u0430\u043f\u043a\u0443 \u0432 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 DarkRP/gamemode/modules\n\n\u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u043a\u0438\u043d\u044c\u0442\u0435 \u0442\u0443\u0434\u0430 \u0432\u0430\u0448\u0438 Lua \u0444\u0430\u0439\u043b\u044b.\n'''\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435:'''\n\u0412\u0441\u0435 \u0432\u0430\u0448\u0438 \u0444\u0430\u0439\u043b\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0438\u043c\u0435\u0442\u044c \u043f\u0440\u0435\u0444\u0438\u043a\u0441 sv_, cl_ \u0438\u043b\u0438 sh_ prefix, \u0433\u0434\u0435 sv_ \u0432\u044b\u0441\u0442\u0443\u043f\u0430\u0435\u0442 \u0437\u0430 \u0441\u0435\u0440\u0432\u0435\u0440 (\u043a\u043b\u0438\u0435\u043d\u0442 \u043d\u0435 \u043d\u0443\u0436\u0434\u0430\u0435\u0442\u0441\u044f \u0432 \u043d\u0438\u0445), cl_ \u0434\u043b\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430 (\u0444\u0430\u0439\u043b\u044b \u0431\u0443\u0434\u0443\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u044b \u043a \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0438 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u044b \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435) \u0438 sh_ \u043f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0435 (\u043a\u043b\u0438\u0435\u043d\u0442 \u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u0431\u0443\u0434\u0435\u0442 \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0444\u0430\u0439\u043b)",
            "timestamp": "2020-07-23 18:07:09"
        }
    },
    "Creating modules": {
        "en": {
            "content": "{{Languages|en=Creating modules|ru=Creating modules:ru|fr=Creating modules:fr}}\n\nThe best way to customize DarkRP is to create modules. This way you can stay off the core files and keep those updated.\n\nIt's fairly simple. The DarkRP modules directory can be found in the DarkRP modification addon at ''lua/darkrp_modules''. If you do not know about the DarkRP modification addon then you should read [[DarkRP:ModifyingDarkRP|this]].\n\n== Making a new module ==\nFirst create a folder in ''lua/darkrp_modules''.\n\nPut your Lua files in that folder\n'''Note:'''\nAll your files must either have the sv_, the cl_ or the sh_ prefix, where sv_ stands for server (the client doesn't need them), cl_ for client (the files will be sent to the client and won't be included on the server) and sh_ for shared (the client and server will include the file)",
            "timestamp": "2020-07-23 18:07:09"
        },
        "fr": {
            "content": "{{Languages|en=Creating modules|ru=Creating modules:ru|fr=Creating modules:fr}}\n\nLa meilleure fa\u00e7on de personnaliser le DarkRP est de cr\u00e9er un module. De cette fa\u00e7on, vous pouvez rester \u00e0 l'\u00e9cart des fichiers et garder ceux qui sont mis \u00e0 jour.\n\nC'est assez simple. Le dossier de module DarkRP peut \u00eatre trouv\u00e9 dans l'addon DarkRP modification dans ''lua/darkrp_modules''. Si vous ne savez pas ce qu'est l'addon DarkRP modification, lisez [[DarkRP:ModifyingDarkRP:fr|ceci]].\n\n== Faire un nouveau module ==\nTout d'abord, cr\u00e9ez un dossier dans ''lua/darkrp_modules''.\n\n\nMettez vos fichiers Lua dans ce dossier.\n'''Note:'''\nTous vos fichiers doivent contenir le sigle de d\u00e9part sv_, cl_ ou sh_ , sv_ correspond au serveur (le client n'en a pas besoin), cl_ pour le client (les fichiers doivent \u00eatre envoy\u00e9s au client et ne sont pas inclus au serveur) et sh_ pour le partag\u00e9 (le client et le serveur incluent le fichier).",
            "timestamp": "2020-07-23 18:07:10"
        },
        "ru": {
            "content": "#REDIRECT [[Create modules:ru]]",
            "timestamp": "2020-07-23 18:07:10"
        }
    },
    "DarkRP": {
        "en": {
            "content": "{{TOC right}}{{Languages|en=DarkRP|ru=DarkRP:ru|fr=DarkRP:fr}}\n\n= About =\n\nDarkRP is a gamemode based on [http://www.garrysmod.org/downloads/?a=view&id=56129 LightRP]. DarkRP was created by Rickster, and is contributed to by other authors. The latest version can be downloaded via Git or SVN from [http://github.com/FPtje/DarkRP GitHub].\n\n= Jobs =\n\nIn DarkRP, you receive a salary for each job. You can choose from a variety of jobs listed below. The jobs vary wildly in their style, as players have different tools to help them perform their specific job. \n\nThese are the class descriptions taken from the gamemode:\n\n=== Citizen ===\n\nThe Citizen is the most basic level of society you can hold besides being a hobo. You have no specific role in city life.\n\n'''Weapons'''\n\n*No extra weapons.\n\n=== Civil Protection ===\n\nThe protector of every citizen that lives in the city. You have the power to arrest criminals and protect innocents. Hit them with your arrest baton to put them in jail. Bash them with a stunstick and they might learn better than to disobey the law. The Battering Ram can break down the door of a criminal with a warrant for his/her arrest. The Battering Ram can also unfreeze frozen props(if enabled). Type /wanted <name> to alert the public to this criminal OR go to tab and warrant someone by clicking the warrant button.\n\n'''Weapons'''\n\n*Arrest Baton\n*Unarrest Baton\n*Glock\n*Stunstick\n*Battering Ram\n*Weapon Checker\n\n=== Gangster (\"Mobster\" in some servers) ===\n\nThe lowest person of crime. A gangster generally works for the Mobboss who runs the crime family. The Mobboss sets your agenda and you follow it or you might be punished.\n\n'''Weapons'''\n\n*No extra weapons.\n\n=== Mob Boss ===\n\nThe Mobboss is the boss of the criminals in the city. With his power he coordinates the gangsters and forms an efficient crime organization. He has the ability to break into houses by using a lockpick. The Mobboss also can unarrest you.\n\n'''Weapons'''\n\n*Lockpick\n*Unarrest Baton\n\n=== Gun Dealer ===\n\nA gun dealer is the only person who can sell guns to other people. However, make sure you aren't caught selling guns that are illegal to the public. /Buyshipment <name> to Buy a  weapon shipment /Buygunlab to Buy a gunlab that spawns P228 pistols.\n\n'''Weapons'''\n\n*No extra weapons.\n\n=== Medic ===\n\nWith your medical knowledge, you heal players to proper health. Without a medic, people can not be healed. Left click with the Medical Kit to heal other players. Right click with the Medical Kit to heal yourself.\n\n'''Weapons'''\n\n*Med kit\n\n=== Cook ===\n\nAs a cook, it is your responsibility to feed the other members of your city. You can spawn a microwave and sell the food you make: /Buymicrowave\n\n'''Weapons'''\n\n*No extra weapons.\n\n=== Civil Protection Chief ===\n\nThe Chief is the leader of the Civil Protection unit. Coordinate the police forces to bring law to the city. Hit them with arrest baton to put them in jail. Bash them with a stunstick and they might learn better than to lead a life of crime. The Battering Ram can break down the door of a criminal with a warrant for his/her arrest. Type /wanted <name> to alert the public to this criminal. Type /jailpos to set the Jail Position.\n\n'''Weapons'''\n*Arrest Baton\n*Unarrest Baton\n*Desert Eagle\n*Stunstick\n*Battering Ram\n*Weapon Checker\n\n=== Mayor ===\n\nThe Mayor of the city creates laws to serve the greater good of the people. If you are the mayor you may create and accept warrants. Type /wanted <name>  to warrant a player. Type /jailpos to set the Jail Position. Type /lockdown initiate a lockdown of the city. Everyone must be inside during a lockdown. The cops patrol the area /unlockdown to end a lockdown.\n\n'''Weapons'''\n\n*No extra weapons\n\n== Custom Jobs ==\n\nThe current edition of DarkRP allows admins to create custom jobs easily compared to the previous versions of DarkRP. Now, new jobs can be added with the DarkRP.createJob function in the [[DarkRP:ModifyingDarkRP|DarkRPModification addon]].\n\n=== Syntax ===\n\nIn case you want to create custom jobs, please take a look at [[DarkRP:CustomJobFields]]\n\n=== Popular Custom Jobs ===\n==== Builder ====\n\nThis class can be used as a solution to tool gun and physics gun abuse by only allowing this class to carry those weapons at the risk of being demoted if they abuse.\n\n'''Weapons'''\n*Tool Gun\n*Physics Gun\n\n==== Drug Dealer ====\n\nSimilar to the gun dealer, but replace guns with drugs.\n\n'''Weapons'''\n*No extra weapons.\n\n==== Hacker ====\n\nCracks keypads to gain access to areas.\n\n'''Weapons'''\n*Keypad Cracker\n\n\n= Criticisms =\n\nThings that ruin the game for everyone else.\n\n=== The Gamemode Itself ===\n\nA lot of people think DarkRP in Garry's Mod is stupid, boring and violent for RP. Previous versions of the Gamemode were poorly coded and as a result had several major issues until a recent revision of the code by it's current developer FPtje. Players also think that pre-determined jobs and scripted entities ruin creativity for role players.\n\n=== Deathmatching ===\n\nDarkRP tends to attract deathmatchers and ruin the gamemode, but there are measures that can be taken to keep the peace.\n\n*Raise gun prices or restrict them altogether.\n*Set server variables to automatically kick random deathmatchers.\n*Restrict prop spawning and/or the physics gun to prevent prop deathmatching. (as well as prop_surfing.)\n*Enable noob-protection in the Propprotection\n*Enable Spawn-protection through server commands\n*Make the server private\n*Have active and alert admins on the server",
            "timestamp": "2020-07-23 18:07:10"
        }
    },
    "DarkRP-Config": {
        "en": {
            "content": "#REDIRECT [[Donator Job configuration]]",
            "timestamp": "2020-07-23 18:07:10"
        }
    },
    "DarkRP-Maps": {
        "en": {
            "content": "#REDIRECT [[DarkRP:Maps]]",
            "timestamp": "2020-07-23 18:07:10"
        },
        "ru": {
            "content": "#REDIRECT [[DarkRP:Maps:ru]]",
            "timestamp": "2020-07-23 18:07:10"
        }
    },
    "DarkRP.CanChangeRPName": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:CanChangeRPName\n| Description = Called when a player attempts to change their RP name.\n| Returns = {{Ret|boolean|can_change|whether the player can change their name to the name given.}}\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player who is trying to change their name\n\n| Arg2Name = name\n| Arg2Type = string\n| Arg2Req  = true\n| Arg2Desc = The name\n}}\n\n==Examples==\n{{Example\n| Description = Makes sure no one calls themselves Hitler.\n| Code = hook.Add( \"CanChangeRPName\", \"nonazis\", function(ply, name)\n\tif string.find(name:lower(), \"hitler\") then return false end\nend)\n\n| Output = people can't name themselves hitler.\n}}",
            "timestamp": "2020-07-23 18:07:10"
        }
    },
    "DarkRP.CanDemote": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:CanDemote\n| Description = Decides whether a player can create a demotion vote.\n| Returns = {{Ret|boolean|CanDemote|whether the player is allowed to create a demotion vote}}{{Ret|string|message|the message shown when they can't}}\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req = true\n| Arg1Desc = The player who can or cannot demote the other player\n\n| Arg2Name = target\n| Arg2Type = Player\n| Arg2Req = true\n| Arg2Desc = The target of the demote\n\n| Arg3Name = reason\n| Arg3Type = string\n| Arg3Req = true\n| Arg3Desc = The reason for the demote\n\n}}\n\n==Examples==\n{{Example\n| Description = You can't make a vote if the reason contains the words RDM or NLR in it\n| Code = hook.Add(\"CanDemote\", \"example\", function(ply, target, reason)\n\treason = string.lower(reason)\n\tif string.find(reason, \"rdm\") or string.find(reason, \"nlr\") then \n\t\treturn false, \"shit demote, fuck off\"\n\tend\n\t-- Return nothing otherwise to take the default \nend)\n\n| Output = A fix for every player related problem in DarkRP\n}}",
            "timestamp": "2020-07-23 18:07:10"
        }
    },
    "DarkRP.CanDropWeapon": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:CanDropWeapon\n| Description = Called when a player tries to drop a weapon\n| Returns = {{Ret|boolean|CanDrop|whether the player is allowed to drop this weapon. Return nothing to use the default.}}\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req = true\n| Arg1Desc = The player who wants to drop a weapon\n\n| Arg2Name = weapon\n| Arg2Type = Entity\n| Arg2Req = true\n| Arg2Desc = The weapon that the player wants to drop\n\n}}\n\n==Examples==\n{{Example\n| Description = People can drop weapons they bought, but they cannot drop weapons they spawned with.\ne.g. If a gundealer buys a glock he can drop it, but a cop who spawned with it can't.\n| Code = hook.Add(\"CanDropWeapon\", \"example\", function(ply, weapon)\n        if not IsValid(weapon) then return end\n\tlocal class = weapon:GetClass()\n\tclass = string.lower(class)\n\n\t-- The player spawns with this weapon\n\tif RPExtraTeams[ply:Team()] and table.HasValue(RPExtraTeams[ply:Team()].weapons, class) then\n\t\treturn false\n\tend\n\t-- Return nothing otherwise to take the default (by default things like pocket and keys can't be dropped)\nend)\n\n| Output = People can't drop the weapons they spawned with\n}}",
            "timestamp": "2020-07-23 18:07:10"
        }
    },
    "DarkRP.CanSeeLogMessage": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:CanSeeLogMessage\n| Description = Called when a logged event occurs. Decides whether a certain player will hear it. By default all admins see log messages.\n| Returns = {{Ret|boolean|CanSeeLogMessage|whether the player will see this log message.}}\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req = true\n| Arg1Desc = The player to receive the message\n\n| Arg2Name = text\n| Arg2Type = string\n| Arg2Req = true\n| Arg2Desc = The text of the log message\n\n| Arg3Name = Color\n| Arg3Type = Color\n| Arg3Structure = true\n| Arg3Req = true\n| Arg3Desc = The color of the log message\n\n}}\n\n==Examples==\n{{Example\n| Description = Donators can see log messages\n| Code = hook.Add(\"CanSeeLogMessage\", \"example\", function(ply, text, colour)\n\n\tif ply:GetNWString(\"usergroup\") == \"donator\" then\n\t\treturn true\n\tend\n\t-- Return nothing otherwise to take the default \nend)\n\n| Output = Donators seeing log messages\n}}",
            "timestamp": "2020-07-23 18:07:10"
        }
    },
    "DarkRP.CanVote": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:CanVote\n| Description = Decides whether a player can vote on a certain vote.\n| Returns = {{Ret|boolean|CanVote|whether the player can vote on this vote}}{{Ret|string|message|the message shown when they can't}}\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req = true\n| Arg1Desc = The player to decide suffrage for\n\n| Arg2Name = vote\n| Arg2Type = table\n| Arg2Req = true\n| Arg2Desc = the table that contains all the information about the vote\n\n}}\n\n==Examples==\n{{Example\n| Description = Only donators and admins can vote (such censorship, god damn)\n| Code = hook.Add(\"CanVote\", \"example\", function(ply, vote)\n\n\tif ply:GetNWString(\"usergroup\") ~= \"donator\" and not ply:IsAdmin() then\n\t\treturn false, \"Nein!\"\n\tend\n\t-- Return nothing otherwise to take the default \nend)\n\n| Output = Nazi Germany\n}}",
            "timestamp": "2020-07-23 18:07:11"
        }
    },
    "DarkRP.DarkRP.addHitmanTeam": {
        "en": {
            "content": "{{Syntax\n| Name = addHitmanTeam\n| Description = Make this team a hitman.\n| Returns = \n\n| Arg1Name = team number\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The number of the team (e.g. TEAM_MOB)\n\n}}",
            "timestamp": "2020-07-23 18:07:11"
        }
    },
    "DarkRP.DarkRP.openHitMenu": {
        "en": {
            "content": "{{Syntax\n| Name = openHitMenu\n| Description = Open the menu that requests a hit.\n| Returns = \n\n| Arg1Name = hitman\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The hitman to request the hit to.\n\n}}",
            "timestamp": "2020-07-23 18:07:11"
        }
    },
    "DarkRP.DarkRPVarChanged": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:DarkRPVarChanged\n| Description = Called when a player's DarkRPVar changes\n| Returns = {{Ret|nil}}\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req = true\n| Arg1Desc = The player who got paid\n\n| Arg2Name = var\n| Arg2Type = string\n| Arg2Req = true\n| Arg2Desc = name of the variable that changed (\"money\", \"salary\", \"rpname\" or w/e)\n\n| Arg3Name = OldValue\n| Arg3Type = any\n| Arg3Req = true\n| Arg3Desc = The previous value of the variable\n\n| Arg4Name = NewValue\n| Arg4Type = any\n| Arg4Req = true\n| Arg4Desc = The new value of this DarkRPVar\n\n}}\n\n==Examples==\n{{Example\n| Description = prints DarkRPVar changes, useful for debugging\n| Code = hook.Add( \"DarkRPVarChanged\", \"example\", function(ply, var, oldvar, newvalue)\n\tprint(ply, var, oldvar, newvalue)\nend)\n\n| Output = a print message\n}}",
            "timestamp": "2020-07-23 18:07:11"
        }
    },
    "DarkRP.DatabaseInitialized": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:DatabaseInitialized\n| Description = Called when DarkRP has connected to the Database (either MySQL or SQLite)\n| Returns = {{Ret|nil}}\n}}\n==Examples==\n{{Example\n| Description = Do something when the database is initialized\n| Code = hook.Add(\"DatabaseInitialized\", \"DB\", function()\n\tMyMod.Initialize\nend)\n| Output = Initialize your mod when the database connection exists\n}}",
            "timestamp": "2020-07-23 18:07:11"
        }
    },
    "DarkRP.Entity.AddAllowed": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Entity:AddAllowed |\n\targuments\t= {{Arg|Player|ply}} |\n\tdescription\t= Allows a player to own the door.|\n\tlibrary\t\t= {{Type|Entity}} |\n\tlua_state\t= {{Serverside}} |\n}}\n\n==Examples==\n{{lua example |\n  description = Adds a function to make a certain player allowed to own the door.|\n  useOn = {{Serverside}} |\n  code = function AdminAddOwnership( trace, playeradd )\n\ttrace.Entity:AddAllowed( playeradd )\nend |\n}}\n\n==Additional Notes==\n*Doesn't make the player own the door, only allows them.",
            "timestamp": "2020-07-23 18:07:11"
        }
    },
    "DarkRP.Entity.AddOwner": {
        "en": {
            "content": "#REDIRECT [[DarkRP.Entity.addDoorOwner]]",
            "timestamp": "2020-07-23 18:07:11"
        }
    },
    "DarkRP.Entity.AllowedToOwn": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Entity:AllowedToOwn |\n\tdescription\t= Returns true or false depending on if the player has been given ownership rights. |\n\targuments\t= {{Arg|Player|ply}} |\n\tlibrary\t\t= {{Type|Entity}} |\n\tlua_state\t\t= {{Shared}} |\n        returns       \t= {{Type|boolean}} |\n}}\n\n==Examples==\n\n{{lua example |\n  description = Prints to the owner of the door that ply wants to own the door. |\n  useOn = {{Shared}} |\n  code = function WantsToOwn( ply, door )\n\tif door:AllowedToOwn( ply ) then\n\t\tdoor:GetDoorOwner():ChatPrint( ply:Nick() .. \" wants to own your door too!\" )\n\tend\nend |\n}}\n\n==Additional Notes==\n*This is not a check for door ownership ban function.",
            "timestamp": "2020-07-23 18:07:11"
        }
    },
    "DarkRP.Entity.DoorIndex": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Entity:DoorIndex |\n\tdescription\t= Returns the door index (the ent index - the server's max players). |\n\tlibrary\t\t= {{Type|Entity}} |\n\tlua_state\t\t= {{Shared}} |\n        returns       \t= {{Type|number}}|\n}}",
            "timestamp": "2020-07-23 18:07:11"
        }
    },
    "DarkRP.Entity.DrawOwnableInfo": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Entity:DrawOwnableInfo |\n\tdescription\t= Draws the door owner info. |\n\tlibrary\t\t= {{Type|Entity}} |\n\tlua_state\t\t= {{Clientside}} |\n}}",
            "timestamp": "2020-07-23 18:07:11"
        }
    },
    "DarkRP.Entity.GetDoorOwner": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Entity:GetDoorOwner |\n\tdescription\t= Returns the door owner.|\n\tlibrary\t\t= {{Type|Entity}} |\n\tlua_state\t= {{Shared}} |\n        returns         = {{Type|Player}}|\n}}\n\n==Examples==\n\n{{lua example |\n  description = Sends a message to the door owner saying that a player wants to own their door. |\n  useOn = {{Serverside}} |\n  code = function WantsToOwn( ply, door )\n\tif door:AllowedToOwn( ply ) then\n\t\tdoor:GetDoorOwner():ChatPrint( ply:Nick() .. \" wants to own your door too!\" )\n\tend\nend |\n}}\n\n==Additional Notes==\n*Will return nil if there is no door owner.\n*Can sometimes return owners that have disconnected recently.",
            "timestamp": "2020-07-23 18:07:11"
        }
    },
    "DarkRP.Entity.IsDoor": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Entity:IsDoor |\n\tdescription\t= Checks if the entity is a door.|\n\tlibrary\t\t= {{Type|Entity}} |\n\tlua_state\t= {{Shared}} |\n        returns         = {{Type|boolean}}|\n}}\n\n==Examples==\n\n{{lua example |\n  description = Removes all doors. |\n  useOn = {{Serverside}} |\n  code = for _, ent in ipairs(ents.GetAll()) do\n\tif ent:IsDoor() then\n\t\tent:Remove()\n\tend\nend |\n}}\n\n==Additional Notes==\n*Doors that get picked up are: func_door, func_door_rotating, prop_door_rotating and prop_dynamic.",
            "timestamp": "2020-07-23 18:07:11"
        }
    },
    "DarkRP.Entity.IsMasterOwner": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Entity:IsMasterOwner |\n\tdescription\t= Returns true or false depending on if the supplied player is the first owner of the entity. |\n\tlibrary\t\t= {{Type|Entity}} |\n\tlua_state\t= {{Shared}} |\n        returns         = {{Type|boolean}}|\n\targuments\t= {{Arg|Player|player}} |\n}}\n\n==Examples==\n\n{{lua example |\n  description = Adds a function that returns true or false depending on if the supplied player was the first owner of the entity provided (a door works best). |\n  useOn = {{Serverside}} |\n  code = function MasterOwner(ply, ent)\n\treturn ent:IsMasterOwner( ply )\nend | output = Returns true or false depending on if the supplied player was the first owner of the entity provided.\n}}\n\n\n==Additional Notes==\n* This is the same as checking if:\n<div style=\"margin-left: 20px;\">{{Code|1=ply == self:GetDoorOwner()}}</div>",
            "timestamp": "2020-07-23 18:07:12"
        }
    },
    "DarkRP.Entity.IsMoneyBag": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Entity:IsMoneyBag |\n\tdescription\t= Checks if the entity is a money bag. |\n\tlibrary\t\t= {{Type|Entity}} |\n\tlua_state\t= {{Shared}} |\n        returns         = {{Type|boolean}}|\n}}\n\n==Examples==\n\n{{lua example |\n  description = Removes all spawned money. |\n  useOn = {{Serverside}} |\n  code = for _, ent in ipairs(ents.GetAll()) do\n\tif ent:IsMoneyBag() then\n\t\tent:Remove()\n\tend\nend |\n}}\n\n==Additional Notes==\n* A money bag is the \"spawned_money\" entity.",
            "timestamp": "2020-07-23 18:07:12"
        }
    },
    "DarkRP.Entity.IsOwnable": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Entity:IsOwnable |\n\tdescription\t= Checks if the entity is a ownable. The function checks if it is a door and if entity is a vehicle with the owning of vehicles enabled. |\n\tlibrary\t\t= {{Type|Entity}} |\n\tlua_state\t\t= {{Shared}} |\n        returns       \t= {{Type|boolean}}|\n}}\n\n==Examples==\n\n{{lua example |\n  description = Prints \"I can buy this, $$$!\" if the entity is ownable. |\n  useOn = {{Serverside}} |\n  code = if myent:IsOwnable() == true then\n\tprint(\"I can buy this, $$$!\")\nelse\n\tprint(\"Better close your wallet richo!\")\nend |\n}}\n\n==Additional Notes==\n*Function checks if vehicle owning is enabled. Even if it is a vehicle it will return false when vehicle owning is disabled!\n*The door check is not a call to [[DarkRP.Entity.IsDoor|Entity:IsDoor]] but rather a check if the entity's class is func_door, func_door_rotating or prop_door_rotating.",
            "timestamp": "2020-07-23 18:07:12"
        }
    },
    "DarkRP.Entity.IsOwned": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Entity:IsOwned |\n\tdescription\t= Returns true or false depending on if it owned or not.|\n\tlibrary\t\t= {{Type|Entity}} |\n\tlua_state\t\t= {{Shared}} |\n        returns       \t= {{Type|boolean}}|\n}}\n\n==Examples==\n\n{{lua example |\n  description = Removes all owned doors. |\n  useOn = {{Serverside}} |\n  code = function RemoveAllOwned()\n\tfor _, ent in ipairs(ents.GetAll()) do\n\t\tif ent:IsDoor() and ent:IsOwned() then\n\t\t\tent:Remove()\n\t\tend\n\tend  \nend |\n}}\n\n==Additional Notes==\n*Will flag an error on unownable doors.",
            "timestamp": "2020-07-23 18:07:12"
        }
    },
    "DarkRP.Entity.KeysLock": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Entity:KeysLock |\n\tdescription\t= Locks the entity, if possible. |\n\tlibrary\t\t= {{Type|Entity}} |\n\tlua_state\t\t= {{Serverside}} |\n}}\n\n==Examples==\n\n{{lua example |\n  description = Locks all doors. |\n  useOn = {{Serverside}} |\n  code = function LockEverything()\n \tfor _, ent in ipairs(ents.GetAll()) do\n\t\tif ent:IsDoor() then\n\t\t\tent:KeysLock()\n\t\tend\n\tend\nend |\n  output = All doors are locked. |\n}}\n\n==Additional Notes==\n* Examples of entities which can be locked/unlocked include doors and vehicles.",
            "timestamp": "2020-07-23 18:07:12"
        }
    },
    "DarkRP.Entity.KeysUnLock": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Entity:KeysUnLock |\n\tdescription\t= Unlocks the entity, if possible. |\n\tlibrary\t\t= {{Type|Entity}} |\n\tlua_state\t\t= {{Serverside}} |\n}}\n\n==Examples==\n\n{{lua example |\n  description = Unlocks all doors. |\n  useOn = {{Serverside}} |\n  code = function UnlockEverything()\n \tfor _, ent in ipairs(ents.GetAll()) do\n\t\tif ent:IsDoor() then\n\t\t\tent:KeysUnLock()\n\t\tend\n\tend\nend |\n  output = All doors are unlocked. |\n}}\n\n==Additional Notes==\n* Examples of entities which can be locked/unlocked include doors and vehicles.",
            "timestamp": "2020-07-23 18:07:12"
        }
    },
    "DarkRP.Entity.Own": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Entity:Own |\n\tdescription\t= Makes the player own the entity (mainly used if it's a door).|\n\tlibrary\t\t= {{Type|Entity}} |\n\tlua_state\t= {{Serverside}} |\n\targuments\t= {{Arg|Player|player}} |\n}}\n\n==Examples==\n\n{{lua example |\n  description = Makes the player own the door upon touch. |\n  useOn = {{Serverside}} |\n  code = function ENT:Touch( hitEt )\n \tif ( hitEnt:IsValid() and hitEnt:IsPlayer() ) then\n\t\tif (self:IsOwnable() == true) then\n \t\t\tself:Own( hitEt )\n\t\telse\n\t\t\tself:Kill() --You should of put this in a doors code lol!\n\t\tend\n\tend\n end |\n}}",
            "timestamp": "2020-07-23 18:07:12"
        }
    },
    "DarkRP.Entity.OwnedBy": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Entity:OwnedBy |\n\tdescription\t= Returns true if the door is owned by the player supplied.|\n\tlibrary\t\t= {{Type|Entity}} |\n\tlua_state\t= {{Shared}} |\n\targuments\t= {{Arg|Player|player}} |\n        returns         = {{Type|boolean}} |\n}}\n\n==Examples==\n\n{{lua example |\n  description = Checks if the player is admin and the door owner before removing it. |\n  useOn = {{Serverside}} |\n  code = if myent:OwnedBy( ply ) then\n\tif ply:IsAdmin() then\n\t\tmyent:Remove()\n\telse\n\t\tply:ChatPrint(\"Sorry, that feature is admin only!\")\n\tend\nelse\n\tply:ChatPrint(\"That's not your door!\")\nend |\n}}\n\n==Additional Notes==\n*Will return true if the player is a co-owner of the door too.",
            "timestamp": "2020-07-23 18:07:12"
        }
    },
    "DarkRP.Entity.RemoveAllowed": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Entity:RemoveAllowed |\n\targuments\t= {{Arg|Player|ply}} |\n\tdescription\t= Disallows a player to own a door.|\n\tlibrary\t\t= {{Type|Entity}} |\n\tlua_state\t= {{Serverside}} |\n}}\n\n==Examples==\n{{lua example |\n  description = Adds a function to make a certain player removed from the ownership rights list. |\n  useOn = {{Serverside}} |\n  code = function AdminRemoveOwnership( trace, playeradd )\n\ttrace.Entity:RemoveAllowed( playeradd )\nend |\n}}\n\n==Additional Notes==\n*Doesn't make the player un-own the door, only disallows them from owning.",
            "timestamp": "2020-07-23 18:07:12"
        }
    },
    "DarkRP.Entity.RemoveOwner": {
        "en": {
            "content": "#REDIRECT [[DarkRP.Entity.removeDoorOwner]]",
            "timestamp": "2020-07-23 18:07:12"
        }
    },
    "DarkRP.Entity.UnOwn": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Entity:UnOwn |\n\tdescription\t= Makes the provided player un-own the door.|\n\tlibrary\t\t= {{Type|Entity}} |\n\tlua_state\t= {{Serverside}} |\n\targuments\t= {{Arg|Player|player}} |\n}}\n\n==Examples==\n\n{{lua example |\n  description = Makes the player un-own all their doors. |\n  useOn = {{Serverside}} |\n  code = function UnOwnAllPlayerDoors( ply )\n\tfor _, ent in ipairs(ents.GetAll()) do\n\t\tif ent:IsDoor() == true then\n\t\t\tif ent:IsOwnedBy( ply ) == true then\n\t\t\t\tent:UnOwn( ply )\n\t\t\tend\n\t\tend\n\tend  \nend |\n}}\n\n==Additional Notes==\n*If the player does not own the door anyway, the function will stop.\n*You can use [[DarkRP.Player.UnownAll|this]] to un-own all the players doors.",
            "timestamp": "2020-07-23 18:07:13"
        }
    },
    "DarkRP.Entity.addDoorOwner": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Entity:addDoorOwner |\n\targuments\t= {{Arg|Player|ply}} |\n\tdescription\t= Makes another player own the door.|\n\tlibrary\t\t= {{Type|Entity}} |\n\tlua_state\t= {{Serverside}} |\n}}\n\n==Examples==\n{{lua example |\n  description = Makes a player own every door.|\n  useOn = {{Serverside}} |\n  code = --ply = player that's gonna own all these doors\nfor _, ent in ipairs(ents.GetAll()) do\n\tif ent:IsDoor() == true then\n\t\tent:addDoorOwner(ply)\n\tend\nend |\n}}\n\n==Important things to know==\n*AddAllowed makes the player allowed to own the door, this makes the player own it too.",
            "timestamp": "2020-07-23 18:07:13"
        }
    },
    "DarkRP.Entity.removeDoorOwner": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Entity:removeDoorOwner |\n\targuments\t= {{Arg|Player|ply}} |\n\tdescription\t= Makes a player no longer own the door.|\n\tlibrary\t\t= {{Type|Entity}} |\n\tlua_state\t= {{Serverside}} |\n}}\n\n==Examples==\n{{lua example |\n  description = Makes a player no longer own every door that he has group ownership with. |\n  useOn = {{Serverside}} |\n  code = --ply = player that's gonna loose all his/her doors\nfor _, ent in ipairs(ents.GetAll()) do\n\tif ent:IsDoor() == true then\n\t\tent:removeDoorOwner(ply)\n\tend\nend |\n}}\n\n==Important things to know==\n*RemoveAllowed makes the player no longer allowed to own the door, this makes the player actually unown the door.",
            "timestamp": "2020-07-23 18:07:13"
        }
    },
    "DarkRP.F4MenuTabs": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:F4MenuTabs\n| Description = Called when tab modifications should be made. Any modifications to the F4 menu should be done in this hook.\n| Returns = {{Ret|nil}}\n}}\n==Examples==\n=== Add a tab to the F4 menu ===\n{{Example\n| Description = Add your own tab to the F4 menu\n| Code = \nfunction createMyTab()\n\tlocal tab = vgui.Create(\"whatever...\")\n\t-- Create the your tab here or something\n\treturn tab\nend\n\nhook.Add(\"F4MenuTabs\", \"addTab\", function()\n\t-- Add the tab to F4 (will be added as fifth tab)\n\t-- GAMEMODE:addF4MenuTab(\"NAME OF TAB HERE\", vguiControlOfTab, \"Icon here!\") returns the tab number of the added tab\n\tlocal tabNr = GAMEMODE:addF4MenuTab(\"My Custom tab\", createMyTab(), \"icon16/money.png\")\n\n\n\t-- I want it to be before the HUD tab (which is the fourth tab)\n\t-- GAMEMODE:switchTabOrder(TabNumberOfFirstTab, TabNumberOfSecondTab)\n\tGAMEMODE:switchTabOrder(tabNr, 4)\nend)\n\n| Output = Your tab is added to the F4 menu\n}}\n=== Remove a tab from F4 ===\n{{Example\n| Description = Remove the HUD tab\n| Code = \nhook.Add(\"F4MenuTabs\", \"removeTab\", function()\n\t-- the HUD tab is the fourth one\n\t-- GAMEMODE:removeTab(TabNumber)\n\tGAMEMODE:removeTab(4)\nend)\n\n| Output = HUD tab is gone.\n}}",
            "timestamp": "2020-07-23 18:07:13"
        }
    },
    "DarkRP.GetDoorCost": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:GetDoorCost\n| Description = Called when a player attempts to buy a door. This hook gets the money amount.\n| Returns = {{Ret|number|cost|The cost of the door.}}\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req = true\n| Arg1Desc = The player who is attempting to buy the door.\n\n| Arg2Name = ent\n| Arg2Type = Entity\n| Arg2Desc = The door that is being bought\n}}\n\n==Examples==\n{{Example\n| Description = Makes doors free for admins\n| Code = hook.Add( \"GetDoorCost\", \"FreeAdminDoors\", function( objPl )\n\treturn objPl:IsAdmin( ) and 0 or GetConVarNumber( \"doorcost\" );\nend );\n\n| Output = All admins will get free doors\n}}",
            "timestamp": "2020-07-23 18:07:13"
        }
    },
    "DarkRP.GetVehicleCost": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:GetVehicleCost\n| Description = Called when a player attempts to buy a vehicle. This hook gets the money amount.\n| Returns = {{Ret|number|cost|The cost of the vehicle.}}\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req = true\n| Arg1Desc = The player who is attempting to buy the vehicle.\n\n| Arg2Name = ent\n| Arg2Type = Entity\n| Arg2Desc = The Vehicle that is being bought\n}}\n\n==Examples==\n{{Example\n| Description = Makes Vehicles free for admins\n| Code = hook.Add( \"GetVehicleCost\", \"FreeAdminVehicles\", function( objPl )\n\tif objPl:IsAdmin( ) then return 0 end\nend );\n\n| Output = All admins will get free Vehicles\n}}",
            "timestamp": "2020-07-23 18:07:13"
        }
    },
    "DarkRP.HideSellDoorMessage": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:HideSellDoorMessage\n| Description = Hide the popup message when someone sells a door. \n| Returns = {{Ret|boolean|HideSellDoorMessage|whether the sell door message should not be hidden. false <nowiki>=</nowiki> no messages.}}\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req = true\n| Arg1Desc = The player who is attempting to sell the door.\n\n| Arg2Name = ent\n| Arg2Type = Entity\n| Arg2Desc = The door that is being sold\n}}\n\n==Examples==\n{{Example\n| Description = No door messages at all\n| Code = hook.Add( \"HideSellDoorMessage\", \"NoMessages\", function(ply, ent)\n\treturn false\nend)\n\n| Output = No door messages at all\n}}",
            "timestamp": "2020-07-23 18:07:13"
        }
    },
    "DarkRP.Player.AddMoney": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Player:AddMoney |\n\targuments\t= {{Arg|number|amount}} |\n\tdescription\t= Adds a certain amount of money to the players supply. Negative values take money. |\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Serverside}} |\n}}\n\n==Examples==\n{{lua example |\n  description = Add some cash to the players balance|\n  useOn = {{Serverside}} |\n  code = function AddSomeCash( ply )\n\tply:AddMoney(100)\nend |\n}}\n\n{{lua example |\n  description = Take away some cash from the players balance|\n  useOn = {{Serverside}} |\n  code = function TakeCash( ply, amount )\n\tply:AddMoney(-amount)\nend |\n}}\n\n==Additional Notes==\n*The function is serverside. The changes will automatically be sent to the client.",
            "timestamp": "2020-07-23 18:07:13"
        }
    },
    "DarkRP.Player.Arrest": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Player:Arrest |\n\targuments\t= {{Arg|number|time}}, {{Arg|boolean|rejoin}} |\n\tdescription\t= Arrests the player with the given time or the default jailing time.|\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Serverside}} |\n}}\n\n==Examples==\n{{lua example |\n  description = Arrests all players for default jail time|\n  useOn = {{Shared}} |\n  code = function ArrestAll( )\n\tfor k, v in pairs(player.GetAll()) do\n   \t\tv:Arrest()\n\tend\nend |\n}}\n\n==Additional Notes==\n*The rejoin argument is used by the function, it forces the arrest and teleports the player to jail even if they are already arrested.\n*If time is set to nothing, the arrest function will use the default time.\n*You can call it like this, Player:Arrest() without the arguments.",
            "timestamp": "2020-07-23 18:07:14"
        }
    },
    "DarkRP.Player.CanAfford": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Player:CanAfford |\n\targuments\t= {{Arg|number|money}} |\n\tdescription\t= Returns true or false depending on if the player can afford the amount provided.|\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Shared}} |\n        returns         = {{Type|boolean}}|\n}}\n\n==Examples==\n{{lua example |\n  description = Checks if the player can afford a pie. |\n  useOn = {{Serverside}} | <!-- Is serverside as the example uses Player.Give which is serverside -->\n  code = function GivePieSwep( ply )\n\tif (ply:CanAfford(100) == true) then\n\t\tply:Give(\"pie_swep\")\n\tend\nend |\n}}",
            "timestamp": "2020-07-23 18:07:14"
        }
    },
    "DarkRP.Player.ChangeAllowed": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Player:ChangeAllowed |\n\targuments\t= {{Arg|string|team}} |\n\tdescription\t= Returns true or false depending on if the player is allowed, true means he/she is not banned.|\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Serverside}} |\n\treturns = {{Type|boolean}} |\n}}\n\n==Examples==\n{{lua example |\n  description = Sets if the player is banned or not to a global table. |\n  useOn = {{Serverside}} |\n  code = CopBannedPlayers = {}\nfunction CheckPlayer( ply )\n\tif ply:ChangeAllowed(TEAM_POLICE) == true then\n\t\t--Continue\n\telse\n\t\ttable.insert(CopBannedPlayers, ply)\n\tend\nend |\n}}\n\n==Additional Notes==\n*True = Allowed and not Banned, False = Banned",
            "timestamp": "2020-07-23 18:07:14"
        }
    },
    "DarkRP.Player.ChangeTeam": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Player:ChangeTeam |\n\tdescription\t= Changes the players team|\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t\t= {{Serverside}} |\n\targuments\t= {{Arg|table|team}}, {{Arg|boolean|force}} |\n\treturns\t\t= {{Type|boolean}} |\n}}\n\n==Examples==\n\n{{lua example |\n  description = Change a player's team by saying: /IDon'tBelieve |\n  useOn = {{Serverside}} |\n  code = local function LastSaid( ply, text, team, death )\n    if (string.sub(text, 1, 14) == \"/IDon'tBelieve\") then\n        ply:ChangeTeam( TEAM_HOBO, true )\n    end\nend\nhook.Add( \"PlayerSay\", \"LastSaid\", LastSaid );|\n  output = The player turns into a hobo.\n}}\n\n==Additional Notes==\n* Returns false if the job could not be changed (eg. team ban, arrested, escaping demotion), true if the player's job changed successfully.",
            "timestamp": "2020-07-23 18:07:14"
        }
    },
    "DarkRP.Player.CompleteSentence": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Player:CompleteSentence |\n\tdescription\t= Arrests the player forcing them to rejoin. |\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Serverside}} |\n}}\n\n==Examples==\n{{lua example |\n  description = Arrests a player with a certain Steam ID. |\n  useOn = {{Serverside}} |\n  code = function ArrestBySteamComplete( steamid )\n\tfor k, v in pairs(player.GetAll()) do\n\t\tif v:SteamID() == steamid then\n\t\t\t--Found the player\n\t\t\tv:CompleteSentence()\n\t\tend\n\tend\nend |\n}}\n\n==Additional Notes==\n*Same as using arrest(GAMEMODE.Config.jailtimer, true)\n*Is used when people rejoin whilst arrested",
            "timestamp": "2020-07-23 18:07:14"
        }
    },
    "DarkRP.Player.DoPropertyTax": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Player:DoPropertyTax |\n\tdescription\t= If the config is set to property tax, this function will trigger a rent day. If the player dosen't pay up, all their owned doors and vehicles will be unowned. See [[DarkRP.Player.UnownAll|Player.UnownAll]].|\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Serverside}} |\n}}\n\n==Examples==\n{{lua example |\n  description =Triggers property tax for every non-admin player.|\n  useOn = {{Serverside}} |\n  code = function TriggerAll( )\n\tfor k, v in pairs(player.GetAll()) do\n\t\tif v:IsAdmin() == false or v:IsSuperAdmin() == false then\n\t\t\tv:DoPropertyTax()\n\t\tend\n\tend\nend |\n}}\n\n==Additional Notes==\n*In the example, super admins will still count as admins. The super admin function is in for teaching purposes only.",
            "timestamp": "2020-07-23 18:07:14"
        }
    },
    "DarkRP.Player.DropDRPWeapon": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Player:DropDRPWeapon |\n\tdescription\t= Drops the player's weapon as a DarkRP entity (spawned_weapon) |\n\targuments\t= {{Arg|Entity|weapon}} |\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Serverside}} |\n}}\n\n==Examples==\n{{lua example |\n  description = Drops the weapon the player is holding. |\n  useOn = {{Serverside}} |\n  code = function DropActiveWeapon(ply)\n\tply:DropDRPWeapon(ply:GetActiveWeapon())\nend |\n}}",
            "timestamp": "2020-07-23 18:07:14"
        }
    },
    "DarkRP.Player.DropPocketItem": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Player:DropPocketItem |\n\tdescription\t= Drops the entity from the player's pocket. |\n\targuments\t= {{Arg|Entity|ent}} |\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Serverside}} |\n}}\n\n==Examples==\n{{lua example |\n  description = Drops the entity in given slot of the player's pocket |\n  useOn = {{Serverside}} |\n  code = function DropActiveWeapon(ply, slot)\n\tply:DropPocketItem(ply.Pocket[i])\nend |\n}}",
            "timestamp": "2020-07-23 18:07:14"
        }
    },
    "DarkRP.Player.GrantPriv": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Player:GrantPriv |\n\targuments\t= {{Arg|string|priv}} |\n\tdescription\t= Grants the player a privilege.|\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Serverside}} |\n}}\n\n==Examples==\n{{lua example |\n  description = Give every player the toolgun privilege.|\n  useOn = {{Serverside}} |\n  code = function GiveAllToolgunPriv )\n\tfor k, v in pairs(player.GetAll()) do\n   \t\tv:GrantPriv(\"tool\")\n\tend\nend |\n}}\n\n==Additional Notes==\n*Possible privileges are: admin, mayor, cp, tool, phys and prop\n*'''This function has been removed and has been replaced with FAdmin.'''",
            "timestamp": "2020-07-23 18:07:14"
        }
    },
    "DarkRP.Player.HasPriv": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Player:HasPriv |\n\targuments\t= {{Arg|string|priv}} |\n\tdescription\t= Returns true or false depending on if the player has the privilige.|\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Serverside}} |\n\treturns = {{Type|boolean}} |\n}}\n\n==Examples==\n{{lua example |\n  description = If the player is an admin, give player the cookie item/swep (non-existent)|\n  useOn = {{Serverside}} |\n  code = function DoIGetACookie( ply )\n\tif ply:HasPriv(\"admin\") then\n\t\tply:Give(\"cookie\")\n\telse\n\t\tply:Kill()\n\tend\nend |\n}}\n\n==Additional Notes==\n*Possible privilages are: admin, mayor, cp, tool, phys and prop.",
            "timestamp": "2020-07-23 18:07:15"
        }
    },
    "DarkRP.Player.InitiateTax": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Player:InitiateTax |\n\tdescription\t= Starts the timer which takes wallet tax from the player, as set in the config. Called from [[DarkRP.Player.NewData|Player:NewData]]. |\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Serverside}} |\n}}\n==Additional Notes==\n* Usually unnecessary to call.",
            "timestamp": "2020-07-23 18:07:15"
        }
    },
    "DarkRP.Player.IsCP": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Player:IsCP |\n\tdescription\t= Returns true or false depending on if the player is in any of the police jobs as defined in shared.lua. |\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Shared}} |\n        returns         = {{Type|boolean}} |\n}}\n\n==Examples==\n{{lua example |\n  description = Automaticly unarrests all cops. (Untested code, might not work)|\n  useOn = {{Serverside}} |\n  code = local function Tick()\n\tlocal players = player.GetAll()\n\tfor _,ply in ipairs(players) do\n\t\tif ply:IsCP() then\n\t\t\tply:Unarrest()\n\t\tend\n\tend\nend\nhook.Add(\"Think\",\"DarkRPExampleTick\",Tick) |\n  output = All cops unarrested.\n}}\n\n==Additional Notes==\n* A job can be set as a CP in shared.lua.",
            "timestamp": "2020-07-23 18:07:15"
        }
    },
    "DarkRP.Player.NewData": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Player:NewData |\n\tdescription\t= Setup the player when he joins. This shouldn't be used elsewhere.|\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Serverside}} |\n}}\n\n==Examples==\n{{lua example |\n  description =The function how it's defined in DarkRP. |\n  useOn = {{Serverside}} |\n  code = function meta:NewData()\n\tif not IsValid(self) then return end\n\tself.DarkRPUnInitialized = true\n\tself:RestorePlayerData()\n\n\ttimer.Simple(5, function()\n\t\tif not IsValid(self) then return end\n\n\t\tif GetConVarNumber(\"DarkRP_Lockdown\") == 1 then\n\t\t\tRunConsoleCommand(\"DarkRP_Lockdown\", 1) -- so new players who join know there's a lockdown\n\t\tend\n\tend)\n\n\tself:InitiateTax()\n\n\tself:UpdateJob(team.GetName(1))\n\n\tself:GetTable().Ownedz = { }\n\tself:GetTable().OwnedNumz = 0\n\n\tself:GetTable().LastLetterMade = CurTime() - 61\n\tself:GetTable().LastVoteCop = CurTime() - 61\n\n\tself:SetTeam(1)\n\n\t-- Whether or not a player is being prevented from joining\n\t-- a specific team for a certain length of time\n\tfor i = 1, #RPExtraTeams do\n\t\tif GAMEMODE.Config.restrictallteams then\n\t\t\tself.bannedfrom[i] = 1\n\t\telse\n\t\t\tself.bannedfrom[i] = 0\n\t\tend\n\tend\nend |\n}}\n\n==Additional Notes==\n* Don't use this function anywhere except in the \"PlayerInitialSpawn\" hook.",
            "timestamp": "2020-07-23 18:07:15"
        }
    },
    "DarkRP.Player.PayDay": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Player:PayDay |\n\tdescription\t= Will trigger a pay day.|\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Serverside}} |\n}}\n\n==Examples==\n{{lua example |\n  description =Part of a weapon that gives the victim a pay day, my kinda punishment. |\n  useOn = {{Serverside}} |\n  code = if SERVER then\n\tAddCSLuaFile(\"shared.lua\")\nend\n\nif CLIENT then\n\tSWEP.PrintName = \"Pay Day Baton\"\n\tSWEP.Slot = 1\n\tSWEP.SlotPos = 3\n\tSWEP.DrawAmmo = false\n\tSWEP.DrawCrosshair = false\nend\n\nSWEP.Author = \"KillerLUA\"\nSWEP.Instructions = \"Left or right click to give the player a pay day\"\nSWEP.Contact = \"\"\nSWEP.Purpose = \"\"\n\nSWEP.ViewModelFOV = 62\nSWEP.ViewModelFlip = false\nSWEP.AnimPrefix = \"stunstick\"\n\nSWEP.Spawnable = false\nSWEP.AdminSpawnable = true\n\nSWEP.NextStrike = 0\n\nSWEP.ViewModel = Model(\"models/weapons/v_stunstick.mdl\")\nSWEP.WorldModel = Model(\"models/weapons/w_stunbaton.mdl\")\n\nSWEP.Sound = Sound(\"weapons/stunstick/stunstick_swing1.wav\")\n\nSWEP.Primary.ClipSize = -1\nSWEP.Primary.DefaultClip = 0\nSWEP.Primary.Automatic = false \nSWEP.Primary.Ammo = \"\"\n\nSWEP.Secondary.ClipSize = -1\nSWEP.Secondary.DefaultClip = 0\nSWEP.Secondary.Automatic = false\nSWEP.Secondary.Ammo = \"\"\n\nfunction SWEP:Initialize()\n\tif SERVER then self:SetWeaponHoldType(\"normal\") end\nend\n\nfunction SWEP:PrimaryAttack()\n\tif CurTime() < self.NextStrike then return end\n\n\tif SERVER then\n\t\tself:SetWeaponHoldType(\"melee\")\n\t\ttimer.Simple(0.3, function(wep) if wep:IsValid() then wep:SetWeaponHoldType(\"normal\") end end, self)\n\tend\n\tself.Owner:SetAnimation(PLAYER_ATTACK1)\n\tself.Weapon:EmitSound(self.Sound)\n\tself.Weapon:SendWeaponAnim(ACT_VM_HITCENTER)\n\n\tself.NextStrike = CurTime() + .4\n\t\n\tif CLIENT then return end\n\n\ttrace.Entity:PayDay()\nend\n\nfunction SWEP:SecondaryAttack()\n\tself:PrimaryAttack()\nend |\n}}\n\n==Additional Notes==\n*Get the full weapon tutorial [[LUA:Pay Day Baton|here]].",
            "timestamp": "2020-07-23 18:07:15"
        }
    },
    "DarkRP.Player.ResetDMCounter": {
        "en": {
            "content": "[[Category:Functions|getDarkRPVar]]\n[[Category:Player|getDarkRPVar]]\n[[Category:Shared|getDarkRPVar]]\n{{Lua_function |\n\tfunction_name\t= Player:getDarkRPVar |\n\targuments\t= {{Type|string}} var |\n\tdescription\t= Get the value of a DarkRPVar, which is shared between server and client. |\n\tdeprecated\t=  |\n\treturns \t= {{Type|any}} value |\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = var\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the variable.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = value\n| Arg1Type = any\n| Arg1Desc = The value of the DarkRP var.\n\n}}\n\n\n== List of DarkRP Variables (To be put in getDarkRPVar( \" \" ) ) ==\n\n* AFK\n* AFKDemoted\n* money\n* salary\n* rpname\n* job\n* HasGunlicense\n* Arrested\n* wanted\n* wantedReason\n* agenda\n* zombieToggle ( Whether the person toggled to a zombie during the zombie event )\n* hitTarget\n* hitPrice\n* lastHitTime\n* Energy (This is what hungermod uses for hunger)\n\n== Example Code ==\n___________________________________________________________________________________________\n\n for _, player in ipairs(player.GetAll()) do\n    print( player:getDarkRPVar(\"rpname\") , player:getDarkRPVar(\"job\") , player:GetDarkRPVar(\"money\") , player:getDarkRPVar(\"Arrested\"))\n end\n\nResult of Code: Quang\tCitizen\t2500\tfalse",
            "timestamp": "2022-01-02 21:48:26"
        }
    },
    "DarkRP.Player.RestorePlayerData": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Player:RestorePlayerData |\n\tdescription\t= Retrieves the player's data from the database. |\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Serverside}} |\n}}\n\n==Examples==\n{{lua example |\n  description = Restores a player's data, used to update the hud. |\n  useOn = {{Serverside}} |\n  code = function UpdateHud( ply )\n\tply:RestorePlayerData()\nend |\n}}\n\n==Additional Notes==\n* If no name set, his/her steam name will become the players role-playing name\n* If the data could not be retrieved from the database, the default starting values are used for your wallet and salary.",
            "timestamp": "2020-07-23 18:07:16"
        }
    },
    "DarkRP.Player.RestoreRPName": {
        "en": {
            "content": "#REDIRECT [[DarkRP.Player.RestorePlayerData]]",
            "timestamp": "2020-07-23 18:07:16"
        }
    },
    "DarkRP.Player.SetDarkRPVar": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Player:SetDarkRPVar |\n\targuments\t= {{Arg|string|Variable}}, {{Arg|any|Value}}, {{Arg|Entity|Target}} |\n\tdescription\t= Sets a variable on the player, both clientside and serverside can access this. But only serverside may change it. |\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Serverside}} |\n}}\n\n==Examples==\n{{lua example |\n  description = Set's a Variable called Wallet on the player. |\n  useOn = {{Serverside}} |\n  code = function SendWallet( ply, Wallet )\n\tply:SetDarkRPVar( \"money\", Wallet )\nend |\n  output = You can now access the Variable using {{Code|1=ply.DarkRPVars[\"money\"]}} or {{Code|1=ply.DarkRPVars.money}} on both server and client.\n}}\n\n==Additional Notes==\n*DarkRPVars can hold Vectors, integers, strings, booleans, Entities, Players and nil\n*This is the ALMOST the same as global variables, however, they are much more efficent, and they can hold unlimited bytes.",
            "timestamp": "2020-07-23 18:07:16"
        }
    },
    "DarkRP.Player.SetRPName": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Player:SetRPName |\n\targuments\t= {{Arg|string|name}}, {{Arg|boolean|firstRun}} |\n\tdescription\t= Set's the player's role-playing name.|\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Serverside}} |\n}}\n\n==Examples==\n{{lua example |\n  description = Sets the player's RP name to \"Mingebag\". |\n  useOn = {{Serverside}} |\n  code = function CallMingebag( ply )\n\tply:SetRPName( \"Mingebag\", false )\nend |\n  output = The player's RP name is now \"Mingebag\"\n}}\n\n==Additional Notes==\n*Changing firstRun to true will make sure that when the name is duplicate, it will put a \"1\" after it instead of saying you can't change your RP name.\n*The role-playing name is saved when set using this command.",
            "timestamp": "2020-07-23 18:07:16"
        }
    },
    "DarkRP.Player.SetSelfDarkRPVar": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Player:SetSelfDarkRPVar |\n\targuments\t= {{Arg|string|Variable}}, {{Arg|any|Value}} |\n\tdescription\t= Sets a variable on the player, both clientside and serverside can access this. But only serverside may change it. |\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Serverside}} |\n}}\n\n==Additional Notes==\n*DarkRPVars can hold Vectors, integers, strings, booleans, Entities, Players and nil\n*This is the ALMOST the same as global variables, however, they are much more efficent, and they can hold unlimited bytes.",
            "timestamp": "2020-07-23 18:07:16"
        }
    },
    "DarkRP.Player.TeamBan": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Player:TeamBan |\n\tdescription\t= Bans the player from their current team or, if supplied, the team passed into the function. |\n\targuments\t= {{Arg|table|team}} |\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Serverside}} |\n}}\n\n==Examples==\n{{lua example |\n  description = Bans the player from their current team. |\n  useOn = {{Serverside}} |\n  code = function AnnoyPlayer( act, ply )\n\tply:TeamBan()\n\tply:ChatPrint(\"Lolz \" .. act.Nick() .. \" just banned you!\")\nend |\n}}\n\n{{lua example |\n  description = Bans the player from the TEAM_POLICE team. |\n  useOn = {{Serverside}} |\n  code = function BanFromPolice( ply )\n\tply:TeamBan(TEAM_POLICE)\nend |\n}}",
            "timestamp": "2020-07-23 18:07:16"
        }
    },
    "DarkRP.Player.TeamUnBan": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Player:TeamUnBan |\n\targuments\t= {{Arg|table|team}} |\n\tdescription\t= Unbans the player from a team. |\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Serverside}} |\n}}\n==Examples==\n{{lua example |\n  description = Unbans the player from the police team. |\n  useOn = {{Serverside}} |\n  code = ply:TeamUnBan(TEAM_POLICE) |\n}}",
            "timestamp": "2020-07-23 18:07:16"
        }
    },
    "DarkRP.Player.Unarrest": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Player:Unarrest |\n\tdescription\t= Frees the player.|\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Serverside}} |\n}}\n\n==Examples==\n{{lua example |\n  description = Frees every player. |\n  useOn = {{Serverside}} |\n  code = function UnarrestAll( )\n\tfor k, v in pairs(player.GetAll()) do\n   \t\tv:Unarrest()\n\tend\nend |\n}}",
            "timestamp": "2020-07-23 18:07:16"
        }
    },
    "DarkRP.Player.UnownAll": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Player:UnownAll |\n\tdescription\t= Unowns all the player's entities and doors.|\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Serverside}} |\n}}\n\n==Examples==\n{{lua example |\n  description = Unowns all entities on player's disconnect. |\n  useOn = {{Serverside}} |\n  code = function pDiscon( ply )\n\tply:UnownAll()\n\t--Notice: This is just example material, this function is called by DarkRP anyway\nend\nhook.Add( \"PlayerDisconnected\", \"playerdisconnected\", pDiscon ) |\n}}\n\n==Additional Notes==\n*All owned doors get unlocked and unowned.\n*Most entities remove themselves after the owner has been set to {{Type|nil}}.\n*Usually called when the player disconnects.",
            "timestamp": "2020-07-23 18:07:16"
        }
    },
    "DarkRP.Player.abortHit": {
        "en": {
            "content": "{{Syntax\n| Name = abortHit\n| Description = Abort a hit\n| Returns = \n\n| Arg1Name = message\n| Arg1Type = string\n| Arg1Req  = false\n| Arg1Desc = The reason why the hit was aborted\n\n}}",
            "timestamp": "2020-07-23 18:07:17"
        }
    },
    "DarkRP.Player.arrest": {
        "en": {
            "content": "{{Syntax\n| Name = arrest\n| Description = Arrest a player\n| Returns = \n\n| Arg1Name = time\n| Arg1Type = number\n| Arg1Req  = false\n| Arg1Desc = For how long the player is arrested\n\n\n| Arg2Name = Arrester\n| Arg2Type = Player\n| Arg2Req  = false\n| Arg2Desc = The player who arrested the target\n\n}}",
            "timestamp": "2020-07-23 18:07:17"
        }
    },
    "DarkRP.Player.drawHitInfo": {
        "en": {
            "content": "[[Category:Functions|getDarkRPVar]]\n[[Category:Player|getDarkRPVar]]\n[[Category:Shared|getDarkRPVar]]\n{{Lua_function |\n\tfunction_name\t= Player:getDarkRPVar |\n\targuments\t= {{Type|string}} var |\n\tdescription\t= Get the value of a DarkRPVar, which is shared between server and client. |\n\tdeprecated\t=  |\n\treturns \t= {{Type|any}} value |\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = var\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the variable.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = value\n| Arg1Type = any\n| Arg1Desc = The value of the DarkRP var.\n\n}}\n\n\n== List of DarkRP Variables (To be put in getDarkRPVar( \" \" ) ) ==\n\n* AFK\n* AFKDemoted\n* money\n* salary\n* rpname\n* job\n* HasGunlicense\n* Arrested\n* wanted\n* wantedReason\n* agenda\n* zombieToggle ( Whether the person toggled to a zombie during the zombie event )\n* hitTarget\n* hitPrice\n* lastHitTime\n* Energy (This is what hungermod uses for hunger)\n\n== Example Code ==\n___________________________________________________________________________________________\n\n for _, player in ipairs(player.GetAll()) do\n    print( player:getDarkRPVar(\"rpname\") , player:getDarkRPVar(\"job\") , player:GetDarkRPVar(\"money\") , player:getDarkRPVar(\"Arrested\"))\n end\n\nResult of Code: Quang\tCitizen\t2500\tfalse",
            "timestamp": "2022-01-02 21:48:26"
        }
    },
    "DarkRP.Player.finishHit": {
        "en": {
            "content": "{{Syntax\n| Name = finishHit\n| Description = End a hit without a message\n| Returns = \n\n\n}}",
            "timestamp": "2020-07-23 18:07:17"
        }
    },
    "DarkRP.Player.getHitCustomer": {
        "en": {
            "content": "{{Syntax\n| Name = getHitCustomer\n| Description = Get the customer for the current hit\n| Returns = {{Ret|Player|\"customer\"|The customer for the current hit}}\n\n\n}}",
            "timestamp": "2020-07-23 18:07:17"
        }
    },
    "DarkRP.Player.getHitPrice": {
        "en": {
            "content": "{{Syntax\n| Name = getHitPrice\n| Description = Get the price the hitman demands for his work\n| Returns = {{Ret|number|\"price\"|The price of the next hit.}}\n\n\n}}",
            "timestamp": "2020-07-23 18:07:17"
        }
    },
    "DarkRP.Player.getHitTarget": {
        "en": {
            "content": "{{Syntax\n| Name = getHitTarget\n| Description = Get the target of a hitman\n| Returns = {{Ret|Player|\"target\"|The target of the hit.}}\n\n\n}}",
            "timestamp": "2020-07-23 18:07:17"
        }
    },
    "DarkRP.Player.getWantedReason": {
        "en": {
            "content": "{{Syntax\n| Name = getWantedReason\n| Description = Get the reason why someone is wanted\n| Returns = {{Ret|string|\"answer\"|The reason}}\n\n\n}}",
            "timestamp": "2020-07-23 18:07:17"
        }
    },
    "DarkRP.Player.hasHit": {
        "en": {
            "content": "{{Syntax\n| Name = hasHit\n| Description = Whether this hitman has a hit\n| Returns = {{Ret|boolean|\"answer\"|Whether this player has a hit}}\n\n\n}}",
            "timestamp": "2020-07-23 18:07:17"
        }
    },
    "DarkRP.Player.isArrested": {
        "en": {
            "content": "[[Category:Functions|getDarkRPVar]]\n[[Category:Player|getDarkRPVar]]\n[[Category:Shared|getDarkRPVar]]\n{{Lua_function |\n\tfunction_name\t= Player:getDarkRPVar |\n\targuments\t= {{Type|string}} var |\n\tdescription\t= Get the value of a DarkRPVar, which is shared between server and client. |\n\tdeprecated\t=  |\n\treturns \t= {{Type|any}} value |\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = var\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the variable.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = value\n| Arg1Type = any\n| Arg1Desc = The value of the DarkRP var.\n\n}}\n\n\n== List of DarkRP Variables (To be put in getDarkRPVar( \" \" ) ) ==\n\n* AFK\n* AFKDemoted\n* money\n* salary\n* rpname\n* job\n* HasGunlicense\n* Arrested\n* wanted\n* wantedReason\n* agenda\n* zombieToggle ( Whether the person toggled to a zombie during the zombie event )\n* hitTarget\n* hitPrice\n* lastHitTime\n* Energy (This is what hungermod uses for hunger)\n\n== Example Code ==\n___________________________________________________________________________________________\n\n for _, player in ipairs(player.GetAll()) do\n    print( player:getDarkRPVar(\"rpname\") , player:getDarkRPVar(\"job\") , player:GetDarkRPVar(\"money\") , player:getDarkRPVar(\"Arrested\"))\n end\n\nResult of Code: Quang\tCitizen\t2500\tfalse",
            "timestamp": "2022-01-02 21:48:26"
        }
    },
    "DarkRP.Player.isHitman": {
        "en": {
            "content": "{{Syntax\n| Name = isHitman\n| Description = Whether this player is a hitman\n| Returns = {{Ret|boolean|\"answer\"|Whether this player is a hitman}}\n}}",
            "timestamp": "2020-07-23 18:07:18"
        }
    },
    "DarkRP.Player.isWanted": {
        "en": {
            "content": "{{Syntax\n| Name = isWanted\n| Description = Whether this player is wanted\n| Returns = {{Ret|boolean|\"answer\"|Whether this player is wanted}}\n\n\n}}",
            "timestamp": "2020-07-23 18:07:18"
        }
    },
    "DarkRP.Player.placeHit": {
        "en": {
            "content": "{{Syntax\n| Name = placeHit\n| Description = Place an actual hit.\n| Returns = \n\n| Arg1Name = customer\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The customer who paid for the hit.\n\n\n| Arg2Name = target\n| Arg2Type = Player\n| Arg2Req  = true\n| Arg2Desc = The target of the hit.\n\n\n| Arg3Name = price\n| Arg3Type = number\n| Arg3Req  = true\n| Arg3Desc = The price of the hit.\n\n}}",
            "timestamp": "2020-07-23 18:07:18"
        }
    },
    "DarkRP.Player.requestHit": {
        "en": {
            "content": "{{Syntax\n| Name = requestHit\n| Description = Request a hit to a hitman.\n| Returns = {{Ret|boolean|\"succeeded\"|Whether the hit request could be made.}}\n\n| Arg1Name = customer\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The customer who paid for the hit.\n\n\n| Arg2Name = target\n| Arg2Type = Player\n| Arg2Req  = true\n| Arg2Desc = The target of the hit.\n\n\n| Arg3Name = price\n| Arg3Type = number\n| Arg3Req  = true\n| Arg3Desc = The price of the hit.\n\n}}",
            "timestamp": "2020-07-23 18:07:18"
        }
    },
    "DarkRP.Player.requestWarrant": {
        "en": {
            "content": "{{Syntax\n| Name = requestWarrant\n| Description = File a request for a search warrant.\n| Returns = \n\n| Arg1Name = suspect\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player who is suspected\n\n\n| Arg2Name = actor\n| Arg2Type = Player\n| Arg2Req  = true\n| Arg2Desc = The player who wants the warrant\n\n\n| Arg3Name = reason\n| Arg3Type = string\n| Arg3Req  = true\n| Arg3Desc = The reason for the warrant\n\n}}",
            "timestamp": "2020-07-23 18:07:18"
        }
    },
    "DarkRP.Player.setArrested": {
        "en": {
            "content": "{{Lua_function |\n\tgamemode = DarkRP |\n\tfunction_name\t= Player:setArrested |\n\tdescription\t= Sets the player as arrested or not in the arrested players list. Do not use for simple arrest/unarrest. |\n\targuments\t= {{Arg|boolean|bool}} |\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Serverside}} |\n}}\n==Additional Notes==\n* '''Do not use for simple arrest/unarrest.'''\n* To arrest a player, use [[DarkRP.Player.Arrest|Player:Arrest]] instead.\n* To unarrest a player, user [[DarkRP.Player.Unarrest|Player:Unarrest]] instead.\n* This function is called in both of the above.",
            "timestamp": "2020-07-23 18:07:18"
        }
    },
    "DarkRP.Player.setHitCustomer": {
        "en": {
            "content": "{{Syntax\n| Name = setHitCustomer\n| Description = Set the customer who pays for the hit.\n| Returns = \n\n| Arg1Name = customer\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The customer who paid for the hit.\n\n}}",
            "timestamp": "2020-07-23 18:07:18"
        }
    },
    "DarkRP.Player.setHitPrice": {
        "en": {
            "content": "{{Syntax\n| Name = setHitPrice\n| Description = Set the price of a hit\n| Returns = \n\n| Arg1Name = price\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The price of the hit.\n\n}}",
            "timestamp": "2020-07-23 18:07:18"
        }
    },
    "DarkRP.Player.setHitTarget": {
        "en": {
            "content": "{{Syntax\n| Name = setHitTarget\n| Description = Set the target of a hit\n| Returns = \n\n| Arg1Name = target\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The target of the hit.\n\n}}",
            "timestamp": "2020-07-23 18:07:18"
        }
    },
    "DarkRP.Player.stopHitInfo": {
        "en": {
            "content": "{{Syntax\n| Name = stopHitInfo\n| Description = Stop drawing the hit information above a hitman.\n| Returns = \n\n\n}}",
            "timestamp": "2020-07-23 18:07:18"
        }
    },
    "DarkRP.Player.unArrest": {
        "en": {
            "content": "{{Syntax\n| Name = unArrest\n| Description = Unarrest a player\n| Returns = \n\n| Arg1Name = Unarrester\n| Arg1Type = Player\n| Arg1Req  = false\n| Arg1Desc = The player who unarrested the target\n\n}}",
            "timestamp": "2020-07-23 18:07:18"
        }
    },
    "DarkRP.Player.unWanted": {
        "en": {
            "content": "{{Syntax\n| Name = unWanted\n| Description = Clear the wanted status for this person\n| Returns = \n\n| Arg1Name = actor\n| Arg1Type = Player\n| Arg1Req  = false\n| Arg1Desc = The player who cleared the wanted status\n\n}}",
            "timestamp": "2020-07-23 18:07:19"
        }
    },
    "DarkRP.Player.unWarrant": {
        "en": {
            "content": "{{Syntax\n| Name = unWarrant\n| Description = Remove the search warrant for this person\n| Returns = nil\n\n| Arg1Name = unwarranter\n| Arg1Type = Player\n| Arg1Req  = false\n| Arg1Desc = The player who removed the warrant\n\n}}",
            "timestamp": "2020-07-23 18:07:19"
        }
    },
    "DarkRP.Player.wanted": {
        "en": {
            "content": "{{Syntax\n| Name = wanted\n| Description = Make this person wanted by the police\n| Returns = \n\n| Arg1Name = actor\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player who made the other person wanted\n\n\n| Arg2Name = reason\n| Arg2Type = string\n| Arg2Req  = true\n| Arg2Desc = The reason for the wanted status\n\n}}",
            "timestamp": "2020-07-23 18:07:19"
        }
    },
    "DarkRP.Player.warrant": {
        "en": {
            "content": "{{Syntax\n| Name = warrant\n| Description = Get a search warrant for this person\n| Returns = \n\n| Arg1Name = warranter\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player who set the warrant\n\n\n| Arg2Name = reason\n| Arg2Type = string\n| Arg2Req  = true\n| Arg2Desc = The reason for the warrant\n\n}}",
            "timestamp": "2020-07-23 18:07:19"
        }
    },
    "DarkRP.PlayerArrested": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:PlayerArrested\n| Description = Called when someone is arrested\n| Returns = {{Ret|nil|}}\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req = true\n| Arg1Desc = The player who has been arrested\n\n}}\n\n==Examples==\n{{Example\n| Description = No door messages at all\n| Code = hook.Add( \"PlayerArrested\", \"LaughAt\", function(ply)\n\tply:ChatPrint(\"HAHA YOU GOT ARRESTED\")\nend)\n\n| Output = Arrested players get taunted\n}}",
            "timestamp": "2020-07-23 18:07:19"
        }
    },
    "DarkRP.PlayerBoughtDoor": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:PlayerBoughtDoor\n| Description = Called when a player has bought a door\n| Returns = {{Ret|nil}}\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req = true\n| Arg1Desc = The player who bought it\n\n| Arg2Name = ent\n| Arg2Type = Entity\n| Arg2Req = true\n| Arg2Desc = The door that was bought\n\n| Arg3Name = amount\n| Arg3Type = number\n| Arg3Req = true\n| Arg3Desc = The cost of the door\n\n}}\n\n==Examples==\n{{Example\n| Description = logs purchases \n| Code = hook.Add( \"PlayerBoughtDoor\", \"example\", function(ply, ent, cost)\n\tply:ChatPrint(ply:Nick() .. \" bought a \" .. ent:GetClass() .. \" $\" .. cost)\nend)\n\n| Output = A print message\n}}",
            "timestamp": "2020-07-23 18:07:19"
        }
    },
    "DarkRP.PlayerBoughtVehicle": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:PlayerBoughtVehicle\n| Description = Called when a player has bought a vehicle\n| Returns = {{Ret|nil}}\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req = true\n| Arg1Desc = The player who bought it\n\n| Arg2Name = ent\n| Arg2Type = Entity\n| Arg2Req = true\n| Arg2Desc = The vehicle that was bought\n\n| Arg3Name = amount\n| Arg3Type = number\n| Arg3Req = true\n| Arg3Desc = The cost of the vehicle\n\n}}\n\n==Examples==\n{{Example\n| Description = logs purchases \n| Code = hook.Add( \"PlayerBoughtVehicle\", \"example\", function(ply, ent, cost)\n\tply:ChatPrint(ply:Nick() .. \" bought a \" .. ent:GetClass() .. \" $\" .. cost)\nend)\n\n| Output = A print message\n}}",
            "timestamp": "2020-07-23 18:07:19"
        }
    },
    "DarkRP.PlayerBuyDoor": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:PlayerBuyDoor\n| Description = Called when a player wants to buy a door\n| Returns = {{Ret|boolean|allowed|whether the player is allowed to buy this door.}}{{Ret|string|reason|the reason to give if the player is not allowed to buy the door.}}{{Ret|boolean|surpressMessage|whether the \"You bought this door!\" message should be supressed.}}\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req = true\n| Arg1Desc = The player who wants to buy it\n\n| Arg2Name = ent\n| Arg2Type = Entity\n| Arg2Req = true\n| Arg2Desc = The door in question\n\n}}\n\n==Examples==\n{{Example\n| Description = Allows only citizens to buy the door with EntIndex 31. The reason it gives to non-citizens is that they're not citizens. It also makes sure the message \"You bought this door!\" does not appear (that's what the last true does)\n| Code = hook.Add( \"PlayerBuyDoor\", \"example\", function(ply, ent)\n\tif ent:EntIndex() == 31 then\n\t\treturn ply:Team() == TEAM_CITIZEN, \"You're not a citizen!\", true\n\tend\nend)\n\n| Output = Door 31 is citizen only\n}}\n\n\n{{Example\n| Description = Makes sure hobo's can't buy any doors\n| Code = hook.Add( \"PlayerBuyDoor\", \"example2\", function(ply, ent)\n\treturn ply:Team() ~= TEAM_CITIZEN, \"You're homeless, you can't buy doors!\", true\nend)\n\n| Output = Hobo's can't purchase doors\n}}",
            "timestamp": "2020-07-23 18:07:19"
        }
    },
    "DarkRP.PlayerBuyVehicle": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:PlayerBuyVehicle\n| Description = Called when a player wants to buy a vehicle\n| Returns = {{Ret|boolean|allowed|whether the player is allowed to buy this vehicle.}}{{Ret|string|reason|the reason to give to the player if they are not allowed to buy the vehicle}}{{Ret|boolean|surpressMessage|whether the \"You bought this vehicle!\" message should be surpressed.}}\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req = true\n| Arg1Desc = The player who wants to buy it\n\n| Arg2Name = ent\n| Arg2Type = Entity\n| Arg2Req = true\n| Arg2Desc = The vehicle in question\n\n}}\n\n==Examples==\n{{Example\n| Description = Allows only citizens to buy vehicles. The reason it gives to non-citizens is that they're not citizens. It also makes sure the message \"You bought this vehicle!\" does not appear (that's what the last true does)\n| Code = hook.Add( \"PlayerBuyVehicle\", \"example\", function(ply, ent)\n\treturn ply:Team() == TEAM_CITIZEN, \"You're not a citizen!\", true\nend)\n\n| Output = All vehicles are citizen only\n}}",
            "timestamp": "2020-07-23 18:07:19"
        }
    },
    "DarkRP.PlayerGetSalary": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:PlayerGetSalary\n| Description = Called when a player receives salary\n| Returns = {{Ret|nil|}}\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req = true\n| Arg1Desc = The player who got paid\n\n| Arg2Name = amount\n| Arg2Type = number\n| Arg2Req = true\n| Arg2Desc = The amount of salary in dollars\n\n}}\n\n==Examples==\n{{Example\n| Description = prints players who get salary\n| Code = hook.Add( \"PlayerGetSalary\", \"example\", function(ply, amount)\n\tprint(ply:Nick() .. \" received salary: $\" .. amount)\nend)\n\n| Output = a print message\n}}",
            "timestamp": "2020-07-23 18:07:19"
        }
    },
    "DarkRP.PlayerSoldDoor": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:PlayerSoldDoor\n| Description = Called when a player has sold a door\n| Returns = {{Ret|nil|}}\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req = true\n| Arg1Desc = The player who sold the door\n\n| Arg2Name = ent\n| Arg2Type = Entity\n| Arg2Req = true\n| Arg2Desc = The sold door\n\n}}\n\n==Examples==\n{{Example\n| Description = prints players who sell doors\n| Code = hook.Add( \"PlayerSoldDoor\", \"example\", function(ply, ent)\n\tprint(ply:Nick() .. \" sold door \" .. ent:EntIndex())\nend)\n\n| Output = a print message\n}}",
            "timestamp": "2020-07-23 18:07:20"
        }
    },
    "DarkRP.PlayerUnWanted": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:PlayerUnWanted\n| Description = Called when someone is not wanted anymore (by someone else)\n| Returns = {{Ret|nil|}}\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req = true\n| Arg1Desc = The player who removed the wanted status\n\n| Arg2Name = ply\n| Arg2Type = Player\n| Arg2Req = true\n| Arg2Desc = The player that was previously wanted\n\n}}\n\n==Examples==\n{{Example\n| Description = The person who unwanted someone gets a message\n| Code = hook.Add( \"PlayerUnWanted\", \"Freedom\", function(ply, target)\n\tply:ChatPrint(\"You unwanted \" .. target:Nick())\nend)\n\n| Output = A message\n}}",
            "timestamp": "2020-07-23 18:07:20"
        }
    },
    "DarkRP.PlayerUnWarranted": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:PlayerUnWarranted\n| Description = Called when the cops remove a search warrant\n| Returns = {{Ret|nil}}\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req = true\n| Arg1Desc = The player who removed the warrant status\n\n| Arg2Name = target\n| Arg2Type = Player\n| Arg2Req = true\n| Arg2Desc = The player that got their warrant removed\n\n}}\n\n==Examples==\n{{Example\n| Description = logs unwarrant \n| Code = hook.Add( \"PlayerUnWarranted\", \"unwarrant\", function(ply, target)\n\tply:ChatPrint(ply:Nick() .. \" got a warrant for \" .. target:Nick())\nend)\n\n| Output = A print message\n}}",
            "timestamp": "2020-07-23 18:07:20"
        }
    },
    "DarkRP.PlayerUnarrested": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:PlayerUnarrested\n| Description = Called when someone is unarrested\n| Returns = {{Ret|nil|}}\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req = true\n| Arg1Desc = The player who has been unarrested\n\n}}\n\n==Examples==\n{{Example\n| Description = Send a message on unarrest\n| Code = hook.Add( \"PlayerUnarrested\", \"Freedom\", function(ply)\n\tply:ChatPrint(\"YOU'RE FREE\")\nend)\n\n| Output = Unarrested players get a message\n}}",
            "timestamp": "2020-07-23 18:07:20"
        }
    },
    "DarkRP.PlayerWalletChanged": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:PlayerWalletChanged\n| Description = Called when someone's wallet changes\n| Returns = {{Ret|number|money_amount|override for money amount after the transaction (see examples)}}\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req = true\n| Arg1Desc = The player whose money changed\n\n| Arg2Name = amount\n| Arg2Type = number\n| Arg2Req = true\n| Arg2Desc = How much money was ADDED to the wallet (it's a negative number when money was REMOVED)\n\n| Arg3Name = total\n| Arg3Type = number\n| Arg3Req = true\n| Arg3Desc = How much money the player had BEFORE the transaction\n\n}}\n\n==Examples==\n{{Example\n| Description = logs money \n| Code = hook.Add( \"PlayerWalletChanged\", \"example\", function(ply, amount)\n\tply:ChatPrint(ply:Nick() .. \" got $\" .. amount)\nend)\n\n| Output = A print message\n}}\n\n{{Example\n| Description = People's money can't be more than the given limit . Put in a serverside Lua file to make it work.\n| Code = local limit = 200000\nhook.Add(\"PlayerWalletChanged\", \"WalletCap\", function(ply, amount, total) \n    return math.Min(total + amount, limit) -- Return the minimum between the changed total and the limit\nend)\n\n| Output = People never getting more than $200,000 in their wallets\n}}",
            "timestamp": "2020-07-23 18:07:20"
        }
    },
    "DarkRP.PlayerWanted": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:PlayerWanted\n| Description = Called when someone is not wanted anymore (by someone else)\n| Returns = {{Ret|nil}}\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req = true\n| Arg1Desc = The player who gave the wanted status\n\n| Arg2Name = target\n| Arg2Type = Player\n| Arg2Req = true\n| Arg2Desc = The player that got wanted\n\n| Arg3Name = reason\n| Arg3Type = string\n| Arg3Req = true\n| Arg3Desc = The reason for the wanted\n\n}}\n\n==Examples==\n{{Example\n| Description = logs wanted reasons\n| Code = hook.Add( \"PlayerWanted\", \"wanted\", function(ply, target, reason)\n\tply:ChatPrint(ply:Nick() .. \" wanted \" .. target:Nick())\n\tprint(\"Wanted reason: \", reason)\nend)\n\n| Output = A print message\n}}",
            "timestamp": "2020-07-23 18:07:20"
        }
    },
    "DarkRP.PlayerWarranted": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:PlayerWarranted\n| Description = Called when the cops get a search warrant\n| Returns = {{Ret|nil}}\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req = true\n| Arg1Desc = The player who gave the warrant status\n\n| Arg2Name = target\n| Arg2Type = Player\n| Arg2Req = true\n| Arg2Desc = The player that got warrant\n\n| Arg3Name = reason\n| Arg3Type = string\n| Arg3Req = true\n| Arg3Desc = The reason for the warrant\n\n}}\n\n==Examples==\n{{Example\n| Description = logs warrant reasons\n| Code = hook.Add( \"PlayerWarranted\", \"warrant\", function(ply, target, reason)\n\tply:ChatPrint(ply:Nick() .. \" got a warrant for \" .. target:Nick())\n\tprint(\"Wanted reason: \", reason)\nend)\n\n| Output = A print message\n}}",
            "timestamp": "2020-07-23 18:07:20"
        }
    },
    "DarkRP.TeamChanged": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:TeamChanged\n| Description = Called when the local player changed team\n| Returns = {{Ret|nil}}\n\n| Arg1Name = before\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The team the local player used to have\n\n| Arg2Name = after\n| Arg2Type = number\n| Arg1Req  = true\n| Arg2Desc = The team the local player has now\n}}",
            "timestamp": "2020-07-23 18:07:20"
        }
    },
    "DarkRP.addHitmanTeam": {
        "en": {
            "content": "[[Category:Functions|getDarkRPVar]]\n[[Category:Player|getDarkRPVar]]\n[[Category:Shared|getDarkRPVar]]\n{{Lua_function |\n\tfunction_name\t= Player:getDarkRPVar |\n\targuments\t= {{Type|string}} var |\n\tdescription\t= Get the value of a DarkRPVar, which is shared between server and client. |\n\tdeprecated\t=  |\n\treturns \t= {{Type|any}} value |\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = var\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the variable.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = value\n| Arg1Type = any\n| Arg1Desc = The value of the DarkRP var.\n\n}}\n\n\n== List of DarkRP Variables (To be put in getDarkRPVar( \" \" ) ) ==\n\n* AFK\n* AFKDemoted\n* money\n* salary\n* rpname\n* job\n* HasGunlicense\n* Arrested\n* wanted\n* wantedReason\n* agenda\n* zombieToggle ( Whether the person toggled to a zombie during the zombie event )\n* hitTarget\n* hitPrice\n* lastHitTime\n* Energy (This is what hungermod uses for hunger)\n\n== Example Code ==\n___________________________________________________________________________________________\n\n for _, player in ipairs(player.GetAll()) do\n    print( player:getDarkRPVar(\"rpname\") , player:getDarkRPVar(\"job\") , player:GetDarkRPVar(\"money\") , player:getDarkRPVar(\"Arrested\"))\n end\n\nResult of Code: Quang\tCitizen\t2500\tfalse",
            "timestamp": "2022-01-02 21:48:26"
        }
    },
    "DarkRP.canChangeJob": {
        "en": {
            "content": "{{Syntax\n| Name = GAMEMODE:canChangeJob\n| Description = Called when a player attempts to change their job title.\n| Returns = {{Ret|boolean|can_change|whether the player can change their name to the name given.}}\n{{Ret|string|msg|the message to be shown when the answer is no}}\n{{Ret|string|replace|A replacement of the job name}}\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player who is trying to change their name\n\n| Arg2Name = job\n| Arg2Type = string\n| Arg2Req  = true\n| Arg2Desc = The job\n}}\n\n==Examples==\n{{Example\n| Description = Only citizens can change job, and the job will become \"Citizen: <jobname>\"\n| Code = hook.Add(\"canChangeJob\", \"citizens\", function(ply, job)\n\tif ply:Team() ~= TEAM_CITIZEN then return false, \"Only citizens can change job\" end\n\n\treturn true, nil, \"Citizen: \" .. job\nend)\n\n| Output = when saying \"/job Prop surf teacher\" as citizen, the job will become \"Citizen: Prop surf teacher\"\nThe player will get a notification when he's not a citizen.\n}}",
            "timestamp": "2020-07-23 18:07:20"
        }
    },
    "DarkRP.canRequestHit": {
        "en": {
            "content": "{{Syntax\n| Name = canRequestHit\n| Description = Whether someone can request a hit.\n| Returns = {{Ret|boolean|\"canRequest\"|A yes or no as to whether the hit can be requested}} {{Ret|string|\"message\"|The message that is shown when they can't request the hit}}\n\n| Arg1Name = hitman\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The hitman performing the hit\n\n\n| Arg2Name = customer\n| Arg2Type = Player\n| Arg2Req  = true\n| Arg2Desc = The customer for the current hit\n\n\n| Arg3Name = target\n| Arg3Type = Player\n| Arg3Req  = true\n| Arg3Desc = The target of the current hit\n\n\n| Arg4Name = price\n| Arg4Type = number\n| Arg4Req  = true\n| Arg4Desc = The agreed upon price\n\n}}",
            "timestamp": "2020-07-23 18:07:21"
        }
    },
    "DarkRP.canRequestWarrant": {
        "en": {
            "content": "{{Syntax\n| Name = canRequestWarrant\n| Description = Whether someone can request a search warrant.\n| Returns = {{Ret|boolean|\"canRequest\"|A yes or no as to whether the search warrant can be requested}} {{Ret|string|\"message\"|The message that is shown when it can't}}\n\n| Arg1Name = target\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player to get the search warrant for\n\n\n| Arg2Name = actor\n| Arg2Type = Player\n| Arg2Req  = true\n| Arg2Desc = The player requesting the warrant\n\n\n| Arg3Name = reason\n| Arg3Type = Player\n| Arg3Req  = true\n| Arg3Desc = The reason for the search warrant\n\n}}",
            "timestamp": "2020-07-23 18:07:21"
        }
    },
    "DarkRP.canUnwant": {
        "en": {
            "content": "{{Syntax\n| Name = canUnwant\n| Description = Whether someone can remove the wanted status from a player\n| Returns = {{Ret|boolean|\"canUnwant\"|A yes or no answer}} {{Ret|string|\"message\"|The message that is shown when the answer is no}}\n\n| Arg1Name = target\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player to make wanted by the police\n\n\n| Arg2Name = actor\n| Arg2Type = Player\n| Arg2Req  = true\n| Arg2Desc = The player requesting the wanted status\n\n}}",
            "timestamp": "2020-07-23 18:07:21"
        }
    },
    "DarkRP.canWanted": {
        "en": {
            "content": "{{Syntax\n| Name = canWanted\n| Description = Whether someone can make a player wanted\n| Returns = {{Ret|boolean|\"canRequest\"|A yes or no as to whether the wanted can be requested}} {{Ret|string|\"message\"|The message that is shown when it can't}}\n\n| Arg1Name = target\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player to make wanted by the police\n\n\n| Arg2Name = actor\n| Arg2Type = Player\n| Arg2Req  = true\n| Arg2Desc = The player requesting the wanted status\n\n\n| Arg3Name = reason\n| Arg3Type = Player\n| Arg3Req  = true\n| Arg3Desc = The reason\n\n}}",
            "timestamp": "2020-07-23 18:07:21"
        }
    },
    "DarkRP.onHitAccepted": {
        "en": {
            "content": "{{Syntax\n| Name = onHitAccepted\n| Description = When a hitman accepts a hit\n| Returns = \n\n| Arg1Name = hitman\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The hitman performing the hit\n\n\n| Arg2Name = target\n| Arg2Type = Player\n| Arg2Req  = true\n| Arg2Desc = The target of the current hit\n\n| Arg3Name = customer\n| Arg3Type = Player\n| Arg3Req  = true\n| Arg3Desc = The customer of the current hit\n}}",
            "timestamp": "2020-07-23 18:07:21"
        }
    },
    "DarkRP.onHitCompleted": {
        "en": {
            "content": "{{Syntax\n| Name = onHitCompleted\n| Description = When a hitman finishes a hit\n| Returns = \n\n| Arg1Name = hitman\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The hitman performing the hit\n\n| Arg2Name = target\n| Arg2Type = Player\n| Arg2Req  = true\n| Arg2Desc = The target of the current hit\n\n| Arg3Name = customer\n| Arg3Type = Player\n| Arg3Req  = true\n| Arg3Desc = The customer of the current hit\n}}",
            "timestamp": "2020-07-23 18:07:21"
        }
    },
    "DarkRP.onHitFailed": {
        "en": {
            "content": "{{Syntax\n| Name = onHitFailed\n| Description = When a hit fails for some reason\n| Returns = \n\n| Arg1Name = hitman\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The hitman performing the hit\n\n\n| Arg2Name = target\n| Arg2Type = Player\n| Arg2Req  = true\n| Arg2Desc = The target of the current hit\n\n\n| Arg3Name = reason\n| Arg3Type = string\n| Arg3Req  = true\n| Arg3Desc = why the hit failed\n\n}}",
            "timestamp": "2020-07-23 18:07:21"
        }
    },
    "DarkRP.playerArrested": {
        "en": {
            "content": "{{Syntax\n| Name = playerArrested\n| Description = When a player is arrested\n| Returns = \n\n| Arg1Name = criminal\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The arrested criminal\n\n\n| Arg2Name = time\n| Arg2Type = number\n| Arg2Req  = true\n| Arg2Desc = The jail time\n\n\n| Arg3Name = actor\n| Arg3Type = Player\n| Arg3Req  = true\n| Arg3Desc = The person who arrested the criminal\n\n}}",
            "timestamp": "2020-07-23 18:07:21"
        }
    },
    "DarkRP.playerUnarrested": {
        "en": {
            "content": "{{Syntax\n| Name = playerUnArrested\n| Description = When a player is unarrested\n| Returns = \n\n| Arg1Name = criminal\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The arrested criminal\n\n\n| Arg2Name = actor\n| Arg2Type = Player\n| Arg2Req  = true\n| Arg2Desc = The person who arrested the criminal\n\n}}",
            "timestamp": "2020-07-23 18:07:21"
        }
    },
    "Darkrp2.5/changes": {
        "en": {
            "content": "<code>\nUpdating bbc860d..e56639a<br />\nFast-forward<br />\nDON'T TOUCH ANY OF THESE FILES.txt                 |   35 +<br />\nHELP/Avoid editing core files.txt                  |   17 +-<br />\nHELP/Updating (modified) DarkRP.txt                |    6 -<br />\nHUGE UPDATE INCOMING.txt                           |   37 -<br />\nchangelog.txt                                      |    4 +-<br />\ncontent/materials/darkrp/DarkRPSkin.png            |  Bin 1050923 -> 0 bytes<br />\ncontent/materials/darkrp/darkrpderma.png           |  Bin 0 -> 22687 bytes<br />\ncontent/materials/vgui/entities/arrest_stick.vmt   |    7 +<br />\ncontent/materials/vgui/entities/arrest_stick.vtf   |  Bin 0 -> 262224 bytes<br />\ncontent/materials/vgui/entities/door_ram.vmt       |    7 +<br />\ncontent/materials/vgui/entities/door_ram.vtf       |  Bin 0 -> 262224 bytes<br />\ncontent/materials/vgui/entities/keys.vmt           |    7 +<br />\ncontent/materials/vgui/entities/keys.vtf           |  Bin 0 -> 262224 bytes<br />\ncontent/materials/vgui/entities/lockpick.vmt       |    7 +<br />\ncontent/materials/vgui/entities/lockpick.vtf       |  Bin 0 -> 262224 bytes<br />\ncontent/materials/vgui/entities/ls_sniper.vmt      |    7 +<br />\ncontent/materials/vgui/entities/ls_sniper.vtf      |  Bin 0 -> 262224 bytes<br />\ncontent/materials/vgui/entities/med_kit.vmt        |    7 +<br />\ncontent/materials/vgui/entities/med_kit.vtf        |  Bin 0 -> 262224 bytes<br />\ncontent/materials/vgui/entities/pocket.vmt         |    7 +<br />\ncontent/materials/vgui/entities/pocket.vtf         |  Bin 0 -> 262224 bytes<br />\ncontent/materials/vgui/entities/stunstick.vmt      |    7 +<br />\ncontent/materials/vgui/entities/stunstick.vtf      |  Bin 0 -> 262224 bytes<br />\ncontent/materials/vgui/entities/unarrest_stick.vmt |    7 +<br />\ncontent/materials/vgui/entities/unarrest_stick.vtf |  Bin 0 -> 262224 bytes<br />\ncontent/materials/vgui/entities/weapon_ak472.vmt   |    7 +<br />\ncontent/materials/vgui/entities/weapon_ak472.vtf   |  Bin 0 -> 262224 bytes<br />\ncontent/materials/vgui/entities/weapon_deagle2.vmt |    7 +<br />\ncontent/materials/vgui/entities/weapon_deagle2.vtf |  Bin 0 -> 262224 bytes<br />\n.../materials/vgui/entities/weapon_fiveseven2.vmt  |    7 +<br />\n.../materials/vgui/entities/weapon_fiveseven2.vtf  |  Bin 0 -> 262224 bytes<br />\ncontent/materials/vgui/entities/weapon_glock2.vmt  |    7 +<br />\ncontent/materials/vgui/entities/weapon_glock2.vtf  |  Bin 0 -> 262224 bytes<br />\n.../vgui/entities/weapon_keypadchecker.vmt         |    7 +<br />\n.../vgui/entities/weapon_keypadchecker.vtf         |  Bin 0 -> 262224 bytes<br />\ncontent/materials/vgui/entities/weapon_m42.vmt     |    7 +<br />\ncontent/materials/vgui/entities/weapon_m42.vtf     |  Bin 0 -> 262224 bytes<br />\ncontent/materials/vgui/entities/weapon_mac102.vmt  |    7 +<br />\ncontent/materials/vgui/entities/weapon_mac102.vtf  |  Bin 0 -> 262224 bytes<br />\ncontent/materials/vgui/entities/weapon_mp52.vmt    |    7 +<br />\ncontent/materials/vgui/entities/weapon_mp52.vtf    |  Bin 0 -> 262224 bytes<br />\ncontent/materials/vgui/entities/weapon_p2282.vmt   |    7 +<br />\ncontent/materials/vgui/entities/weapon_p2282.vtf   |  Bin 0 -> 262224 bytes<br />\n.../vgui/entities/weapon_pumpshotgun2.vmt          |    7 +<br />\n.../vgui/entities/weapon_pumpshotgun2.vtf          |  Bin 0 -> 262224 bytes<br />\ncontent/materials/vgui/entities/weaponchecker.vmt  |    7 +<br />\ncontent/materials/vgui/entities/weaponchecker.vtf  |  Bin 0 -> 262224 bytes<br />\ncontent/resource/fonts/Ubuntu-L.ttf                |  Bin 0 -> 415552 bytes<br />\ndarkrp.txt                                         |    2 +-<br />\nentities/entities/darkrp_cheque/cl_init.lua        |   19 +-<br />\nentities/entities/darkrp_cheque/init.lua           |   14 +-<br />\nentities/entities/darkrp_laws/cl_init.lua          |   36 +-<br />\nentities/entities/darkrp_laws/init.lua             |   57 +-<br />\nentities/entities/darkrp_laws/shared.lua           |   22 +<br />\nentities/entities/drug/cl_init.lua                 |   12 +-<br />\nentities/entities/drug/init.lua                    |    8 +-<br />\nentities/entities/drug_lab/cl_init.lua             |   12 +-<br />\nentities/entities/drug_lab/init.lua                |   10 +-<br />\nentities/entities/fadmin_motd/cl_init.lua          |   25 +-<br />\nentities/entities/food/init.lua                    |    2 +-<br />\nentities/entities/gunlab/cl_init.lua               |   12 +-<br />\nentities/entities/gunlab/init.lua                  |   43 +-<br />\nentities/entities/letter/cl_init.lua               |    6 +-<br />\nentities/entities/letter/commands.lua              |   90 +<br />\nentities/entities/letter/init.lua                  |   32 +-<br />\nentities/entities/letter/shared.lua                |   20 +-<br />\nentities/entities/microwave/cl_init.lua            |   12 +-<br />\nentities/entities/microwave/init.lua               |   32 +-<br />\nentities/entities/money_printer/cl_init.lua        |    7 +-<br />\nentities/entities/money_printer/init.lua           |   18 +-<br />\nentities/entities/money_printer/shared.lua         |    6 +-<br />\nentities/entities/spawned_ammo/init.lua            |   10 +<br />\nentities/entities/spawned_ammo/shared.lua          |   12 +<br />\nentities/entities/spawned_food/init.lua            |    2 +-<br />\nentities/entities/spawned_money/cl_init.lua        |    7 +-<br />\nentities/entities/spawned_money/init.lua           |   13 +-<br />\nentities/entities/spawned_money/shared.lua         |    5 -<br />\nentities/entities/spawned_shipment/cl_init.lua     |   20 +-<br />\nentities/entities/spawned_shipment/commands.lua    |   10 +-<br />\nentities/entities/spawned_shipment/init.lua        |    3 +-<br />\nentities/entities/spawned_shipment/shared.lua      |   14 +-<br />\nentities/entities/spawned_weapon/cl_init.lua       |    4 +-<br />\nentities/entities/spawned_weapon/init.lua          |    4 +-<br />\nentities/weapons/arrest_stick/shared.lua           |  128 +-<br />\nentities/weapons/door_ram/shared.lua               |   38 +-<br />\nentities/weapons/keys/cl_menu.lua                  |  188 ++<br />\nentities/weapons/keys/shared.lua                   |   87 +-<br />\nentities/weapons/lockpick/shared.lua               |   53 +-<br />\nentities/weapons/ls_sniper/shared.lua              |    2 +-<br />\nentities/weapons/med_kit/shared.lua                |    2 +-<br />\nentities/weapons/pocket/cl_menu.lua                |   97 +<br />\nentities/weapons/pocket/shared.lua                 |  305 +---<br />\nentities/weapons/pocket/sv_init.lua                |  307 ++++<br />\nentities/weapons/stunstick/shared.lua              |  151 +-<br />\nentities/weapons/unarrest_stick/shared.lua         |   92 +-<br />\nentities/weapons/weapon_ak472/shared.lua           |    2 +-<br />\nentities/weapons/weapon_cs_base2/sh_commands.lua   |   19 +<br />\nentities/weapons/weapon_cs_base2/shared.lua        |   35 +-<br />\nentities/weapons/weapon_cs_base2/sv_commands.lua   |   84 +<br />\nentities/weapons/weapon_deagle2/shared.lua         |    2 +-<br />\nentities/weapons/weapon_fiveseven2/shared.lua      |    2 +-<br />\nentities/weapons/weapon_glock2/shared.lua          |    2 +-<br />\nentities/weapons/weapon_keypadchecker/cl_init.lua  |   10 +-<br />\nentities/weapons/weapon_keypadchecker/shared.lua   |   27 +-<br />\nentities/weapons/weapon_m42/shared.lua             |    2 +-<br />\nentities/weapons/weapon_mac102/shared.lua          |    2 +-<br />\nentities/weapons/weapon_mp52/shared.lua            |    2 +-<br />\nentities/weapons/weapon_p2282/shared.lua           |    2 +-<br />\nentities/weapons/weapon_pumpshotgun2/shared.lua    |    2 +-<br />\nentities/weapons/weaponchecker/shared.lua          |   60 +-<br />\ngamemode/cl_init.lua                               |  610 +------<br />\ngamemode/client/help.lua                           |   89 -<br />\ngamemode/client/helpvgui.lua                       |  127 --<br />\ngamemode/client/showteamtabs.lua                   | 1020 -----------<br />\ngamemode/client/vgui.lua                           |  615 -------<br />\ngamemode/config/DO NOT TOUCH THESE FILES.txt       |    4 +<br />\ngamemode/{ => config}/_MySQL.lua                   |    0<br />\ngamemode/{ => config}/addentities.lua              |    6 +-<br />\ngamemode/{ => config}/ammotypes.lua                |   35 +-<br />\ngamemode/{ => config}/config.lua                   |  129 +-<br />\ngamemode/{shared.lua => config/jobrelated.lua}     |   88 +-<br />\ngamemode/{ => config}/licenseweapons.lua           |    0<br />\ngamemode/fadmin/logging/sv_init.lua                |   77 -<br />\ngamemode/init.lua                                  |  185 +-<br />\ngamemode/{server => libraries}/database.lua        |    0<br />\n.../{modules/_lib/sh_fn.lua => libraries/fn.lua}   |    0<br />\n.../interfaceloader.lua}                           |   23 +-<br />\ngamemode/libraries/modificationloader.lua          |  121 ++<br />\ngamemode/modules/DO NOT TOUCH THESE MODULES.txt    |    4 +<br />\ngamemode/modules/afk/cl_afk.lua                    |   10 +-<br />\ngamemode/modules/afk/sh_commands.lua               |    5 +<br />\ngamemode/modules/afk/sh_settings.lua               |    1 -<br />\ngamemode/modules/afk/sv_AFK.lua                    |   43 +-<br />\ngamemode/modules/afk/sv_interface.lua              |   33 +<br />\n.../animations/sh_animations.lua}                  |   21 +-<br />\ngamemode/modules/base/cl_entityvars.lua            |   91 +<br />\ngamemode/modules/base/cl_fonts.lua                 |    3 +-<br />\ngamemode/modules/base/cl_gamemode_functions.lua    |   67 +<br />\ngamemode/modules/base/cl_interface.lua             |  100 ++<br />\ngamemode/modules/base/cl_jobmodels.lua             |   52 +<br />\ngamemode/modules/base/cl_util.lua                  |  106 ++<br />\ngamemode/modules/base/sh_commands.lua              |   58 +<br />\ngamemode/modules/base/sh_createitems.lua           |  591 +++++++<br />\ngamemode/modules/base/sh_interface.lua             |  388 ++++<br />\n.../base/sh_playerclass.lua}                       |    0<br />\ngamemode/modules/base/sh_util.lua                  |  126 ++<br />\ngamemode/modules/base/sv_data.lua                  |  377 ++++<br />\ngamemode/modules/base/sv_entityvars.lua            |  209 +++<br />\n.../base/sv_gamemode_functions.lua}                |  422 ++---<br />\ngamemode/modules/base/sv_interface.lua             |  882 +++++++++<br />\ngamemode/modules/base/sv_jobmodels.lua             |   38 +<br />\ngamemode/modules/base/sv_purchasing.lua            |  362 ++++<br />\ngamemode/modules/base/sv_util.lua                  |  173 ++<br />\ngamemode/modules/chat/cl_chat.lua                  |   88 +<br />\n.../{client => modules/chat}/cl_chatlisteners.lua  |   40 +-<br />\ngamemode/modules/chat/cl_interface.lua             |   41 +<br />\ngamemode/modules/chat/sh_chatcommands.lua          |  134 ++<br />\ngamemode/modules/chat/sh_interface.lua             |   99 ++<br />\n.../{server/chat.lua => modules/chat/sv_chat.lua}  |   75 +-<br />\ngamemode/modules/chat/sv_chatcommands.lua          |  239 +++<br />\ngamemode/modules/chat/sv_interface.lua             |   50 +<br />\ngamemode/modules/chatsounds.lua                    |   30 +-<br />\ngamemode/modules/cppi/sh_cppi.lua                  |   56 +<br />\ngamemode/modules/cssmount.lua                      |    4 +-<br />\ngamemode/modules/deathpov/cl_init.lua              |   48 +-<br />\ngamemode/modules/deathpov/sv_init.lua              |    5 -<br />\n.../dermaskin/cl_dermaskin.lua}                    |    4 +-<br />\ngamemode/modules/dermaskin/sv_resource.lua         |    1 +<br />\ngamemode/modules/doorsystem/cl_doors.lua           |  124 ++<br />\ngamemode/modules/doorsystem/cl_interface.lua       |   28 +<br />\ngamemode/modules/doorsystem/sh_doors.lua           |  175 ++<br />\ngamemode/modules/doorsystem/sh_interface.lua       |  263 +++<br />\n.../modules/doorsystem/sv_dooradministration.lua   |  225 +++<br />\ngamemode/modules/doorsystem/sv_doors.lua           |  508 ++++++<br />\ngamemode/modules/doorsystem/sv_doorvars.lua        |  142 ++<br />\ngamemode/modules/doorsystem/sv_interface.lua       |  559 ++++++<br />\ngamemode/modules/events/cl_zombie.lua              |   19 +-<br />\ngamemode/modules/events/sh_zombie.lua              |   78 +-<br />\ngamemode/modules/events/sv_events.lua              |   98 +-<br />\ngamemode/modules/events/sv_interface.lua           |   40 +<br />\ngamemode/modules/events/sv_zombie.lua              |  105 +-<br />\ngamemode/modules/f1menu/cl_chatcommandlabel.lua    |   40 +<br />\ngamemode/modules/f1menu/cl_chatcommandspanel.lua   |   22 +<br />\ngamemode/modules/f1menu/cl_f1menu.lua              |   32 +<br />\ngamemode/modules/f1menu/cl_f1menupanel.lua         |   99 ++<br />\ngamemode/modules/f1menu/cl_htmlcontrols.lua        |  131 ++<br />\ngamemode/modules/f1menu/cl_interface.lua           |   29 +<br />\ngamemode/modules/f1menu/cl_searchbox.lua           |   45 +<br />\ngamemode/modules/f1menu/cl_titlelabel.lua          |   14 +<br />\ngamemode/modules/f4menu/cl_entitiestab.lua         |  269 +++<br />\ngamemode/modules/f4menu/cl_frame.lua               |  169 ++<br />\ngamemode/modules/f4menu/cl_init.lua                |  109 ++<br />\ngamemode/modules/f4menu/cl_interface.lua           |  119 ++<br />\ngamemode/modules/f4menu/cl_jobstab.lua             |  359 ++++<br />\ngamemode/modules/f4menu/cl_menuitem.lua            |  167 ++<br />\ngamemode/modules/f4menu/sv_init.lua                |    1 +<br />\ngamemode/modules/fadmin/cl_fadmin.lua              |   40 +<br />\ngamemode/modules/fadmin/cl_fadmin_darkrp.lua       |  104 ++<br />\n.../{ => modules/fadmin}/fadmin/access/cl_init.lua |    6 +<br />\n.../fadmin}/fadmin/access/sh_shared.lua            |    2 +-<br />\n.../{ => modules/fadmin}/fadmin/access/sv_init.lua |    3 +-<br />\n.../fadmin/changelevel/cl_changelevelGUI.lua       |    0<br />\n.../fadmin}/fadmin/changelevel/cl_init.lua         |    0<br />\n.../fadmin/changelevel/cl_maplistoptions.lua       |    0<br />\n.../fadmin}/fadmin/changelevel/cl_startgame.lua    |    0<br />\n.../fadmin}/fadmin/changelevel/sv_init.lua         |    0<br />\n.../fadmin}/fadmin/chatting/cl_init.lua            |    0<br />\n.../fadmin}/fadmin/chatting/sv_init.lua            |    0<br />\n.../fadmin}/fadmin/cl_interface/cl_PlayerLists.lua |    0<br />\n.../fadmin}/fadmin/cl_interface/cl_controls.lua    |    0<br />\n.../fadmin}/fadmin/cl_interface/cl_scoreboard.lua  |    0<br />\n.../fadmin/cl_interface/cl_scoreboardMain.lua      |    0<br />\n.../fadmin/cl_interface/cl_scoreboardPlayer.lua    |    0<br />\n.../fadmin/cl_interface/cl_scoreboardServer.lua    |    0<br />\n.../fadmin}/fadmin/cl_interface/cl_start.lua       |   14 +-<br />\n.../fadmin}/fadmin/cl_interface/sh_commontimes.lua |   17 +-<br />\n.../fadmin}/fadmin/cleanup/cl_init.lua             |    0<br />\n.../fadmin}/fadmin/cleanup/sv_init.lua             |    0<br />\n.../fadmin}/fadmin/commands/cl_chatcommands.lua    |    0<br />\n.../fadmin}/fadmin/commands/cl_concommands.lua     |    0<br />\n.../fadmin}/fadmin/commands/sh_concommands.lua     |    0<br />\n.../fadmin}/fadmin/commands/sv_chatcommands.lua    |    0<br />\n.../fadmin}/fadmin/commands/sv_concommands.lua     |    0<br />\n.../fadmin}/fadmin/logging/sh_shared.lua           |    0<br />\ngamemode/modules/fadmin/fadmin/logging/sv_init.lua |  137 ++<br />\n.../fadmin}/fadmin/messaging/cl_init.lua           |    0<br />\n.../fadmin}/fadmin/messaging/sh_shared.lua         |    0<br />\n.../fadmin}/fadmin/messaging/sv_init.lua           |    0<br />\n.../{ => modules/fadmin}/fadmin/motd/sh_shared.lua |    0<br />\n.../{ => modules/fadmin}/fadmin/motd/sv_init.lua   |    0<br />\n.../fadmin}/fadmin/pickupplayers/cl_init.lua       |    0<br />\n.../fadmin}/fadmin/pickupplayers/sv_init.lua       |    4 +-<br />\n.../fadmin/playeractions/changeteam/cl_init.lua    |    6 +<br />\n.../fadmin/playeractions/changeteam/sv_init.lua    |    2 +-<br />\n.../fadmin/playeractions/chatmute/cl_init.lua      |    0<br />\n.../fadmin/playeractions/chatmute/sv_init.lua      |    0<br />\n.../fadmin}/fadmin/playeractions/cloak/cl_init.lua |    0<br />\n.../fadmin}/fadmin/playeractions/cloak/sv_init.lua |    0<br />\n.../fadmin/playeractions/freeze/cl_init.lua        |    0<br />\n.../fadmin/playeractions/freeze/sv_init.lua        |    0<br />\n.../playeractions/giveweapons/cl_controls.lua      |    4 +-<br />\n.../fadmin/playeractions/giveweapons/cl_init.lua   |    0<br />\n.../playeractions/giveweapons/sh_HL2Weapons.lua    |    0<br />\n.../fadmin/playeractions/giveweapons/sv_init.lua   |    0<br />\n.../fadmin}/fadmin/playeractions/god/cl_init.lua   |    0<br />\n.../fadmin}/fadmin/playeractions/god/sv_init.lua   |    0<br />\n.../fadmin/playeractions/health/cl_init.lua        |    0<br />\n.../fadmin/playeractions/health/sv_init.lua        |    0<br />\n.../fadmin/playeractions/ignite/cl_init.lua        |    0<br />\n.../fadmin/playeractions/ignite/sv_init.lua        |    0<br />\n.../fadmin}/fadmin/playeractions/jail/cl_init.lua  |   14 +-<br />\n.../fadmin/playeractions/jail/sh_shared.lua        |    0<br />\n.../fadmin}/fadmin/playeractions/jail/sv_init.lua  |    0<br />\n.../fadmin/playeractions/kickban/cl_init.lua       |   35 +-<br />\n.../fadmin/playeractions/kickban/sh_shared.lua     |    0<br />\n.../fadmin/playeractions/kickban/sv_init.lua       |    0<br />\n.../fadmin/playeractions/message/cl_init.lua       |    0<br />\n.../fadmin/playeractions/message/sv_init.lua       |    0<br />\n.../fadmin/playeractions/noclip/cl_init.lua        |    0<br />\n.../fadmin/playeractions/noclip/sv_init.lua        |    0<br />\n.../fadmin/playeractions/ragdoll/cl_init.lua       |    6 +<br />\n.../fadmin/playeractions/ragdoll/sh_shared.lua     |    0<br />\n.../fadmin/playeractions/ragdoll/sv_init.lua       |    0<br />\n.../fadmin}/fadmin/playeractions/slap/cl_init.lua  |    7 +-<br />\n.../fadmin}/fadmin/playeractions/slap/sv_init.lua  |    0<br />\n.../fadmin}/fadmin/playeractions/slay/cl_init.lua  |    7 +-<br />\n.../fadmin/playeractions/slay/sh_shared.lua        |    0<br />\n.../fadmin}/fadmin/playeractions/slay/sv_init.lua  |    0<br />\n.../fadmin/playeractions/spectate/cl_init.lua      |    0<br />\n.../fadmin/playeractions/spectate/sv_init.lua      |    6 +-<br />\n.../fadmin/playeractions/strip_weapons/cl_init.lua |    0<br />\n.../fadmin/playeractions/strip_weapons/sv_init.lua |    0<br />\n.../fadmin/playeractions/teleport/cl_init.lua      |    5 +<br />\n.../fadmin/playeractions/teleport/sv_init.lua      |    8 +-<br />\n.../fadmin/playeractions/voicemute/cl_init.lua     |   14 +-<br />\n.../fadmin/playeractions/voicemute/sv_init.lua     |    0<br />\n.../{ => modules/fadmin}/fadmin/rcon/cl_init.lua   |    0<br />\n.../{ => modules/fadmin}/fadmin/rcon/sv_init.lua   |    0<br />\n.../fadmin}/fadmin/restrict/cl_restrict.lua        |    0<br />\n.../fadmin}/fadmin/restrict/sv_restrict.lua        |    0<br />\n.../fadmin}/fadmin/serversettings/cl_init.lua      |    0<br />\n.../fadmin}/fadmin/serversettings/sv_init.lua      |    0<br />\ngamemode/modules/fadmin/sh_fadmin_darkrp.lua       |  116 ++<br />\ngamemode/modules/fadmin/sv_fadmin.lua              |   97 +<br />\n.../fadmin/sv_fadmin_sql.lua}                      |    0<br />\ngamemode/modules/fpp/cl_fpp.lua                    |    5 +<br />\n.../{fpp => modules/fpp/pp}/client/FPP_Buddies.lua |    0<br />\n.../{fpp => modules/fpp/pp}/client/FPP_HUD.lua     |    0<br />\n.../{fpp => modules/fpp/pp}/client/FPP_Menu.lua    |    0<br />\n.../fpp/pp}/server/FPP_Antispam.lua                |    0<br />\n.../fpp/pp}/server/FPP_Settings.lua                |    0<br />\n.../{fpp => modules/fpp/pp}/server/FPP_core.lua    |    0<br />\ngamemode/{fpp => modules/fpp/pp}/sh_CPPI.lua       |    0<br />\ngamemode/{fpp => modules/fpp/pp}/sh_settings.lua   |    0<br />\n.../{ => modules}/fpp/sv_defaultblockedmodels.lua  |    0<br />\ngamemode/modules/fpp/sv_fpp.lua                    |   42 +<br />\ngamemode/modules/hitmenu/cl_init.lua               |    4 +-<br />\ngamemode/modules/hitmenu/cl_menu.lua               |   14 +-<br />\ngamemode/modules/hitmenu/sh_init.lua               |   42 +-<br />\ngamemode/modules/hitmenu/sh_interface.lua          |   44 +-<br />\ngamemode/modules/hitmenu/sh_settings.lua           |   12 -<br />\ngamemode/modules/hitmenu/sv_init.lua               |   66 +-<br />\ngamemode/modules/hobo/cl_hobo.lua                  |    5 +<br />\ngamemode/modules/hobo/sv_hobo.lua                  |   19 +<br />\n.../{client/hud.lua => modules/hud/cl_hud.lua}     |   72 +-<br />\ngamemode/modules/hud/sv_admintell.lua              |   79 +<br />\ngamemode/modules/hungermod/cl_f4foodtab.lua        |   43 +<br />\ngamemode/modules/hungermod/cl_init.lua             |   97 +-<br />\ngamemode/modules/hungermod/sh_commands.lua         |    5 +<br />\ngamemode/modules/hungermod/sh_init.lua             |  113 ++<br />\ngamemode/modules/hungermod/sh_interface.lua        |   22 +<br />\ngamemode/modules/hungermod/sh_settings.lua         |   38 -<br />\ngamemode/modules/hungermod/sv_HungerMod.lua        |   88 -<br />\ngamemode/modules/hungermod/sv_hungermod.lua        |   69 +<br />\ngamemode/modules/hungermod/sv_interface.lua        |   19 +<br />\ngamemode/modules/hungermod/sv_player.lua           |    8 +-<br />\ngamemode/modules/jobs/sh_commands.lua              |   50 +<br />\ngamemode/modules/jobs/sv_interface.lua             |  165 ++<br />\ngamemode/modules/jobs/sv_jobs.lua                  |  514 ++++++<br />\ngamemode/modules/language/sh_english.lua           |  322 +++-<br />\ngamemode/modules/language/sh_interface.lua         |   27 +-<br />\ngamemode/modules/language/sh_language.lua          |   27 +<br />\ngamemode/modules/logging/cl_init.lua               |   10 +<br />\ngamemode/modules/logging/sv_interface.lua          |   20 +<br />\ngamemode/modules/logging/sv_logging.lua            |   33 +<br />\ngamemode/modules/medic/sh_init.lua                 |    4 +<br />\ngamemode/modules/medic/sh_interface.lua            |   14 +<br />\ngamemode/modules/money/sh_commands.lua             |   29 +<br />\ngamemode/modules/money/sh_interface.lua            |   36 +<br />\ngamemode/modules/money/sh_money.lua                |   11 +<br />\ngamemode/modules/money/sv_interface.lua            |   81 +<br />\ngamemode/modules/money/sv_money.lua                |  332 ++++<br />\ngamemode/modules/passengermodcompat.lua            |   12 +-<br />\ngamemode/modules/police/sh_init.lua                |  146 +-<br />\ngamemode/modules/police/sh_interface.lua           |   48 +-<br />\ngamemode/modules/police/sv_commands.lua            |  422 +++++<br />\ngamemode/modules/police/sv_init.lua                |  165 +-<br />\ngamemode/modules/police/sv_interface.lua           |  180 +-<br />\ngamemode/modules/positions/sh_commands.lua         |   42 +<br />\ngamemode/modules/positions/sv_database.lua         |  126 ++<br />\ngamemode/modules/positions/sv_interface.lua        |  140 ++<br />\ngamemode/modules/positions/sv_jailpos.lua          |   31 +<br />\ngamemode/modules/positions/sv_spawnpos.lua         |   77 +<br />\ngamemode/modules/sleep/sh_sleep.lua                |   17 +<br />\ngamemode/modules/sleep/sv_interface.lua            |   26 +<br />\ngamemode/modules/sleep/sv_sleep.lua                |   35 +-<br />\ngamemode/modules/voterestrictions/sv_init.lua      |    8 +-<br />\ngamemode/modules/voting/cl_voting.lua              |  231 +++<br />\ngamemode/modules/voting/sv_interface.lua           |  183 ++<br />\n.../voting/sv_questions.lua}                       |   35 +-<br />\n.../votes.lua => modules/voting/sv_votes.lua}      |   48 +-<br />\ngamemode/modules/workarounds/sh_interface.lua      |   14 +<br />\n.../workarounds/sh_workarounds.lua}                |    0<br />\ngamemode/server/admincc.lua                        |  554 ------<br />\ngamemode/server/data.lua                           |  672 -------<br />\ngamemode/server/main.lua                           | 1868 --------------------<br />\ngamemode/server/player.lua                         |  525 ------<br />\ngamemode/server/static_data.lua                    |  231 ---<br />\ngamemode/server/util.lua                           |  154 --<br />\ngamemode/shared/MakeThings.lua                     |  176 --<br />\ngamemode/shared/commands.lua                       |  214 ---<br />\ngamemode/shared/entity.lua                         |  671 -------<br />\ngamemode/shared/fadmin_darkrp.lua                  |  275 ---<br />\n363 files changed, 15466 insertions(+), 9812 deletions(-)<br />\ncreate mode 100644 DON'T TOUCH ANY OF THESE FILES.txt<br />\ndelete mode 100644 HELP/Updating (modified) DarkRP.txt<br />\ndelete mode 100644 HUGE UPDATE INCOMING.txt<br />\ndelete mode 100644 content/materials/darkrp/DarkRPSkin.png<br />\ncreate mode 100644 content/materials/darkrp/darkrpderma.png<br />\ncreate mode 100644 content/materials/vgui/entities/arrest_stick.vmt<br />\ncreate mode 100644 content/materials/vgui/entities/arrest_stick.vtf<br />\ncreate mode 100644 content/materials/vgui/entities/door_ram.vmt<br />\ncreate mode 100644 content/materials/vgui/entities/door_ram.vtf<br />\ncreate mode 100644 content/materials/vgui/entities/keys.vmt<br />\ncreate mode 100644 content/materials/vgui/entities/keys.vtf<br />\ncreate mode 100644 content/materials/vgui/entities/lockpick.vmt<br />\ncreate mode 100644 content/materials/vgui/entities/lockpick.vtf<br />\ncreate mode 100644 content/materials/vgui/entities/ls_sniper.vmt<br />\ncreate mode 100644 content/materials/vgui/entities/ls_sniper.vtf<br />\ncreate mode 100644 content/materials/vgui/entities/med_kit.vmt<br />\ncreate mode 100644 content/materials/vgui/entities/med_kit.vtf<br />\ncreate mode 100644 content/materials/vgui/entities/pocket.vmt<br />\ncreate mode 100644 content/materials/vgui/entities/pocket.vtf<br />\ncreate mode 100644 content/materials/vgui/entities/stunstick.vmt<br />\ncreate mode 100644 content/materials/vgui/entities/stunstick.vtf<br />\ncreate mode 100644 content/materials/vgui/entities/unarrest_stick.vmt<br />\ncreate mode 100644 content/materials/vgui/entities/unarrest_stick.vtf<br />\ncreate mode 100644 content/materials/vgui/entities/weapon_ak472.vmt<br />\ncreate mode 100644 content/materials/vgui/entities/weapon_ak472.vtf<br />\ncreate mode 100644 content/materials/vgui/entities/weapon_deagle2.vmt<br />\ncreate mode 100644 content/materials/vgui/entities/weapon_deagle2.vtf<br />\ncreate mode 100644 content/materials/vgui/entities/weapon_fiveseven2.vmt<br />\ncreate mode 100644 content/materials/vgui/entities/weapon_fiveseven2.vtf<br />\ncreate mode 100644 content/materials/vgui/entities/weapon_glock2.vmt<br />\ncreate mode 100644 content/materials/vgui/entities/weapon_glock2.vtf<br />\ncreate mode 100644 content/materials/vgui/entities/weapon_keypadchecker.vmt<br />\ncreate mode 100644 content/materials/vgui/entities/weapon_keypadchecker.vtf<br />\ncreate mode 100644 content/materials/vgui/entities/weapon_m42.vmt<br />\ncreate mode 100644 content/materials/vgui/entities/weapon_m42.vtf<br />\ncreate mode 100644 content/materials/vgui/entities/weapon_mac102.vmt<br />\ncreate mode 100644 content/materials/vgui/entities/weapon_mac102.vtf<br />\ncreate mode 100644 content/materials/vgui/entities/weapon_mp52.vmt<br />\ncreate mode 100644 content/materials/vgui/entities/weapon_mp52.vtf<br />\ncreate mode 100644 content/materials/vgui/entities/weapon_p2282.vmt<br />\ncreate mode 100644 content/materials/vgui/entities/weapon_p2282.vtf<br />\ncreate mode 100644 content/materials/vgui/entities/weapon_pumpshotgun2.vmt<br />\ncreate mode 100644 content/materials/vgui/entities/weapon_pumpshotgun2.vtf<br />\ncreate mode 100644 content/materials/vgui/entities/weaponchecker.vmt<br />\ncreate mode 100644 content/materials/vgui/entities/weaponchecker.vtf<br />\ncreate mode 100644 content/resource/fonts/Ubuntu-L.ttf<br />\ncreate mode 100644 entities/entities/letter/commands.lua<br />\ncreate mode 100644 entities/entities/spawned_ammo/init.lua<br />\ncreate mode 100644 entities/entities/spawned_ammo/shared.lua<br />\ncreate mode 100644 entities/weapons/keys/cl_menu.lua<br />\ncreate mode 100644 entities/weapons/pocket/cl_menu.lua<br />\ncreate mode 100644 entities/weapons/pocket/sv_init.lua<br />\ncreate mode 100644 entities/weapons/weapon_cs_base2/sh_commands.lua<br />\ncreate mode 100644 entities/weapons/weapon_cs_base2/sv_commands.lua<br />\ndelete mode 100644 gamemode/client/help.lua<br />\ndelete mode 100644 gamemode/client/helpvgui.lua<br />\ndelete mode 100644 gamemode/client/showteamtabs.lua<br />\ndelete mode 100644 gamemode/client/vgui.lua<br />\ncreate mode 100644 gamemode/config/DO NOT TOUCH THESE FILES.txt<br />\nrename gamemode/{ => config}/_MySQL.lua (100%)<br />\nrename gamemode/{ => config}/addentities.lua (97%)<br />\nrename gamemode/{ => config}/ammotypes.lua (57%)<br />\nrename gamemode/{ => config}/config.lua (71%)<br />\nrename gamemode/{shared.lua => config/jobrelated.lua} (85%)<br />\nrename gamemode/{ => config}/licenseweapons.lua (100%)<br />\ndelete mode 100644 gamemode/fadmin/logging/sv_init.lua<br />\nrename gamemode/{server => libraries}/database.lua (100%)<br />\nrename gamemode/{modules/_lib/sh_fn.lua => libraries/fn.lua} (100%)<br />\nrename gamemode/{sh_interfaceloader.lua => libraries/interfaceloader.lua} (90%)<br />\ncreate mode 100644 gamemode/libraries/modificationloader.lua<br />\ncreate mode 100644 gamemode/modules/DO NOT TOUCH THESE MODULES.txt<br />\ncreate mode 100644 gamemode/modules/afk/sh_commands.lua<br />\ndelete mode 100644 gamemode/modules/afk/sh_settings.lua<br />\ncreate mode 100644 gamemode/modules/afk/sv_interface.lua<br />\nrename gamemode/{shared/animations.lua => modules/animations/sh_animations.lua} (87%)<br />\ncreate mode 100644 gamemode/modules/base/cl_entityvars.lua<br />\ncreate mode 100644 gamemode/modules/base/cl_gamemode_functions.lua<br />\ncreate mode 100644 gamemode/modules/base/cl_interface.lua<br />\ncreate mode 100644 gamemode/modules/base/cl_jobmodels.lua<br />\ncreate mode 100644 gamemode/modules/base/cl_util.lua<br />\ncreate mode 100644 gamemode/modules/base/sh_commands.lua<br />\ncreate mode 100644 gamemode/modules/base/sh_createitems.lua<br />\ncreate mode 100644 gamemode/modules/base/sh_interface.lua<br />\nrename gamemode/{shared/player_class.lua => modules/base/sh_playerclass.lua} (100%)<br />\ncreate mode 100644 gamemode/modules/base/sh_util.lua<br />\ncreate mode 100644 gamemode/modules/base/sv_data.lua<br />\ncreate mode 100644 gamemode/modules/base/sv_entityvars.lua<br />\nrename gamemode/{server/gamemode_functions.lua => modules/base/sv_gamemode_functions.lua} (68%)<br />\ncreate mode 100644 gamemode/modules/base/sv_interface.lua<br />\ncreate mode 100644 gamemode/modules/base/sv_jobmodels.lua<br />\ncreate mode 100644 gamemode/modules/base/sv_purchasing.lua<br />\ncreate mode 100644 gamemode/modules/base/sv_util.lua<br />\ncreate mode 100644 gamemode/modules/chat/cl_chat.lua<br />\nrename gamemode/{client => modules/chat}/cl_chatlisteners.lua (85%)<br />\ncreate mode 100644 gamemode/modules/chat/cl_interface.lua<br />\ncreate mode 100644 gamemode/modules/chat/sh_chatcommands.lua<br />\ncreate mode 100644 gamemode/modules/chat/sh_interface.lua<br />\nrename gamemode/{server/chat.lua => modules/chat/sv_chat.lua} (56%)<br />\ncreate mode 100644 gamemode/modules/chat/sv_chatcommands.lua<br />\ncreate mode 100644 gamemode/modules/chat/sv_interface.lua<br />\ncreate mode 100644 gamemode/modules/cppi/sh_cppi.lua<br />\ndelete mode 100644 gamemode/modules/deathpov/sv_init.lua<br />\nrename gamemode/{client/DRPDermaSkin.lua => modules/dermaskin/cl_dermaskin.lua} (99%)<br />\ncreate mode 100644 gamemode/modules/dermaskin/sv_resource.lua<br />\ncreate mode 100644 gamemode/modules/doorsystem/cl_doors.lua<br />\ncreate mode 100644 gamemode/modules/doorsystem/cl_interface.lua<br />\ncreate mode 100644 gamemode/modules/doorsystem/sh_doors.lua<br />\ncreate mode 100644 gamemode/modules/doorsystem/sh_interface.lua<br />\ncreate mode 100644 gamemode/modules/doorsystem/sv_dooradministration.lua<br />\ncreate mode 100644 gamemode/modules/doorsystem/sv_doors.lua<br />\ncreate mode 100644 gamemode/modules/doorsystem/sv_doorvars.lua<br />\ncreate mode 100644 gamemode/modules/doorsystem/sv_interface.lua<br />\ncreate mode 100644 gamemode/modules/events/sv_interface.lua<br />\ncreate mode 100644 gamemode/modules/f1menu/cl_chatcommandlabel.lua<br />\ncreate mode 100644 gamemode/modules/f1menu/cl_chatcommandspanel.lua<br />\ncreate mode 100644 gamemode/modules/f1menu/cl_f1menu.lua<br />\ncreate mode 100644 gamemode/modules/f1menu/cl_f1menupanel.lua<br />\ncreate mode 100644 gamemode/modules/f1menu/cl_htmlcontrols.lua<br />\ncreate mode 100644 gamemode/modules/f1menu/cl_interface.lua<br />\ncreate mode 100644 gamemode/modules/f1menu/cl_searchbox.lua<br />\ncreate mode 100644 gamemode/modules/f1menu/cl_titlelabel.lua<br />\ncreate mode 100644 gamemode/modules/f4menu/cl_entitiestab.lua<br />\ncreate mode 100644 gamemode/modules/f4menu/cl_frame.lua<br />\ncreate mode 100644 gamemode/modules/f4menu/cl_init.lua<br />\ncreate mode 100644 gamemode/modules/f4menu/cl_interface.lua<br />\ncreate mode 100644 gamemode/modules/f4menu/cl_jobstab.lua<br />\ncreate mode 100644 gamemode/modules/f4menu/cl_menuitem.lua<br />\ncreate mode 100644 gamemode/modules/f4menu/sv_init.lua<br />\ncreate mode 100644 gamemode/modules/fadmin/cl_fadmin.lua<br />\ncreate mode 100644 gamemode/modules/fadmin/cl_fadmin_darkrp.lua<br />\nrename gamemode/{ => modules/fadmin}/fadmin/access/cl_init.lua (98%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/access/sh_shared.lua (99%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/access/sv_init.lua (97%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/changelevel/cl_changelevelGUI.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/changelevel/cl_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/changelevel/cl_maplistoptions.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/changelevel/cl_startgame.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/changelevel/sv_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/chatting/cl_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/chatting/sv_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/cl_interface/cl_PlayerLists.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/cl_interface/cl_controls.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/cl_interface/cl_scoreboard.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/cl_interface/cl_scoreboardMain.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/cl_interface/cl_scoreboardPlayer.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/cl_interface/cl_scoreboardServer.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/cl_interface/cl_start.lua (71%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/cl_interface/sh_commontimes.lua (79%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/cleanup/cl_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/cleanup/sv_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/commands/cl_chatcommands.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/commands/cl_concommands.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/commands/sh_concommands.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/commands/sv_chatcommands.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/commands/sv_concommands.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/logging/sh_shared.lua (100%)<br />\ncreate mode 100644 gamemode/modules/fadmin/fadmin/logging/sv_init.lua<br />\nrename gamemode/{ => modules/fadmin}/fadmin/messaging/cl_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/messaging/sh_shared.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/messaging/sv_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/motd/sh_shared.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/motd/sv_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/pickupplayers/cl_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/pickupplayers/sv_init.lua (95%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/changeteam/cl_init.lua (84%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/changeteam/sv_init.lua (93%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/chatmute/cl_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/chatmute/sv_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/cloak/cl_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/cloak/sv_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/freeze/cl_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/freeze/sv_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/giveweapons/cl_controls.lua (94%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/giveweapons/cl_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/giveweapons/sh_HL2Weapons.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/giveweapons/sv_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/god/cl_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/god/sv_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/health/cl_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/health/sv_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/ignite/cl_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/ignite/sv_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/jail/cl_init.lua (81%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/jail/sh_shared.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/jail/sv_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/kickban/cl_init.lua (91%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/kickban/sh_shared.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/kickban/sv_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/message/cl_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/message/sv_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/noclip/cl_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/noclip/sv_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/ragdoll/cl_init.lua (92%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/ragdoll/sh_shared.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/ragdoll/sv_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/slap/cl_init.lua (91%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/slap/sv_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/slay/cl_init.lua (86%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/slay/sh_shared.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/slay/sv_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/spectate/cl_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/spectate/sv_init.lua (92%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/strip_weapons/cl_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/strip_weapons/sv_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/teleport/cl_init.lua (93%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/teleport/sv_init.lua (93%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/voicemute/cl_init.lua (88%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/playeractions/voicemute/sv_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/rcon/cl_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/rcon/sv_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/restrict/cl_restrict.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/restrict/sv_restrict.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/serversettings/cl_init.lua (100%)<br />\nrename gamemode/{ => modules/fadmin}/fadmin/serversettings/sv_init.lua (100%)<br />\ncreate mode 100644 gamemode/modules/fadmin/sh_fadmin_darkrp.lua<br />\ncreate mode 100644 gamemode/modules/fadmin/sv_fadmin.lua<br />\nrename gamemode/{server/FAdmin_SQL.lua => modules/fadmin/sv_fadmin_sql.lua} (100%)<br />\ncreate mode 100644 gamemode/modules/fpp/cl_fpp.lua<br />\nrename gamemode/{fpp => modules/fpp/pp}/client/FPP_Buddies.lua (100%)<br />\nrename gamemode/{fpp => modules/fpp/pp}/client/FPP_HUD.lua (100%)<br />\nrename gamemode/{fpp => modules/fpp/pp}/client/FPP_Menu.lua (100%)<br />\nrename gamemode/{fpp => modules/fpp/pp}/server/FPP_Antispam.lua (100%)<br />\nrename gamemode/{fpp => modules/fpp/pp}/server/FPP_Settings.lua (100%)<br />\nrename gamemode/{fpp => modules/fpp/pp}/server/FPP_core.lua (100%)<br />\nrename gamemode/{fpp => modules/fpp/pp}/sh_CPPI.lua (100%)<br />\nrename gamemode/{fpp => modules/fpp/pp}/sh_settings.lua (100%)<br />\nrename gamemode/{ => modules}/fpp/sv_defaultblockedmodels.lua (100%)<br />\ncreate mode 100644 gamemode/modules/fpp/sv_fpp.lua<br />\ndelete mode 100644 gamemode/modules/hitmenu/sh_settings.lua<br />\ncreate mode 100644 gamemode/modules/hobo/cl_hobo.lua<br />\ncreate mode 100644 gamemode/modules/hobo/sv_hobo.lua<br />\nrename gamemode/{client/hud.lua => modules/hud/cl_hud.lua} (82%)<br />\ncreate mode 100644 gamemode/modules/hud/sv_admintell.lua<br />\ncreate mode 100644 gamemode/modules/hungermod/cl_f4foodtab.lua<br />\ncreate mode 100644 gamemode/modules/hungermod/sh_commands.lua<br />\ncreate mode 100644 gamemode/modules/hungermod/sh_init.lua<br />\ncreate mode 100644 gamemode/modules/hungermod/sh_interface.lua<br />\ndelete mode 100644 gamemode/modules/hungermod/sh_settings.lua<br />\ndelete mode 100644 gamemode/modules/hungermod/sv_HungerMod.lua<br />\ncreate mode 100644 gamemode/modules/hungermod/sv_hungermod.lua<br />\ncreate mode 100644 gamemode/modules/hungermod/sv_interface.lua<br />\ncreate mode 100644 gamemode/modules/jobs/sh_commands.lua<br />\ncreate mode 100644 gamemode/modules/jobs/sv_interface.lua<br />\ncreate mode 100644 gamemode/modules/jobs/sv_jobs.lua<br />\ncreate mode 100644 gamemode/modules/logging/cl_init.lua<br />\ncreate mode 100644 gamemode/modules/logging/sv_interface.lua<br />\ncreate mode 100644 gamemode/modules/logging/sv_logging.lua<br />\ncreate mode 100644 gamemode/modules/medic/sh_init.lua<br />\ncreate mode 100644 gamemode/modules/medic/sh_interface.lua<br />\ncreate mode 100644 gamemode/modules/money/sh_commands.lua<br />\ncreate mode 100644 gamemode/modules/money/sh_interface.lua<br />\ncreate mode 100644 gamemode/modules/money/sh_money.lua<br />\ncreate mode 100644 gamemode/modules/money/sv_interface.lua<br />\ncreate mode 100644 gamemode/modules/money/sv_money.lua<br />\ncreate mode 100644 gamemode/modules/police/sv_commands.lua<br />\ncreate mode 100644 gamemode/modules/positions/sh_commands.lua<br />\ncreate mode 100644 gamemode/modules/positions/sv_database.lua<br />\ncreate mode 100644 gamemode/modules/positions/sv_interface.lua<br />\ncreate mode 100644 gamemode/modules/positions/sv_jailpos.lua<br />\ncreate mode 100644 gamemode/modules/positions/sv_spawnpos.lua<br />\ncreate mode 100644 gamemode/modules/sleep/sh_sleep.lua<br />\ncreate mode 100644 gamemode/modules/sleep/sv_interface.lua<br />\ncreate mode 100644 gamemode/modules/voting/cl_voting.lua<br />\ncreate mode 100644 gamemode/modules/voting/sv_interface.lua<br />\nrename gamemode/{server/questions.lua => modules/voting/sv_questions.lua} (64%)<br />\nrename gamemode/{server/votes.lua => modules/voting/sv_votes.lua} (65%)<br />\ncreate mode 100644 gamemode/modules/workarounds/sh_interface.lua<br />\nrename gamemode/{shared/Workarounds.lua => modules/workarounds/sh_workarounds.lua} (100%)<br />\ndelete mode 100644 gamemode/server/admincc.lua<br />\ndelete mode 100644 gamemode/server/data.lua<br />\ndelete mode 100644 gamemode/server/main.lua<br />\ndelete mode 100644 gamemode/server/player.lua<br />\ndelete mode 100644 gamemode/server/static_data.lua<br />\ndelete mode 100644 gamemode/server/util.lua<br />\ndelete mode 100644 gamemode/shared/MakeThings.lua<br />\ndelete mode 100644 gamemode/shared/commands.lua<br />\ndelete mode 100644 gamemode/shared/entity.lua<br />\ndelete mode 100644 gamemode/shared/fadmin_darkrp.lua<br />\n\n</code>",
            "timestamp": "2020-07-23 18:07:28"
        }
    },
    "Diezel Sun": {
        "en": {
            "content": "{{delete|This article is competly unfinished and it's not about DarkRP at all}}\n\n'''DiezelSun''' - (Also known as Tatarnikov Alexander) Is an artist, illustrator, game designer. In his creativity there are paintings executed on game engines, such as unity. The paintings are made in the style of a computer, they have their esoteric meaning. The game takes place on the engine design unity, the similarity SCP horror games.\n\n== Links ==",
            "timestamp": "2020-07-23 18:07:29"
        }
    },
    "Donator Entities": {
        "en": {
            "content": "{{TOC right}}\n{{Languages|en=Donator Entities|ru=Donator_Entities:ru|fr=Donator Entities:fr}}\n\n== Introduction ==\nMaking shipments or other entities Donator only. Instead of donator you can also make it VIP only or have other constraints.\n\n== Details ==\nThe customCheck field can hold a custom function that defines whether a player can buy it or not.\n\nThe setup is the same as the donator job thing. Here are a few examples:\n\n{{lua example |\n  description = Make the Money printer Donator only. |\n  useOn = {{Shared}} |\n  code = DarkRP.createEntity(\"Money printer\", {\n\tent = \"money_printer\",\n\tmodel = \"models/props_c17/consolebox01a.mdl\",\n\tprice = 1000,\n\tmax = 2,\n\tcmd = \"buymoneyprinter\",\n\tcustomCheck = function(ply) return ply:IsUserGroup(\"Donator\") end\n}) |\n  output = The Money printer is only available to the \"Donator\" group.\n}}\n\n{{lua example |\n  description = Make the AK47 shipment Donator only. |\n  useOn = {{Shared}} |\n  code = DarkRP.createShipment(\"AK47\", {\n\tmodel = \"models/weapons/w_rif_ak47.mdl\",\n\tentity = \"weapon_ak472\",\n\tprice = 2450,\n\tamount = 10,\n\tseparate = false,\n\tpricesep = nil,\n\tnoship = false,\n\tallowed = {TEAM_GUN},\n\tcustomCheck = function(ply) return ply:IsUserGroup(\"Donator\") end\n}) |\n  output = The AK47 shipment is only available to the \"Donator\" group.\n}}",
            "timestamp": "2020-07-23 18:07:29"
        },
        "fr": {
            "content": "{{TOC right}}\n{{Languages|en=Donator Entities|ru=Donator_Entities:ru|fr=Donator Entities:fr}}\n\n== Introduction ==\nMettre des \u00e9quipements ou des entit\u00e9s pour les donateurs uniquement. Vous pouvez faire en sorte de mettre uniquement pour les VIP ou d'autres contraintes.\n\n== D\u00e9tails ==\nLe customCheck d\u00e9finit une fonction qui d\u00e9finie si un joueur peut acheter ou non (ou pour un job, le devenir ou non).\n\nLe fonctionnement est le m\u00eame que les jobs donateurs. Voici quelques exemples:\n\n{{lua example |\n  description = Mettre une imprimante d'argent pour les donateurs uniquement. |\n  useOn = {{Shared}} |\n  code = DarkRP.createEntity(\"Imprimante d'argent\", {\n\tent = \"money_printer\",\n\tmodel = \"models/props_c17/consolebox01a.mdl\",\n\tprice = 1000,\n\tmax = 2,\n\tcmd = \"buymoneyprinter\",\n\tcustomCheck = function(ply) return ply:IsUserGroup(\"Donateur\") end\n}) |\n  output = L'imprimante d'argent est disponible uniquement pour le groupe \"Donateur\".\n}}\n\n{{lua example |\n  description = Mettre une AK47 pour les VIP uniquement. |\n  useOn = {{Shared}} |\n  code = DarkRP.createShipment(\"AK47\", {\n\tmodel = \"models/weapons/w_rif_ak47.mdl\",\n\tentity = \"weapon_ak472\",\n\tprice = 2450,\n\tamount = 10,\n\tseparate = false,\n\tpricesep = nil,\n\tnoship = false,\n\tallowed = {TEAM_GUN},\n\tcustomCheck = function(ply) return ply:IsUserGroup(\"VIP\") end\n}) |\n  output = L'imprimante d'argent est disponible uniquement pour le groupe \"VIP\".\n}}",
            "timestamp": "2020-07-23 18:07:29"
        },
        "ru": {
            "content": "{{TOC right}}\n{{Languages|en=Donator Entities|ru=Donator_Entities:ru}}\n\n== \u0412\u0432\u0435\u0434\u0435\u043d\u0438\u0435 ==\n\u0412 \u044d\u0442\u043e\u043c \u043c\u0430\u043d\u0443\u0430\u043b\u0435 \u044f \u0440\u0430\u0441\u0441\u043a\u0430\u0436\u0443 \u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0439 \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f V.I.P \u0438\u0433\u0440\u043e\u043a\u043e\u0432.\n\n== \u0414\u0435\u0442\u0430\u043b\u0438 ==\n\u041e\u0434\u0438\u043d\u043d\u0430\u0434\u0446\u0430\u0442\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 AddCustomShipment \u0438 \u0432\u043e\u0441\u044c\u043c\u043e\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 AddEntity \u043f\u043e\u043c\u043e\u0433\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0438\u0433\u0440\u043e\u043a V.I.P \u0438\u043b\u0438 \u0436\u0435 \u043d\u0435\u0442. \u0412\u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u0438\u043c\u0435\u0440\u043e\u0432 \u043a\u043e\u0434\u0430 \u0441 FAdmin:\n\n{{lua example:ru |\n  description = Money printer \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f V.I.P/\u0434\u043e\u043d\u0430\u0442\u043e\u0440\u043e\u0432. |\n  useOn = {{Shared}} |\n  code = DarkRP.createEntity(\"\u0414\u0435\u043d\u0435\u0436\u043d\u044b\u0439 \u0441\u0442\u0430\u043d\u043e\u043a Money Printer\", {\n\tent = \"money_printer\",\n\tmodel = \"models/props_c17/consolebox01a.mdl\",\n\tprice = 1000,\n\tmax = 2,\n\tcmd = \"buymoneyprinter\",\n\tcustomCheck = function(ply) return ply:IsUserGroup(\"Donator\") end\n}) |\n  output = Money printer \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043e\u043d\u0430\u0442\u043e\u0440\u0430\u043c \u0441\u0435\u0440\u0432\u0435\u0440\u0430.\n}}\n\n{{lua example:ru |\n  description = \u041a\u043e\u0440\u043e\u0431\u043a\u0430 AK47 \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f V.I.P/\u0434\u043e\u043d\u0430\u0442\u043e\u0440\u043e\u0432. |\n  useOn = {{Shared}} |\n  code = DarkRP.createShipment(\"AK47\", {\n\tmodel = \"models/weapons/w_rif_ak47.mdl\",\n\tentity = \"weapon_ak472\",\n\tprice = 2450,\n\tamount = 10,\n\tseparate = false,\n\tpricesep = nil,\n\tnoship = false,\n\tallowed = {TEAM_GUN},\n\tcustomCheck = function(ply) return ply:IsUserGroup(\"Donator\") end\n}) |\n  output = AK47 \u043a\u043e\u0440\u043e\u0431\u043a\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043e\u043d\u0430\u0442\u043e\u0440\u0430\u043c \u0441\u0435\u0440\u0432\u0435\u0440\u0430.\n}}",
            "timestamp": "2020-07-23 18:07:29"
        }
    },
    "Donator Job configuration": {
        "en": {
            "content": "{{Article|\ncategory = DarkRP|\nname = Donator Job configuration |\nauthor = [[User:Phycosymo|Mr. Phy]] [[User:FPtje|FPtje]]|\ndate = December 20, 2009 |\nupdated = October 25, 2013 | \ndescription = Adding and configuring donator jobs. }}\n\n{{Languages|en=Donator Job configuration|fr=Donator Job configuration:fr}}\n= Restrict certain jobs to donator/vip/whatever usergroup =\n\n== Details ==\n===Creating the usergroup===\nIn order to use this, you will first need some players that have the donator, vip or whatever usergroup. In ulx I believe it's \"ulx adduser name donator\", but I'm not sure. Here's the guide for FAdmin:\n\n* Make sure you're root user (FAdmin setroot yourname in rcon/server console)\n* Have the donator join your server\n* Once he's in press tab, click the player's name and click Set access (first button)\n* Click new \n* Follow the on-screen instructions and name the usergroup \"donator\" or \"vip\" or whatever. Just make sure you remember the name of the group.\n* When making your job, use this template:\n{{Code|1=\nTEAM_DONATORJOB = DarkRP.createJob(\"Swat\", { -- Name\n    color = Color(238, 99, 99, 255), -- Team color\n    model = \"models/player/mossman.mdl\", -- Player model\n    description = [[As a cook, it is your responsibility to feed the other members of your city. \n                            You can spawn a microwave and sell the food you make: /Buymicrowave]],  -- Job description\n    weapons = {}, -- Additional weapons\n    command = \"Swat\", -- Command to become the job\n    max = 2, -- Maximum amount of said job\n    salary = 45, -- Salary\n    admin = 0, -- Requires Admin? 1 for yes, 0 for no.\n    vote = false, -- Do they need to vote? true for yes, false for no.\n    hasLicense = false, -- Has a license\n    customCheck = function(ply) return ply:GetUserGroup() == \"donator\" end -- The extra check function. Enter nil or nothing to not have an extra check\n})\n}}\n* at the last part, change \"donator\" to \"vip\", \"special\" or whatever you named your group two steps ago. If it was \"donator\", you can leave it like that. Make sure the double quotes (\" \") stay there.\n* Restart the server\n* Ask the donator to try to get the job to test it.\n\n===NOTES===\nIf the extra check says only donators can get the job, then admins and superadmins won't be able to get the job, because they're not donators. If you want the admins to be able to get the job, use this template to make the job:\n\n{{Code|1=\nTEAM_DONATORJOB = DarkRP.createJob(\"Swat\", { -- Name\n    color = Color(238, 99, 99, 255), -- Team color\n    model = \"models/player/mossman.mdl\", -- Player model\n    description = [[As a cook, it is your responsibility to feed the other members of your city. \n                            You can spawn a microwave and sell the food you make: /Buymicrowave]],  -- Job description\n    weapons = {}, -- Additional weapons\n    command = \"Swat\", -- Command to become the job\n    max = 2, -- Maximum amount of said job\n    salary = 45, -- Salary\n    admin = 0, -- Requires Admin? 1 for yes, 0 for no.\n    vote = false, -- Do they need to vote? true for yes, false for no.\n    hasLicense = false, -- Has a license\n    customCheck = function(ply) return ply:GetUserGroup() == \"donator\" or ply:IsAdmin() end, -- The extra check function. Enter nil or nothing to not have a restriction\n    CustomCheckFailMsg = \"This job is VIP only!\" -- Allows you to tell the user what went wrong when attempting to switch jobs\n})\n}}\n\n===ULX===\nThe above code should work with ULX. If you wish to allow any inherited groups too (eg admin/superadmin), replace this:\n{{Code|1=ply:GetUserGroup() == \"donator\"}}\n\nby this:\n{{Code|1=ply:CheckGroup(\"donator\")}}\nNote: By using this function you acknowledge that things will break if ULX is not installed.\n\n===Evolve===\nIf you wish to use Evolve instead of FAdmin, replace:\n\n{{Code|1=ply:GetUserGroup() == \"donator\"}}\n\nWith:\n\n{{Code|1=ply:GetNWString(\"EV_UserGroup\") == \"donator\"}}\n\n==Customcheck with multiple groups==\nHere are examples for custom check functions. They work for shipments and jobs and whatever else uses customcheck functions.\n\n====Donators and admins can have this job====\n{{Code|1=function(ply) return ply:GetUserGroup() == \"donator\" == \"donator\" or ply:IsAdmin() end}}\n\n====Superadmin only====\n{{Code|1=function(ply) return ply:IsSuperAdmin() end}}\n\n====Multiple groups====\n'''Example 1:'''\n{{Code|1=function(ply) return ply:GetUserGroup() == \"donator\" == \"donator\" or ply:GetUserGroup() == \"donator\" == \"vip\" end}}\nThis can be expanded with more groups.\n\n'''Example 2:'''\n{{Code|1=function(ply) return table.HasValue({\"donator\", \"vip\", \"admin\", \"superadmin\", \"mingebag\"}, ply:GetUserGroup() == \"donator\") end}}\n\n'''Example 3:'''\n{{Code|1=customCheck = function(ply) return ply:IsUserGroup(\"donator\") or ply:IsAdmin() end}} --This is for a donator only job, and allow an Admin to be it.--\n\n\n==Making clients see entities even though they can't buy them==\n\nThis happens be default since DarkRP 2.5.0. To disable this, set GM.Config.hideNonBuyable to true in your settings.lua.\n\n== Custom fail messages ==\nWhen customCheck says a player can't buy something, you might want to change the message it sends to this player. Here's how to do it:\n{{Code|1=\ncustomCheck = function(ply) return ply:IsUserGroup(\"donator\") end, -- The customcheck function\nCustomCheckFailMsg = \"You need to be a donator to become a Hobo.\" -- The message it sends to the client\n}}\nThis works with shipments, jobs, Ammo, vehicles and custom jobs.\n\nFull example:\n{{Code|1=\nTEAM_HOBO = DarkRP.createJob(\"Hobo\", {\n\tcolor = Color(80, 45, 0, 255),\n\tmodel = \"models/player/corpse1.mdl\",\n\tdescription = [[The lowest member of society. All people see you laugh.\n\t\tYou have no home.\n\t\tBeg for your food and money\n\t\tSing for everyone who passes to get money\n\t\tMake your own wooden home]],\n\tweapons = {\"weapon_bugbait\"},\n\tcommand = \"hobo\",\n\tmax = 5,\n\tsalary = 0,\n\tadmin = 0,\n\tvote = false,\n\thasLicense = false,\n\tcustomCheck = function(ply) return ply:IsUserGroup(\"donator\") end,\n\tCustomCheckFailMsg = \"You need to be a donator to become a Hobo.\"\n})\n}}\n\nYou might want the custom fail message to be dynamic (show one message when the player is not a donator, show another one when the player has too much money.\n{{Code|1=\ncustomCheck = function(ply) return ply:IsUserGroup(\"donator\") and ply:getDarkRPVar(\"money\") < 1000 end, -- The customcheck function\nCustomCheckFailMsg = function(ply) return ply:getDarkRPVar(\"money\") >= 1000 and \"You're too rich!\" or not ply:IsUserGroup(\"donator\") and \"You need to be a donator to become a Hobo.\" end, -- The message it sends to the client\n}}TEAM_DONATORJOB = DarkRP.createJob(\"Swat\", { -- Name\n    color = Color(238, 99, 99, 255), -- Team color\n    model = \"models/player/mossman.mdl\", -- Player model\n    description = [[As a cook, it is your responsibility to feed the other members of your city. \n                            You can spawn a microwave and sell the food you make: /Buymicrowave]],  -- Job description\n    weapons = {}, -- Additional weapons\n    command = \"Swat\", -- Command to become the job\n    max = 2, -- Maximum amount of said job\n    salary = 45, -- Salary\n    admin = 0, -- Requires Admin? 1 for yes, 0 for no.\n    vote = false, -- Do they need to vote? true for yes, false for no.\n    hasLicense = false, -- Has a license\n    customCheck = function(ply) return ply:GetUserGroup() == \"donator\" end -- The extra check function. Enter nil or nothing to not have an extra check\n})\nTEAM_DONATORJOB = DarkRP.createJob(\"Swat\", { -- Name\n    color = Color(238, 99, 99, 255), -- Team color\n    model = \"models/player/mossman.mdl\", -- Player model\n    description = [[As a cook, it is your responsibility to feed the other members of your city. \n                            You can spawn a microwave and sell the food you make: /Buymicrowave]],  -- Job description\n    weapons = {}, -- Additional weapons\n    command = \"Swat\", -- Command to become the job\n    max = 2, -- Maximum amount of said job\n    salary = 45, -- Salary\n    admin = 0, -- Requires Admin? 1 for yes, 0 for no.\n    vote = false, -- Do they need to vote? true for yes, false for no.\n    hasLicense = false, -- Has a license\n    customCheck = function(ply) return ply:GetUserGroup() == \"donator\" or ply:IsAdmin() end, -- The extra check function. Enter nil or nothing to not have a restriction\n    CustomCheckFailMsg = \"This job is VIP only!\" -- Allows you to tell the user what went wrong when attempting to switch jobs\n})",
            "timestamp": "2020-07-23 18:07:29"
        },
        "fr": {
            "content": "{{Languages|en=Donator Job configuration|fr=Donator Job configuration:fr}}\n\n{{Article|\ncategory = DarkRP|\nname = Configuration d'un job pour les donateurs |\nauthor = [[User:Diablos|Diablos]] [[User:FPtje|FPtje]]|\ndate = 7 novembre 2015 |\nupdated = 7 novembre 2015 | \ndescription = Ajouter et configurer un job pour un groupe d'utilisateur sp\u00e9cifique. }}\n\n{{Languages|en=Donator Job configuration|fr=Donator Job configuration:fr}}\n= Restreindre des jobs \u00e0 un groupe d'utilisateur donateur/vip/peuimporte =\n\n'''Cet article a \u00e9t\u00e9 traduit en fran\u00e7ais manuellement et directement de son article homologue anglais.'''\n\n== D\u00e9tails ==\n===Cr\u00e9er le groupe d'utilisateur===\nPour utiliser cela, vous devez tout d'abord avoir quelques joueurs connect\u00e9s sur le serveur pour pouvoir tester les commandes et cr\u00e9er par la suite le groupe d'utilisateur (donateur, vip ou ce que vous voulez). Pour cr\u00e9er un groupe d'utilisateur sur ulx, la commande est \"ulx adduser nom donateur\" (avec le nom de la personne et votre groupe d'utilisateur au lieu de donateur). Vous pouvez aussi \u00e9crire \"ulx adduserid steamid donateur\". Voici le guide FAdmin :\n\n* Assurez vous que vous \u00eates utilisateur (FAdmin setroot votrenom dans la console rcon/serveur)\n* Avoir le donateur sur le serveur\n* Apr\u00e8s avoir appuy\u00e9 sur TAB, cliquer sur le nom du joueur et sur \"Set access\" (premier bouton)\n* Cliquer de nouveau \n* Suivre les instructions \u00e0 l'\u00e9cran et appelez votre groupe d'utilisateur \"donateur\" ou \"vip\" ou ce que vous voulez. Assurez vous cependant de retenir le nom du groupe.\n* Quand vous cr\u00e9ez votre job, utilisez ceci:\n{{Code|1=\nTEAM_DONATORJOB = DarkRP.createJob(\"Cuisinier\", { -- Nom\n    color = Color(238, 99, 99, 255), -- Couleur de la team\n    model = \"models/player/mossman.mdl\", -- Mod\u00e8le du joueur\n    description = [[En cuisinier, c'est votre responsabilite de nourrir les personnes de la ville. \n                            Vous pouvez acheter un micro onde et vendre votre nourriture: /Buymicrowave]],  -- Description du job\n    weapons = {}, -- Armes additionnelles\n    command = \"Cuisinier\", -- Commande pour devenir ce job\n    max = 2, -- Nombre de joueurs pouvant avoir le job au maximum\n    salary = 45, -- Salaire\n    admin = 0, -- Faut-il \u00eatre admin? 2 pour super-admin uniquement, 1 pour admin (et super-admin), 0 pour joueur standard.\n    vote = false, -- Faut-il un vote? true pour oui, false pour non.\n    hasLicense = false, -- A une licence\n    customCheck = function(ply) return ply:GetNWString(\"usergroup\") == \"donateur\" end -- La fonction customCheck. Mettez nil ou ne rien mettre pour ne pas en avoir.\n})\n}}\n* \u00e0 la derni\u00e8re partie (customCheck), changez \"donateur\" en \"vip\", en \"special\" ou votre groupe. Si c'est \"donateur\", vous pouvez laisser comme cela. V\u00e9rifiez qu'il y'a bien les guillemets (\" \").\n* Red\u00e9marrer le serveur\n* Demandez au donateur de se mettre dans le job correspondant pour v\u00e9rifier s'il peut y acc\u00e9der.\n\n===Notes===\nSi le customCheck dit \"Only donators can get the job\", alors les administrateurs et super-administrateurs ne pourront pas obtenir le m\u00e9tier car ils ne sont pas \"donateur\", il faut dans ce cas utiliser ce code pour qu'ils puissent obtenir le m\u00e9tier:\n\n{{Code|1=\nTEAM_DONATORJOB = DarkRP.createJob(\"Cuisinier\", { -- Nom\n    color = Color(238, 99, 99, 255), -- Couleur de la team\n    model = \"models/player/mossman.mdl\", -- Mod\u00e8le du joueur\n    description = [[En cuisinier, c'est votre responsabilite de nourrir les personnes de la ville. \n                            Vous pouvez acheter un micro onde et vendre votre nourriture: /Buymicrowave]],  -- Description du job\n    weapons = {}, -- Armes additionnelles\n    command = \"Cuisinier\", -- Commande pour devenir ce job\n    max = 2, -- Nombre de joueurs pouvant avoir le job au maximum\n    salary = 45, -- Salaire\n    admin = 0, -- Faut-il \u00eatre admin? 2 pour super-admin uniquement, 1 pour admin (et super-admin), 0 pour joueur standard.\n    vote = false, -- Faut-il un vote? true pour oui, false pour non.\n    hasLicense = false, -- A une licence\n    customCheck = function(ply) return ply:GetNWString(\"usergroup\") == \"donateur\" or ply:IsAdmin() end, -- La fonction customCheck. Mettez nil ou ne rien mettre pour ne pas en avoir.\n    CustomCheckFailMsg = \"Ce m\u00e9tier est VIP uniquement!\" -- Message qui s'affiche lorsque l'utilisateur essaie d'obtenir le job sans avoir le groupe d'utilisateur requis.\n})\n}}\n\n===ULX===\nSi vous souhaitez utiliser ULX au lieu de FAdmin, remplacez:\n\n{{Code|1=ply:GetNWString(\"usergroup\") == \"donateur\"}}\n\nPar:\n\n{{Code|1=ply:GetUserGroup() == \"donateur\"}}\n\nOu si vous souhaitez autoriser les groupes inh\u00e9rit\u00e9s, (ex: admin/superadmin), remplacer par:\n\n{{Code|1=ply:CheckGroup(\"donateur\")}}\nNote: Si vous utilisez ces fonctions, cela ne marchera pas si ULX n'est pas install\u00e9.\n\n===Evolve===\nSi vous souhaitez utiliser Evolve au lieu de FAdmin, remplacez:\n\n{{Code|1=ply:GetNWString(\"usergroup\")}}\n\nPar:\n\n{{Code|1=ply:GetNWString(\"EV_UserGroup\")}}\n\n==customCheck sur plusieurs groupes==\nVoici un exemple de fonction customCheck. Cela fonctionne pour les shipments et les jobs et tout ce qui peut utiliser des fonctions customCheck.\n\n====Donateurs et admins peuvent avoir le job====\n{{Code|1=function(ply) return ply:GetNWString(\"usergroup\") == \"donateur\" or ply:IsAdmin() end}}\n\n====Superadmin uniquement====\n{{Code|1=function(ply) return ply:IsSuperAdmin() end}}\n\n====Plusieurs groupes====\n'''Exemple 1:'''\n{{Code|1=function(ply) return ply:GetNWString(\"usergroup\") == \"donateur\" or ply:GetNWString(\"usergroup\") == \"vip\" end}}\nOn peut ensuite rajouter d'autres groupes.\n\n'''Exemple 2:'''\n{{Code|1=function(ply) return table.HasValue({\"donateur\", \"vip\", \"admin\", \"superadmin\", \"mingebag\"}, ply:GetNWString(\"usergroup\")) end}}\n\n'''Exemple 3:'''\n{{Code|1=customCheck = function(ply) return ply:IsUserGroup(\"donateur\") or ply:IsAdmin() end}} --C'est pour les donateurs FAdmin uniquement, et autorise un admin \u00e9galement.--\n\n\n==Faire en sorte que les clients voient les entit\u00e9s m\u00eame si ils ne peuvent pas l'acheter==\n\nC'est un param\u00e8tre par d\u00e9faut depuis DarkRP 2.5.0. Pour d\u00e9sactiver ceci, mettez GM.Config.hideNonBuyable \u00e0 true dans settings.lua.\n\n== Messages si on ne passe pas le customCheck ==\nQuand le customCheck dit \u00e0 un joueur qu'il ne peut pas acheter / avoir quelque chose, Vous pouvez changer le message envoy\u00e9 au joueur lors de l'\u00e9chec. Voici comment faire:\n{{Code|1=\ncustomCheck = function(ply) return ply:IsUserGroup(\"donateur\") end, -- Fonction customCheck\nCustomCheckFailMsg = \"Vous devez etre un donateur pour devenir un clochard.\" -- Le message envoy\u00e9 au client\n}}\nCeci marche avec les shipments, jobs, munitions, vehicules et jobs personnalis\u00e9s.\n\nExemple entier:\n{{Code|1=\nTEAM_HOBO = DarkRP.createJob(\"Clochard\", {\n\tcolor = Color(80, 45, 0, 255),\n\tmodel = \"models/player/corpse1.mdl\",\n\tdescription = [[Le membre le plus faible de la societe. Tous les joueurs vous voient mal.\n\t\tVous n'avez pas de maison.\n\t\tMendiez pour la nourriture et l'argent.\n\t\tChantez pour avoir de l'argent.\n\t\tFaites votre maison dans les bois.]],\n\tweapons = {\"weapon_bugbait\"},\n\tcommand = \"clochard\",\n\tmax = 5,\n\tsalary = 0,\n\tadmin = 0,\n\tvote = false,\n\thasLicense = false,\n\tcustomCheck = function(ply) return ply:IsUserGroup(\"donateur\") end,\n\tCustomCheckFailMsg = \"Vous devez etre un donateur pour devenir un clochard.\"\n})\n}}\n\nVous voulez peut \u00eatre faire en sorte que le message d'\u00e9chec soit dynamique (afficher un message lorsque le joueur n'est pas donateur ou un autre lorsque le joueur a trop d'argent).\n{{Code|1=\ncustomCheck = function(ply) return ply:IsUserGroup(\"donateur\") and ply:getDarkRPVar(\"money\") < 1000 end, -- La fonction customCheck\nCustomCheckFailMsg = function(ply) return ply:getDarkRPVar(\"money\") >= 1000 and \"Vous etes trop riche!\" or not ply:IsUserGroup(\"donateur\") and \"Vous devez etre un donateur pour devenir clochard.\" end, -- The message it sends to the client\n}}\n\nATTENTION : Ne pas utiliser d'accents (\u00e9,\u00e8,\u00ea) dans la ligne de la commande (cmd) afin de ne pas faire planter votre m\u00e9tier. Vous devez \u00e9galement ne pas rajouter d'accents que ce soit dans le nom du job ou dans la description sauf si votre fichier est encod\u00e9 en UTF8.",
            "timestamp": "2020-07-23 18:07:29"
        }
    },
    "Functions/DarkRP/Client/addChatReceiver": {
        "en": {
            "content": "[[Category:Functions|addChatReceiver]]\n[[Category:DarkRP|addChatReceiver]]\n[[Category:Clientside|addChatReceiver]]\n{{Lua_function |\n    function_name   = DarkRP.addChatReceiver |\n    arguments   = {{Type|string}} prefix, {{Type|string}} text, {{Type|function}} hearFunc |\n    description = Add a chat command with specific receivers |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = prefix\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The chat command itself (\"/pm\", \"/ooc\", \"/me\" are some examples)\n\n| Arg2Name = text\n| Arg2Type = string\n| Arg2Req  = true\n| Arg2Desc = The text that shows up when it says \"Some people can hear you X\"\n\n| Arg3Name = hearFunc\n| Arg3Type = function\n| Arg3Req  = true\n| Arg3Desc = A function(ply, splitText) that decides whether this player can or cannot hear you.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:39:45"
        }
    },
    "Functions/DarkRP/Client/addF4MenuTab": {
        "en": {
            "content": "[[Category:Functions|addF4MenuTab]]\n[[Category:DarkRP|addF4MenuTab]]\n[[Category:Clientside|addF4MenuTab]]\n{{Lua_function |\n    function_name   = DarkRP.addF4MenuTab |\n    arguments   = {{Type|string}} name, {{Type|Panel}} panel |\n    description = Add a tab to the F4 menu. |\n    deprecated  =  |\n    returns     = {{Type|number}} index, {{Type|Panel}} sheet |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The title of the tab.\n\n| Arg2Name = panel\n| Arg2Type = Panel\n| Arg2Req  = true\n| Arg2Desc = The panel of the tab.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = index\n| Arg1Type = number\n| Arg1Desc = The index of the tab in the menu. This is the number you use for the tab in DarkRP.switchTabOrder.\n\n| Arg2Name = sheet\n| Arg2Type = Panel\n| Arg2Desc = The tab sheet.\n\n}}",
            "timestamp": "2020-08-26 18:42:16"
        }
    },
    "Functions/DarkRP/Client/closeF1Menu": {
        "en": {
            "content": "[[Category:Functions|closeF1Menu]]\n[[Category:DarkRP|closeF1Menu]]\n[[Category:Clientside|closeF1Menu]]\n{{Lua_function |\n    function_name   = DarkRP.closeF1Menu |\n    arguments   =  |\n    description = Close the F1 help menu. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:41:54"
        }
    },
    "Functions/DarkRP/Client/closeF4Menu": {
        "en": {
            "content": "[[Category:Functions|closeF4Menu]]\n[[Category:DarkRP|closeF4Menu]]\n[[Category:Clientside|closeF4Menu]]\n{{Lua_function |\n    function_name   = DarkRP.closeF4Menu |\n    arguments   =  |\n    description = Close the F4 menu if it's open. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:38:37"
        }
    },
    "Functions/DarkRP/Client/deLocalise": {
        "en": {
            "content": "[[Category:Functions|deLocalise]]\n[[Category:DarkRP|deLocalise]]\n[[Category:Clientside|deLocalise]]\n{{Lua_function |\n    function_name   = DarkRP.deLocalise |\n    arguments   = {{Type|string}} text |\n    description = Makes sure the string will not be localised when drawn or printed. |\n    deprecated  =  |\n    returns     = {{Type|string}} text |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = text\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The text to delocalise.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = text\n| Arg1Type = string\n| Arg1Desc = The delocalised text.\n\n}}",
            "timestamp": "2020-08-26 18:38:28"
        }
    },
    "Functions/DarkRP/Client/getF4MenuPanel": {
        "en": {
            "content": "[[Category:Functions|getF4MenuPanel]]\n[[Category:DarkRP|getF4MenuPanel]]\n[[Category:Clientside|getF4MenuPanel]]\n{{Lua_function |\n    function_name   = DarkRP.getF4MenuPanel |\n    arguments   =  |\n    description = Get the F4 menu panel. |\n    deprecated  =  |\n    returns     = {{Type|Panel}} panel |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = panel\n| Arg1Type = Panel\n| Arg1Desc = The F4 menu panel. It will be invalid until the F4 menu has been opened.\n\n}}",
            "timestamp": "2020-08-26 18:41:16"
        }
    },
    "Functions/DarkRP/Client/getPreferredJobModel": {
        "en": {
            "content": "[[Category:Functions|getPreferredJobModel]]\n[[Category:DarkRP|getPreferredJobModel]]\n[[Category:Clientside|getPreferredJobModel]]\n{{Lua_function |\n    function_name   = DarkRP.getPreferredJobModel |\n    arguments   = {{Type|number}} teamNr |\n    description = Get the model preferred by the player (if the job allows multiple models). |\n    deprecated  =  |\n    returns     = {{Type|string}} model |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = teamNr\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The team number of the job.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = model\n| Arg1Type = string\n| Arg1Desc = The preferred model for the job.\n\n}}",
            "timestamp": "2020-08-26 18:45:12"
        }
    },
    "Functions/DarkRP/Client/openF1Menu": {
        "en": {
            "content": "[[Category:Functions|openF1Menu]]\n[[Category:DarkRP|openF1Menu]]\n[[Category:Clientside|openF1Menu]]\n{{Lua_function |\n    function_name   = DarkRP.openF1Menu |\n    arguments   =  |\n    description = Open the F1 help menu. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:41:40"
        }
    },
    "Functions/DarkRP/Client/openF4Menu": {
        "en": {
            "content": "[[Category:Functions|openF4Menu]]\n[[Category:DarkRP|openF4Menu]]\n[[Category:Clientside|openF4Menu]]\n{{Lua_function |\n    function_name   = DarkRP.openF4Menu |\n    arguments   =  |\n    description = Open the F4 menu. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:42:13"
        }
    },
    "Functions/DarkRP/Client/openHitMenu": {
        "en": {
            "content": "[[Category:Functions|openHitMenu]]\n[[Category:DarkRP|openHitMenu]]\n[[Category:Clientside|openHitMenu]]\n{{Lua_function |\n    function_name   = DarkRP.openHitMenu |\n    arguments   = {{Type|Player}} hitman |\n    description = Open the menu that requests a hit. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = hitman\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The hitman to request the hit to.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:41:35"
        }
    },
    "Functions/DarkRP/Client/openKeysMenu": {
        "en": {
            "content": "[[Category:Functions|openKeysMenu]]\n[[Category:DarkRP|openKeysMenu]]\n[[Category:Clientside|openKeysMenu]]\n{{Lua_function |\n    function_name   = DarkRP.openKeysMenu |\n    arguments   =  |\n    description = Open the keys/F2 menu. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:41:03"
        }
    },
    "Functions/DarkRP/Client/openPocketMenu": {
        "en": {
            "content": "[[Category:Functions|openPocketMenu]]\n[[Category:DarkRP|openPocketMenu]]\n[[Category:Clientside|openPocketMenu]]\n{{Lua_function |\n    function_name   = DarkRP.openPocketMenu |\n    arguments   =  |\n    description = Open the DarkRP pocket menu. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:42:03"
        }
    },
    "Functions/DarkRP/Client/readNetDoorVar": {
        "en": {
            "content": "[[Category:Functions|readNetDoorVar]]\n[[Category:DarkRP|readNetDoorVar]]\n[[Category:Clientside|readNetDoorVar]]\n{{Lua_function |\n    function_name   = DarkRP.readNetDoorVar |\n    arguments   =  |\n    description = Internal function. You probably shouldn't need this. DarkRP calls this function when reading DoorVar net messages. This function reads the net data for a specific DoorVar. |\n    deprecated  =  |\n    returns     = {{Type|string}} name, {{Type|any}} value |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Desc = The name of the DoorVar.\n\n| Arg2Name = value\n| Arg2Type = any\n| Arg2Desc = The value of the DoorVar.\n\n}}",
            "timestamp": "2020-08-26 18:41:01"
        }
    },
    "Functions/DarkRP/Client/refreshF1Menu": {
        "en": {
            "content": "[[Category:Functions|refreshF1Menu]]\n[[Category:DarkRP|refreshF1Menu]]\n[[Category:Clientside|refreshF1Menu]]\n{{Lua_function |\n    function_name   = DarkRP.refreshF1Menu |\n    arguments   =  |\n    description = Close the F1 help menu. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:41:51"
        }
    },
    "Functions/DarkRP/Client/removeChatReceiver": {
        "en": {
            "content": "[[Category:Functions|removeChatReceiver]]\n[[Category:DarkRP|removeChatReceiver]]\n[[Category:Clientside|removeChatReceiver]]\n{{Lua_function |\n    function_name   = DarkRP.removeChatReceiver |\n    arguments   = {{Type|string}} prefix |\n    description = Remove a chat command receiver |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = prefix\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The chat command itself (\"/pm\", \"/ooc\", \"/me\" are some examples)\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:42:21"
        }
    },
    "Functions/DarkRP/Client/removeF4MenuTab": {
        "en": {
            "content": "[[Category:Functions|removeF4MenuTab]]\n[[Category:DarkRP|removeF4MenuTab]]\n[[Category:Clientside|removeF4MenuTab]]\n{{Lua_function |\n    function_name   = DarkRP.removeF4MenuTab |\n    arguments   = {{Type|string}} name |\n    description = Remove a tab from the F4 menu by name. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the tab it should remove.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:48:55"
        }
    },
    "Functions/DarkRP/Client/setPreferredJobModel": {
        "en": {
            "content": "[[Category:Functions|setPreferredJobModel]]\n[[Category:DarkRP|setPreferredJobModel]]\n[[Category:Clientside|setPreferredJobModel]]\n{{Lua_function |\n    function_name   = DarkRP.setPreferredJobModel |\n    arguments   = {{Type|number}} teamNr, {{Type|string}} model |\n    description = Set the model preferred by the player (if the job allows multiple models). |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = teamNr\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The team number of the job.\n\n| Arg2Name = model\n| Arg2Type = string\n| Arg2Req  = true\n| Arg2Desc = The preferred model for the job.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:41:58"
        }
    },
    "Functions/DarkRP/Client/switchTabOrder": {
        "en": {
            "content": "[[Category:Functions|switchTabOrder]]\n[[Category:DarkRP|switchTabOrder]]\n[[Category:Clientside|switchTabOrder]]\n{{Lua_function |\n    function_name   = DarkRP.switchTabOrder |\n    arguments   = {{Type|number}} firstTab, {{Type|number}} secondTab |\n    description = Switch the order of two tabs. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = firstTab\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The number of the first tab (if it's the second tab, then this number is 2).\n\n| Arg2Name = secondTab\n| Arg2Type = number\n| Arg2Req  = true\n| Arg2Desc = The number of the second tab.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:42:10"
        }
    },
    "Functions/DarkRP/Client/textWrap": {
        "en": {
            "content": "[[Category:Functions|textWrap]]\n[[Category:DarkRP|textWrap]]\n[[Category:Clientside|textWrap]]\n{{Lua_function |\n    function_name   = DarkRP.textWrap |\n    arguments   = {{Type|string}} text, {{Type|string}} font, {{Type|number}} width |\n    description = Wrap a text around when reaching a certain width. |\n    deprecated  =  |\n    returns     = {{Type|string}} text |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = text\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The text to wrap.\n\n| Arg2Name = font\n| Arg2Type = string\n| Arg2Req  = true\n| Arg2Desc = The font of the text.\n\n| Arg3Name = width\n| Arg3Type = number\n| Arg3Req  = true\n| Arg3Desc = The maximum width in pixels.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = text\n| Arg1Type = string\n| Arg1Desc = The wrapped string.\n\n}}",
            "timestamp": "2020-08-26 18:48:19"
        }
    },
    "Functions/DarkRP/Client/toggleF4Menu": {
        "en": {
            "content": "[[Category:Functions|toggleF4Menu]]\n[[Category:DarkRP|toggleF4Menu]]\n[[Category:Clientside|toggleF4Menu]]\n{{Lua_function |\n    function_name   = DarkRP.toggleF4Menu |\n    arguments   =  |\n    description = Toggle the state of the F4 menu (open or closed). |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:41:56"
        }
    },
    "Functions/DarkRP/Server/addJailPos": {
        "en": {
            "content": "[[Category:Functions|addJailPos]]\n[[Category:DarkRP|addJailPos]]\n[[Category:Serverside|addJailPos]]\n{{Lua_function |\n    function_name   = DarkRP.addJailPos |\n    arguments   = {{Type|Vector}} pos |\n    description = Add a jail position to the map. This jail position will be saved in the database. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = pos\n| Arg1Type = Vector\n| Arg1Req  = true\n| Arg1Desc = The position to add as jailpos.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:42:38"
        }
    },
    "Functions/DarkRP/Server/addTeamSpawnPos": {
        "en": {
            "content": "[[Category:Functions|addTeamSpawnPos]]\n[[Category:DarkRP|addTeamSpawnPos]]\n[[Category:Serverside|addTeamSpawnPos]]\n{{Lua_function |\n    function_name   = DarkRP.addTeamSpawnPos |\n    arguments   = {{Type|number}} team, {{Type|Vector}} pos |\n    description = Add a spawn position to the database. The position will not replace other spawn positions. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = team\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The job to store the spawn position of.\n\n| Arg2Name = pos\n| Arg2Type = Vector\n| Arg2Req  = true\n| Arg2Desc = The position to store.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:48:35"
        }
    },
    "Functions/DarkRP/Server/createMoneyBag": {
        "en": {
            "content": "[[Category:Functions|createMoneyBag]]\n[[Category:DarkRP|createMoneyBag]]\n[[Category:Serverside|createMoneyBag]]\n{{Lua_function |\n    function_name   = DarkRP.createMoneyBag |\n    arguments   = {{Type|Vector}} pos, {{Type|number}} amount |\n    description = Create a money bag. |\n    deprecated  =  |\n    returns     = {{Type|Entity}} moneybag |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = pos\n| Arg1Type = Vector\n| Arg1Req  = true\n| Arg1Desc = The The position where the money bag is to be spawned.\n\n| Arg2Name = amount\n| Arg2Type = number\n| Arg2Req  = true\n| Arg2Desc = The amount of money.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = moneybag\n| Arg1Type = Entity\n| Arg1Desc = The money bag entity.\n\n}}",
            "timestamp": "2020-08-26 18:44:28"
        }
    },
    "Functions/DarkRP/Server/createPlayerData": {
        "en": {
            "content": "[[Category:Functions|createPlayerData]]\n[[Category:DarkRP|createPlayerData]]\n[[Category:Serverside|createPlayerData]]\n{{Lua_function |\n    function_name   = DarkRP.createPlayerData |\n    arguments   = {{Type|Player}} ply, {{Type|string}} name, {{Type|number}} wallet, {{Type|number}} salary |\n    description = Internal function: creates an entry in the database for a player who has joined for the first time. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player to create the data for.\n\n| Arg2Name = name\n| Arg2Type = string\n| Arg2Req  = true\n| Arg2Desc = The name of the player.\n\n| Arg3Name = wallet\n| Arg3Type = number\n| Arg3Req  = true\n| Arg3Desc = The amount of money the player has.\n\n| Arg4Name = salary\n| Arg4Type = number\n| Arg4Req  = true\n| Arg4Desc = The salary of the player.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:43:48"
        }
    },
    "Functions/DarkRP/Server/createQuestion": {
        "en": {
            "content": "[[Category:Functions|createQuestion]]\n[[Category:DarkRP|createQuestion]]\n[[Category:Serverside|createQuestion]]\n{{Lua_function |\n    function_name   = DarkRP.createQuestion |\n    arguments   = {{Type|string}} question, {{Type|string}} quesid, {{Type|Player}} target, {{Type|number}} delay, {{Type|function}} callback, {{Type|Player}} fromPly, {{Type|Player}} toPly, {{Type|any}} ... |\n    description = Ask someone a question. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = question\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The question to ask.\n\n| Arg2Name = quesid\n| Arg2Type = string\n| Arg2Req  = true\n| Arg2Desc = A unique question id.\n\n| Arg3Name = target\n| Arg3Type = Player\n| Arg3Req  = true\n| Arg3Desc = Who to ask the question.\n\n| Arg4Name = delay\n| Arg4Type = number\n| Arg4Req  = true\n| Arg4Desc = For how long the player will be able to answer.\n\n| Arg5Name = callback\n| Arg5Type = function\n| Arg5Req  = true\n| Arg5Desc = The function that gets called after the question.\n\n| Arg6Name = fromPly\n| Arg6Type = Player\n| Arg6Req  = false\n| Arg6Desc = The player who asked the question.\n\n| Arg7Name = toPly\n| Arg7Type = Player\n| Arg7Req  = false\n| Arg7Desc = A third involved player.\n\n| Arg8Name = ...\n| Arg8Type = any\n| Arg8Req  = false\n| Arg8Desc = Any other information.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:42:39"
        }
    },
    "Functions/DarkRP/Server/createVote": {
        "en": {
            "content": "[[Category:Functions|createVote]]\n[[Category:DarkRP|createVote]]\n[[Category:Serverside|createVote]]\n{{Lua_function |\n    function_name   = DarkRP.createVote |\n    arguments   = {{Type|string}} question, {{Type|string}} voteid, {{Type|Player}} target, {{Type|number}} delay, {{Type|function}} callback, {{Type|table}} excludeVoters, {{Type|function}} fail, {{Type|any}} ... |\n    description = Create a vote. |\n    deprecated  =  |\n    returns     = {{Type|table}} vote |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = question\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The question to ask in the vote.\n\n| Arg2Name = voteid\n| Arg2Type = string\n| Arg2Req  = true\n| Arg2Desc = A unique vote id.\n\n| Arg3Name = target\n| Arg3Type = Player\n| Arg3Req  = true\n| Arg3Desc = Whom the vote is about.\n\n| Arg4Name = delay\n| Arg4Type = number\n| Arg4Req  = true\n| Arg4Desc = For how long the player will be able to answer.\n\n| Arg5Name = callback\n| Arg5Type = function\n| Arg5Req  = true\n| Arg5Desc = The function that gets called after the vote.\n\n| Arg6Name = excludeVoters\n| Arg6Type = table\n| Arg6Req  = false\n| Arg6Desc = The players to exclude from voting.\n\n| Arg7Name = fail\n| Arg7Type = function\n| Arg7Req  = false\n| Arg7Desc = A callback for when the vote fails.\n\n| Arg8Name = ...\n| Arg8Type = any\n| Arg8Req  = false\n| Arg8Desc = Any other information.\n\nIf the vote involves multiple parties (i.e. the target of the vote and person who started it are different) you should provide a table with the \"source\" field set to the player who intiated the vote. This ensures the notifications about the vote are sent to the correct player.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = vote\n| Arg1Type = table\n| Arg1Desc = All the vote information. Returns nil if the vote did not start because the canStartVote hook blocked it.\n\n}}",
            "timestamp": "2020-08-26 18:44:34"
        }
    },
    "Functions/DarkRP/Server/defineChatCommand": {
        "en": {
            "content": "[[Category:Functions|defineChatCommand]]\n[[Category:DarkRP|defineChatCommand]]\n[[Category:Serverside|defineChatCommand]]\n{{Lua_function |\n    function_name   = DarkRP.defineChatCommand |\n    arguments   = {{Type|string}} chat command, {{Type|function}} callback |\n    description = Create a chat command that calls the function |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = chat command\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The registered chat command\n\n| Arg2Name = callback\n| Arg2Type = function\n| Arg2Req  = true\n| Arg2Desc = The function that is called when the chat command is executed\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:43:35"
        }
    },
    "Functions/DarkRP/Server/definePrivilegedChatCommand": {
        "en": {
            "content": "[[Category:Functions|definePrivilegedChatCommand]]\n[[Category:DarkRP|definePrivilegedChatCommand]]\n[[Category:Serverside|definePrivilegedChatCommand]]\n{{Lua_function |\n    function_name   = DarkRP.definePrivilegedChatCommand |\n    arguments   = {{Type|string}} chat command, {{Type|string}} privilege, {{Type|function}} callback |\n    description = Create a chat command that calls the function if the player has the right CAMI privilege. Will automatically notify the user when they don't have access. Note that chat command functions registered with this function can NOT override the chat that will appear after the command has been executed. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = chat command\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The registered chat command\n\n| Arg2Name = privilege\n| Arg2Type = string\n| Arg2Req  = true\n| Arg2Desc = The name of the CAMI privilege\n\n| Arg3Name = callback\n| Arg3Type = function\n| Arg3Req  = true\n| Arg3Desc = The function that is called when the chat command is executed\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:37:19"
        }
    },
    "Functions/DarkRP/Server/destroyLastVote": {
        "en": {
            "content": "[[Category:Functions|destroyLastVote]]\n[[Category:DarkRP|destroyLastVote]]\n[[Category:Serverside|destroyLastVote]]\n{{Lua_function |\n    function_name   = DarkRP.destroyLastVote |\n    arguments   =  |\n    description = Destroy the last created vote. |\n    deprecated  =  |\n    returns     = {{Type|boolean}} destroyed |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = destroyed\n| Arg1Type = boolean\n| Arg1Desc = Whether there was a last vote to destroy or not.\n\n}}",
            "timestamp": "2020-08-26 18:40:29"
        }
    },
    "Functions/DarkRP/Server/destroyQuestion": {
        "en": {
            "content": "[[Category:Functions|destroyQuestion]]\n[[Category:DarkRP|destroyQuestion]]\n[[Category:Serverside|destroyQuestion]]\n{{Lua_function |\n    function_name   = DarkRP.destroyQuestion |\n    arguments   = {{Type|string}} id |\n    description = Destroy a question by ID. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = id\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The id of the question.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:48:06"
        }
    },
    "Functions/DarkRP/Server/destroyQuestionsWithEnt": {
        "en": {
            "content": "[[Category:Functions|destroyQuestionsWithEnt]]\n[[Category:DarkRP|destroyQuestionsWithEnt]]\n[[Category:Serverside|destroyQuestionsWithEnt]]\n{{Lua_function |\n    function_name   = DarkRP.destroyQuestionsWithEnt |\n    arguments   = {{Type|Entity}} ent |\n    description = Destroy all questions that have something to do with this ent. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ent\n| Arg1Type = Entity\n| Arg1Req  = true\n| Arg1Desc = The Entity.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:45:24"
        }
    },
    "Functions/DarkRP/Server/destroyVotesWithEnt": {
        "en": {
            "content": "[[Category:Functions|destroyVotesWithEnt]]\n[[Category:DarkRP|destroyVotesWithEnt]]\n[[Category:Serverside|destroyVotesWithEnt]]\n{{Lua_function |\n    function_name   = DarkRP.destroyVotesWithEnt |\n    arguments   = {{Type|Entity}} ent |\n    description = Destroy all votes that have something to do with this ent. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ent\n| Arg1Type = Entity\n| Arg1Req  = true\n| Arg1Desc = The Entity.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:45:28"
        }
    },
    "Functions/DarkRP/Server/doorIndexToEnt": {
        "en": {
            "content": "[[Category:Functions|doorIndexToEnt]]\n[[Category:DarkRP|doorIndexToEnt]]\n[[Category:Serverside|doorIndexToEnt]]\n{{Lua_function |\n    function_name   = DarkRP.doorIndexToEnt |\n    arguments   = {{Type|number}} index |\n    description = Get the entity of a door index (inverse of ent:doorIndexToEnt()). Note: the door MUST have been created by the map! |\n    deprecated  =  |\n    returns     = {{Type|Entity}} door |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = index\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The door index\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = door\n| Arg1Type = Entity\n| Arg1Desc = The door entity\n\n}}",
            "timestamp": "2020-08-26 18:48:51"
        }
    },
    "Functions/DarkRP/Server/doorToEntIndex": {
        "en": {
            "content": "[[Category:Functions|doorToEntIndex]]\n[[Category:DarkRP|doorToEntIndex]]\n[[Category:Serverside|doorToEntIndex]]\n{{Lua_function |\n    function_name   = DarkRP.doorToEntIndex |\n    arguments   = {{Type|number}} index |\n    description = Get an ENT index from a door index. |\n    deprecated  =  |\n    returns     = {{Type|number}} index |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = index\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The door index\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = index\n| Arg1Type = number\n| Arg1Desc = The ENT index\n\n}}",
            "timestamp": "2020-08-26 18:45:43"
        }
    },
    "Functions/DarkRP/Server/findEmptyPos": {
        "en": {
            "content": "[[Category:Functions|findEmptyPos]]\n[[Category:DarkRP|findEmptyPos]]\n[[Category:Serverside|findEmptyPos]]\n{{Lua_function |\n    function_name   = DarkRP.findEmptyPos |\n    arguments   = {{Type|Vector}} pos, {{Type|table}} ignore, {{Type|number}} distance, {{Type|number}} step, {{Type|Vector}} area |\n    description = Find an empty position as close as possible to the given position (Note: this algorithm is slow!). |\n    deprecated  =  |\n    returns     = {{Type|Vector}} pos |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = pos\n| Arg1Type = Vector\n| Arg1Req  = true\n| Arg1Desc = The position to check for emptiness.\n\n| Arg2Name = ignore\n| Arg2Type = table\n| Arg2Req  = false\n| Arg2Desc = Table of things the algorithm can ignore.\n\n| Arg3Name = distance\n| Arg3Type = number\n| Arg3Req  = true\n| Arg3Desc = The maximum distance to look for empty positions.\n\n| Arg4Name = step\n| Arg4Type = number\n| Arg4Req  = true\n| Arg4Desc = The size of the steps to check (it places it will look are STEP units removed from one another).\n\n| Arg5Name = area\n| Arg5Type = Vector\n| Arg5Req  = true\n| Arg5Desc = The hull to check, this is Vector(16, 16, 64) for players.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = pos\n| Arg1Type = Vector\n| Arg1Desc = A found position. When no position was found, the parameter is returned\n\n}}",
            "timestamp": "2020-08-26 18:43:56"
        }
    },
    "Functions/DarkRP/Server/getChatSound": {
        "en": {
            "content": "[[Category:Functions|getChatSound]]\n[[Category:DarkRP|getChatSound]]\n[[Category:Serverside|getChatSound]]\n{{Lua_function |\n    function_name   = DarkRP.getChatSound |\n    arguments   = {{Type|string}} text |\n    description = Get a chat sound (play a noise when someone says something) associated with the given phrase. |\n    deprecated  =  |\n    returns     = {{Type|table}} soundPaths |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = text\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The text that triggers the chat sound.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = soundPaths\n| Arg1Type = table\n| Arg1Desc = A table of string sound paths associated with the given text.\n\n}}",
            "timestamp": "2020-08-26 18:43:26"
        }
    },
    "Functions/DarkRP/Server/getHits": {
        "en": {
            "content": "[[Category:Functions|getHits]]\n[[Category:DarkRP|getHits]]\n[[Category:Serverside|getHits]]\n{{Lua_function |\n    function_name   = DarkRP.getHits |\n    arguments   =  |\n    description = Get all the active hits |\n    deprecated  =  |\n    returns     = {{Type|table}} hits |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = hits\n| Arg1Type = table\n| Arg1Desc = A table in which the keys are hitmen and the values are hit information, like the customer.\n\n}}",
            "timestamp": "2020-08-26 18:37:34"
        }
    },
    "Functions/DarkRP/Server/initDatabase": {
        "en": {
            "content": "[[Category:Functions|initDatabase]]\n[[Category:DarkRP|initDatabase]]\n[[Category:Serverside|initDatabase]]\n{{Lua_function |\n    function_name   = DarkRP.initDatabase |\n    arguments   =  |\n    description = Initialize the DarkRP database. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:48:08"
        }
    },
    "Functions/DarkRP/Server/isEmpty": {
        "en": {
            "content": "[[Category:Functions|isEmpty]]\n[[Category:DarkRP|isEmpty]]\n[[Category:Serverside|isEmpty]]\n{{Lua_function |\n    function_name   = DarkRP.isEmpty |\n    arguments   = {{Type|Vector}} pos, {{Type|table}} ignore |\n    description = Check whether the given position is empty. If you want the function not to ignore your entity, set the variable NotEmptyPos (ex. ENT.NotEmptyPos = true) |\n    deprecated  =  |\n    returns     = {{Type|boolean}} empty |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = pos\n| Arg1Type = Vector\n| Arg1Req  = true\n| Arg1Desc = The position to check for emptiness.\n\n| Arg2Name = ignore\n| Arg2Type = table\n| Arg2Req  = false\n| Arg2Desc = Table of things the algorithm can ignore.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = empty\n| Arg1Type = boolean\n| Arg1Desc = Whether the given position is empty.\n\n}}",
            "timestamp": "2020-08-26 18:44:29"
        }
    },
    "Functions/DarkRP/Server/jailPosCount": {
        "en": {
            "content": "[[Category:Functions|jailPosCount]]\n[[Category:DarkRP|jailPosCount]]\n[[Category:Serverside|jailPosCount]]\n{{Lua_function |\n    function_name   = DarkRP.jailPosCount |\n    arguments   =  |\n    description = The amount of jail positions in the current map. |\n    deprecated  =  |\n    returns     = {{Type|number}} count |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = count\n| Arg1Type = number\n| Arg1Desc = The amount of jail positions in the current map.\n\n}}",
            "timestamp": "2020-08-26 18:37:47"
        }
    },
    "Functions/DarkRP/Server/lockdown": {
        "en": {
            "content": "[[Category:Functions|lockdown]]\n[[Category:DarkRP|lockdown]]\n[[Category:Serverside|lockdown]]\n{{Lua_function |\n    function_name   = DarkRP.lockdown |\n    arguments   = {{Type|Player}} ply |\n    description = Start a lockdown. |\n    deprecated  =  |\n    returns     = {{Type|string}} str |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player who initiated the lockdown.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = str\n| Arg1Type = string\n| Arg1Desc = Empty string (since it's a called in a chat command)\n\n}}",
            "timestamp": "2020-08-26 18:41:37"
        }
    },
    "Functions/DarkRP/Server/log": {
        "en": {
            "content": "[[Category:Functions|log]]\n[[Category:DarkRP|log]]\n[[Category:Serverside|log]]\n{{Lua_function |\n    function_name   = DarkRP.log |\n    arguments   = {{Type|string}} message, {{Type|Color}} colour, {{Type|boolean}} noFileSave |\n    description = Log a message in DarkRP |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = message\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The message to log\n\n| Arg2Name = colour\n| Arg2Type = Color\n| Arg2Req  = false\n| Arg2Desc = The color of the message in the admin's console. Admins won't see the message if this is not defined.\n\n| Arg3Name = noFileSave\n| Arg3Type = boolean\n| Arg3Req  = false\n| Arg3Desc = Whether to write the log to a file or not.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:48:10"
        }
    },
    "Functions/DarkRP/Server/notify": {
        "en": {
            "content": "[[Category:Functions|notify]]\n[[Category:DarkRP|notify]]\n[[Category:Serverside|notify]]\n{{Lua_function |\n    function_name   = DarkRP.notify |\n    arguments   = {{Type|Player, table}} ply, {{Type|number}} msgType, {{Type|number}} time, {{Type|string}} message |\n    description = Make a notification pop up on the player's screen. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player, table\n| Arg1Req  = false\n| Arg1Desc = The receiver(s) of the message.\n\n| Arg2Name = msgType\n| Arg2Type = number\n| Arg2Req  = true\n| Arg2Desc = The type of the message. (Uses https://wiki.facepunch.com/gmod/Enums/NOTIFY)\n\n| Arg3Name = time\n| Arg3Type = number\n| Arg3Req  = true\n| Arg3Desc = For how long the notification should stay on the screen.\n\n| Arg4Name = message\n| Arg4Type = string\n| Arg4Req  = true\n| Arg4Desc = The actual message.\n\n}}\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-09-23 16:38:33"
        }
    },
    "Functions/DarkRP/Server/notifyAll": {
        "en": {
            "content": "[[Category:Functions|notifyAll]]\n[[Category:DarkRP|notifyAll]]\n[[Category:Serverside|notifyAll]]\n{{Lua_function |\n    function_name   = DarkRP.notifyAll |\n    arguments   = {{Type|number}} msgType, {{Type|number}} time, {{Type|string}} message |\n    description = Make a notification pop up on the everyone's screen. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = msgType\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The type of the message.\n\n| Arg2Name = time\n| Arg2Type = number\n| Arg2Req  = true\n| Arg2Desc = For how long the notification should stay on the screen.\n\n| Arg3Name = message\n| Arg3Type = string\n| Arg3Req  = true\n| Arg3Desc = The actual message.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:37:41"
        }
    },
    "Functions/DarkRP/Server/offlinePlayerData": {
        "en": {
            "content": "[[Category:Functions|offlinePlayerData]]\n[[Category:DarkRP|offlinePlayerData]]\n[[Category:Serverside|offlinePlayerData]]\n{{Lua_function |\n    function_name   = DarkRP.offlinePlayerData |\n    arguments   = {{Type|string}} steamid, {{Type|function}} callback, {{Type|function}} failure |\n    description = Get a player's information from the database using a SteamID for use when the player is offline. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = steamid\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The SteamID of the player to get the data for.\n\n| Arg2Name = callback\n| Arg2Type = function\n| Arg2Req  = true\n| Arg2Desc = The function that receives the information.\n\n| Arg3Name = failure\n| Arg3Type = function\n| Arg3Req  = true\n| Arg3Desc = The function that is called when the information cannot be retrieved.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:44:39"
        }
    },
    "Functions/DarkRP/Server/payPlayer": {
        "en": {
            "content": "[[Category:Functions|payPlayer]]\n[[Category:DarkRP|payPlayer]]\n[[Category:Serverside|payPlayer]]\n{{Lua_function |\n    function_name   = DarkRP.payPlayer |\n    arguments   = {{Type|Player}} sender, {{Type|Player}} receiver, {{Type|number}} amount |\n    description = Make one player give money to the other player. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = sender\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player who gives the money.\n\n| Arg2Name = receiver\n| Arg2Type = Player\n| Arg2Req  = true\n| Arg2Desc = The player who receives the money.\n\n| Arg3Name = amount\n| Arg3Type = number\n| Arg3Req  = true\n| Arg3Desc = The amount of money.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:38:45"
        }
    },
    "Functions/DarkRP/Server/printConsoleMessage": {
        "en": {
            "content": "[[Category:Functions|printConsoleMessage]]\n[[Category:DarkRP|printConsoleMessage]]\n[[Category:Serverside|printConsoleMessage]]\n{{Lua_function |\n    function_name   = DarkRP.printConsoleMessage |\n    arguments   = {{Type|Player}} ply, {{Type|string}} msg |\n    description = Prints a message to a given player's console. This function also handles server consoles too (EntIndex = 0). |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player to send the console message to.\n\n| Arg2Name = msg\n| Arg2Type = string\n| Arg2Req  = true\n| Arg2Desc = The actual message.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:47:32"
        }
    },
    "Functions/DarkRP/Server/printMessageAll": {
        "en": {
            "content": "[[Category:Functions|printMessageAll]]\n[[Category:DarkRP|printMessageAll]]\n[[Category:Serverside|printMessageAll]]\n{{Lua_function |\n    function_name   = DarkRP.printMessageAll |\n    arguments   = {{Type|number}} msgType, {{Type|string}} message |\n    description = Make a notification pop up in the middle of everyone's screen. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = msgType\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The type of the message.\n\n| Arg2Name = message\n| Arg2Type = string\n| Arg2Req  = true\n| Arg2Desc = The actual message.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:41:57"
        }
    },
    "Functions/DarkRP/Server/removeTeamSpawnPos": {
        "en": {
            "content": "[[Category:Functions|removeTeamSpawnPos]]\n[[Category:DarkRP|removeTeamSpawnPos]]\n[[Category:Serverside|removeTeamSpawnPos]]\n{{Lua_function |\n    function_name   = DarkRP.removeTeamSpawnPos |\n    arguments   = {{Type|number}} team, {{Type|Vector}} pos |\n    description = Remove a single spawn position. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = team\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The job to remove the spawn position of.\n\n| Arg2Name = pos\n| Arg2Type = Vector\n| Arg2Req  = true\n| Arg2Desc = The position to remove.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:37:24"
        }
    },
    "Functions/DarkRP/Server/resetLaws": {
        "en": {
            "content": "[[Category:Functions|resetLaws]]\n[[Category:DarkRP|resetLaws]]\n[[Category:Serverside|resetLaws]]\n{{Lua_function |\n    function_name   = DarkRP.resetLaws |\n    arguments   =  |\n    description = Reset to default laws. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:37:12"
        }
    },
    "Functions/DarkRP/Server/restorePlayerData": {
        "en": {
            "content": "[[Category:Functions|restorePlayerData]]\n[[Category:DarkRP|restorePlayerData]]\n[[Category:Serverside|restorePlayerData]]\n{{Lua_function |\n    function_name   = DarkRP.restorePlayerData |\n    arguments   =  |\n    description = Internal function that restores a player's DarkRP information when they join. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:43:47"
        }
    },
    "Functions/DarkRP/Server/retrieveJailPos": {
        "en": {
            "content": "[[Category:Functions|retrieveJailPos]]\n[[Category:DarkRP|retrieveJailPos]]\n[[Category:Serverside|retrieveJailPos]]\n{{Lua_function |\n    function_name   = DarkRP.retrieveJailPos |\n    arguments   = {{Type|number}} index |\n    description = Retrieve a jail position. |\n    deprecated  =  |\n    returns     = {{Type|Vector}} pos |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = index\n| Arg1Type = number\n| Arg1Req  = false\n| Arg1Desc = Which jailpos to return.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = pos\n| Arg1Type = Vector\n| Arg1Desc = A jail position.\n\n}}",
            "timestamp": "2020-08-26 18:37:21"
        }
    },
    "Functions/DarkRP/Server/retrievePlayerData": {
        "en": {
            "content": "[[Category:Functions|getDarkRPVar]]\n[[Category:Player|getDarkRPVar]]\n[[Category:Shared|getDarkRPVar]]\n{{Lua_function |\n\tfunction_name\t= Player:getDarkRPVar |\n\targuments\t= {{Type|string}} var |\n\tdescription\t= Get the value of a DarkRPVar, which is shared between server and client. |\n\tdeprecated\t=  |\n\treturns \t= {{Type|any}} value |\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = var\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the variable.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = value\n| Arg1Type = any\n| Arg1Desc = The value of the DarkRP var.\n\n}}\n\n\n== List of DarkRP Variables (To be put in getDarkRPVar( \" \" ) ) ==\n\n* AFK\n* AFKDemoted\n* money\n* salary\n* rpname\n* job\n* HasGunlicense\n* Arrested\n* wanted\n* wantedReason\n* agenda\n* zombieToggle ( Whether the person toggled to a zombie during the zombie event )\n* hitTarget\n* hitPrice\n* lastHitTime\n* Energy (This is what hungermod uses for hunger)\n\n== Example Code ==\n___________________________________________________________________________________________\n\n for _, player in ipairs(player.GetAll()) do\n    print( player:getDarkRPVar(\"rpname\") , player:getDarkRPVar(\"job\") , player:GetDarkRPVar(\"money\") , player:getDarkRPVar(\"Arrested\"))\n end\n\nResult of Code: Quang\tCitizen\t2500\tfalse",
            "timestamp": "2022-01-02 21:48:26"
        }
    },
    "Functions/DarkRP/Server/retrieveRPNames": {
        "en": {
            "content": "[[Category:Functions|retrieveRPNames]]\n[[Category:DarkRP|retrieveRPNames]]\n[[Category:Serverside|retrieveRPNames]]\n{{Lua_function |\n    function_name   = DarkRP.retrieveRPNames |\n    arguments   = {{Type|string}} name, {{Type|function}} callback |\n    description = Whether a given RP name is taken by someone else. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The RP name.\n\n| Arg2Name = callback\n| Arg2Type = function\n| Arg2Req  = true\n| Arg2Desc = The function that receives the boolean answer in its first parameter.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:48:41"
        }
    },
    "Functions/DarkRP/Server/retrieveSalary": {
        "en": {
            "content": "[[Category:Functions|retrieveSalary]]\n[[Category:DarkRP|retrieveSalary]]\n[[Category:Serverside|retrieveSalary]]\n{{Lua_function |\n    function_name   = DarkRP.retrieveSalary |\n    arguments   = {{Type|Player}} ply, {{Type|function}} callback |\n    description = Get a player's salary from the database. |\n    deprecated  =  |\n    returns     = {{Type|number}} salary |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player to get the data for.\n\n| Arg2Name = callback\n| Arg2Type = function\n| Arg2Req  = true\n| Arg2Desc = The function that receives the salary. Deprecated, use the return value.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = salary\n| Arg1Type = number\n| Arg1Desc = The salary.\n\n}}",
            "timestamp": "2020-08-26 18:43:59"
        }
    },
    "Functions/DarkRP/Server/retrieveTeamSpawnPos": {
        "en": {
            "content": "[[Category:Functions|retrieveTeamSpawnPos]]\n[[Category:DarkRP|retrieveTeamSpawnPos]]\n[[Category:Serverside|retrieveTeamSpawnPos]]\n{{Lua_function |\n    function_name   = DarkRP.retrieveTeamSpawnPos |\n    arguments   = {{Type|number}} team |\n    description = Retrieve a random spawn position for a job. |\n    deprecated  =  |\n    returns     = {{Type|Vector}} pos |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = team\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The job to get a spawn position for.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = pos\n| Arg1Type = Vector\n| Arg1Desc = A nice spawn position.\n\n}}",
            "timestamp": "2020-08-26 18:40:33"
        }
    },
    "Functions/DarkRP/Server/setChatSound": {
        "en": {
            "content": "[[Category:Functions|setChatSound]]\n[[Category:DarkRP|setChatSound]]\n[[Category:Serverside|setChatSound]]\n{{Lua_function |\n    function_name   = DarkRP.setChatSound |\n    arguments   = {{Type|string}} text, {{Type|table}} sounds |\n    description = Set a chat sound (play a noise when someone says something) |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = text\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The text that should trigger the sound.\n\n| Arg2Name = sounds\n| Arg2Type = table\n| Arg2Req  = true\n| Arg2Desc = A table of string sound paths.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:47:48"
        }
    },
    "Functions/DarkRP/Server/setJailPos": {
        "en": {
            "content": "[[Category:Functions|setJailPos]]\n[[Category:DarkRP|setJailPos]]\n[[Category:Serverside|setJailPos]]\n{{Lua_function |\n    function_name   = DarkRP.setJailPos |\n    arguments   = {{Type|Vector}} pos |\n    description = Remove all jail positions in this map and create a new one. To add a jailpos without removing previous ones use DarkRP.addJailPos. This jail position will be saved in the database. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = pos\n| Arg1Type = Vector\n| Arg1Req  = true\n| Arg1Desc = The position to set as jailpos.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:38:04"
        }
    },
    "Functions/DarkRP/Server/storeDoorData": {
        "en": {
            "content": "[[Category:Functions|storeDoorData]]\n[[Category:DarkRP|storeDoorData]]\n[[Category:Serverside|storeDoorData]]\n{{Lua_function |\n    function_name   = DarkRP.storeDoorData |\n    arguments   = {{Type|Entity}} ent |\n    description = Store the information about a door in the database. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ent\n| Arg1Type = Entity\n| Arg1Req  = true\n| Arg1Desc = The door.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:39:40"
        }
    },
    "Functions/DarkRP/Server/storeDoorGroup": {
        "en": {
            "content": "[[Category:Functions|storeDoorGroup]]\n[[Category:DarkRP|storeDoorGroup]]\n[[Category:Serverside|storeDoorGroup]]\n{{Lua_function |\n    function_name   = DarkRP.storeDoorGroup |\n    arguments   = {{Type|Entity}} ent, {{Type|string}} group |\n    description = Store the group of a door in the database. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ent\n| Arg1Type = Entity\n| Arg1Req  = true\n| Arg1Desc = The door.\n\n| Arg2Name = group\n| Arg2Type = string\n| Arg2Req  = true\n| Arg2Desc = The group of the door.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:39:54"
        }
    },
    "Functions/DarkRP/Server/storeJailPos": {
        "en": {
            "content": "[[Category:Functions|storeJailPos]]\n[[Category:DarkRP|storeJailPos]]\n[[Category:Serverside|storeJailPos]]\n{{Lua_function |\n    function_name   = DarkRP.storeJailPos |\n    arguments   = {{Type|Player}} ply, {{Type|boolean}} addingPos |\n    description = Store a jailposition from a player's location. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player of whom to get the location.\n\n| Arg2Name = addingPos\n| Arg2Type = boolean\n| Arg2Req  = false\n| Arg2Desc = Whether to reset all jailpositions and to create a new one here or to add it to the existing jailpos.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:37:23"
        }
    },
    "Functions/DarkRP/Server/storeMoney": {
        "en": {
            "content": "[[Category:Functions|storeMoney]]\n[[Category:DarkRP|storeMoney]]\n[[Category:Serverside|storeMoney]]\n{{Lua_function |\n    function_name   = DarkRP.storeMoney |\n    arguments   = {{Type|Player}} ply, {{Type|number}} amount |\n    description = Internal function. Store a player's money in the database. Do not call this if you just want to set someone's money, the player will not see the change! |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player.\n\n| Arg2Name = amount\n| Arg2Type = number\n| Arg2Req  = true\n| Arg2Desc = The new contents of the player's wallet.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:44:13"
        }
    },
    "Functions/DarkRP/Server/storeOfflineMoney": {
        "en": {
            "content": "[[Category:Functions|storeOfflineMoney]]\n[[Category:DarkRP|storeOfflineMoney]]\n[[Category:Serverside|storeOfflineMoney]]\n{{Lua_function |\n    function_name   = DarkRP.storeOfflineMoney |\n    arguments   = {{Type|number}} sid64, {{Type|number}} amount |\n    description = Store the wallet amount of an offline player. Use DarkRP.offlinePlayerData to fetch the current wallet amount. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = sid64\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The SteamID64 of the player to set the wallet of. NOTE: THIS USED TO BE THE UNIQUEID, BUT THIS CHANGED!\n\n| Arg2Name = amount\n| Arg2Type = number\n| Arg2Req  = true\n| Arg2Desc = The amount of money.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:43:38"
        }
    },
    "Functions/DarkRP/Server/storeRPName": {
        "en": {
            "content": "[[Category:Functions|storeRPName]]\n[[Category:DarkRP|storeRPName]]\n[[Category:Serverside|storeRPName]]\n{{Lua_function |\n    function_name   = DarkRP.storeRPName |\n    arguments   = {{Type|Player}} ply, {{Type|string}} name |\n    description = Store an RP name in the database. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player that gets the RP name.\n\n| Arg2Name = name\n| Arg2Type = string\n| Arg2Req  = true\n| Arg2Desc = The new name of the player.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:47:42"
        }
    },
    "Functions/DarkRP/Server/storeSalary": {
        "en": {
            "content": "[[Category:Functions|storeSalary]]\n[[Category:DarkRP|storeSalary]]\n[[Category:Serverside|storeSalary]]\n{{Lua_function |\n    function_name   = DarkRP.storeSalary |\n    arguments   = {{Type|Player}} ply, {{Type|number}} amount |\n    description = Internal and deprecated function. Used to store a player's salary in the database. |\n    deprecated  = Use the ply:setSelfDarkRPVar(\"salary\", value) function instead. |\n    returns     = {{Type|number}} amount |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player.\n\n| Arg2Name = amount\n| Arg2Type = number\n| Arg2Req  = true\n| Arg2Desc = The new contents of the player's wallet.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = amount\n| Arg1Type = number\n| Arg1Desc = The new contents of the player's wallet.\n\n}}",
            "timestamp": "2020-08-26 18:47:17"
        }
    },
    "Functions/DarkRP/Server/storeTeamDoorOwnability": {
        "en": {
            "content": "[[Category:Functions|storeTeamDoorOwnability]]\n[[Category:DarkRP|storeTeamDoorOwnability]]\n[[Category:Serverside|storeTeamDoorOwnability]]\n{{Lua_function |\n    function_name   = DarkRP.storeTeamDoorOwnability |\n    arguments   = {{Type|Entity}} ent |\n    description = Store the ownability information of a door in the database. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ent\n| Arg1Type = Entity\n| Arg1Req  = true\n| Arg1Desc = The door.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:40:53"
        }
    },
    "Functions/DarkRP/Server/storeTeamSpawnPos": {
        "en": {
            "content": "[[Category:Functions|storeTeamSpawnPos]]\n[[Category:DarkRP|storeTeamSpawnPos]]\n[[Category:Serverside|storeTeamSpawnPos]]\n{{Lua_function |\n    function_name   = DarkRP.storeTeamSpawnPos |\n    arguments   = {{Type|number}} team, {{Type|Vector}} pos |\n    description = Store a spawn position of a job in the database (replaces all other spawn positions). |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = team\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The job to store the spawn position of.\n\n| Arg2Name = pos\n| Arg2Type = Vector\n| Arg2Req  = true\n| Arg2Desc = The position to store.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:41:04"
        }
    },
    "Functions/DarkRP/Server/talkToPerson": {
        "en": {
            "content": "[[Category:Functions|talkToPerson]]\n[[Category:DarkRP|talkToPerson]]\n[[Category:Serverside|talkToPerson]]\n{{Lua_function |\n    function_name   = DarkRP.talkToPerson |\n    arguments   = {{Type|Player}} receiver, {{Type|Color}} col1, {{Type|string}} text1, {{Type|Color}} col2, {{Type|string}} text2, {{Type|Player}} sender |\n    description = Send a chat message to a player. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = receiver\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The receiver of the message.\n\n| Arg2Name = col1\n| Arg2Type = Color\n| Arg2Req  = true\n| Arg2Desc = The color of the first part of the message.\n\n| Arg3Name = text1\n| Arg3Type = string\n| Arg3Req  = true\n| Arg3Desc = The first part of the message.\n\n| Arg4Name = col2\n| Arg4Type = Color\n| Arg4Req  = true\n| Arg4Desc = The color of the second part of the message.\n\n| Arg5Name = text2\n| Arg5Type = string\n| Arg5Req  = true\n| Arg5Desc = The secpnd part of the message.\n\n| Arg6Name = sender\n| Arg6Type = Player\n| Arg6Req  = false\n| Arg6Desc = The sender of the message.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:44:03"
        }
    },
    "Functions/DarkRP/Server/talkToRange": {
        "en": {
            "content": "[[Category:Functions|talkToRange]]\n[[Category:DarkRP|talkToRange]]\n[[Category:Serverside|talkToRange]]\n{{Lua_function |\n    function_name   = DarkRP.talkToRange |\n    arguments   = {{Type|Player}} ply, {{Type|string}} playerName, {{Type|string}} message, {{Type|number}} size |\n    description = Send a chat message to people close to a player. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The sender of the message.\n\n| Arg2Name = playerName\n| Arg2Type = string\n| Arg2Req  = true\n| Arg2Desc = The name of the sender of the message.\n\n| Arg3Name = message\n| Arg3Type = string\n| Arg3Req  = true\n| Arg3Desc = The actual message.\n\n| Arg4Name = size\n| Arg4Type = number\n| Arg4Req  = true\n| Arg4Desc = The radius of the circle in which players can see the message in chat.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:41:08"
        }
    },
    "Functions/DarkRP/Server/toggleSleep": {
        "en": {
            "content": "[[Category:Functions|toggleSleep]]\n[[Category:DarkRP|toggleSleep]]\n[[Category:Serverside|toggleSleep]]\n{{Lua_function |\n    function_name   = DarkRP.toggleSleep |\n    arguments   = {{Type|Player}} ply, {{Type|any}} command |\n    description = Old function to toggle sleep. I'm not proud of it. |\n    deprecated  =  |\n    returns     = {{Type|string}} str |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player to toggle sleep of.\n\n| Arg2Name = command\n| Arg2Type = any\n| Arg2Req  = false\n| Arg2Desc = Set to \"force\" to force the sleep toggle. Set to true to arrest the player.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = str\n| Arg1Type = string\n| Arg1Desc = Empty string (since it's a called in a chat command)\n\n}}",
            "timestamp": "2020-08-26 18:47:12"
        }
    },
    "Functions/DarkRP/Server/unLockdown": {
        "en": {
            "content": "[[Category:Functions|unLockdown]]\n[[Category:DarkRP|unLockdown]]\n[[Category:Serverside|unLockdown]]\n{{Lua_function |\n    function_name   = DarkRP.unLockdown |\n    arguments   = {{Type|Player}} ply |\n    description = Stop the lockdown. |\n    deprecated  =  |\n    returns     = {{Type|string}} str |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player who stopped the lockdown.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = str\n| Arg1Type = string\n| Arg1Desc = Empty string (since it's a called in a chat command)\n\n}}",
            "timestamp": "2020-08-26 18:46:17"
        }
    },
    "Functions/DarkRP/Server/writeNetDoorVar": {
        "en": {
            "content": "[[Category:Functions|writeNetDoorVar]]\n[[Category:DarkRP|writeNetDoorVar]]\n[[Category:Serverside|writeNetDoorVar]]\n{{Lua_function |\n    function_name   = DarkRP.writeNetDoorVar |\n    arguments   = {{Type|string}} name, {{Type|any}} value |\n    description = Internal function. You probably shouldn't need this. DarkRP calls this function when sending DoorVar net messages. This function writes the net data for a specific DoorVar. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the DoorVar.\n\n| Arg2Name = value\n| Arg2Type = any\n| Arg2Req  = true\n| Arg2Desc = The value of the DoorVar.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:39:58"
        }
    },
    "Functions/DarkRP/Shared/ValidatedPhysicsInit": {
        "en": {
            "content": "[[Category:Functions|ValidatedPhysicsInit]]\n[[Category:DarkRP|ValidatedPhysicsInit]]\n[[Category:Shared|ValidatedPhysicsInit]]\n{{Lua_function |\n    function_name   = DarkRP.ValidatedPhysicsInit |\n    arguments   = {{Type|entity}} ent, {{Type|number}} kind, {{Type|string}} hint |\n    description = Initialise the physics of an entity, throw a discriptive error when this fails. |\n    deprecated  =  |\n    returns     = {{Type|boolean}} success |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ent\n| Arg1Type = entity\n| Arg1Req  = true\n| Arg1Desc = Entity for which to create the PhysObj.\n\n| Arg2Name = kind\n| Arg2Type = number\n| Arg2Req  = false\n| Arg2Desc = The SOLID_ enum type. By default this is SOLID_VPHYSICS\n\n| Arg3Name = hint\n| Arg3Type = string\n| Arg3Req  = false\n| Arg3Desc = Optional hint for the error message.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = success\n| Arg1Type = boolean\n| Arg1Desc = Whether creating the PhysObj succeeded\n\n}}",
            "timestamp": "2020-08-26 18:39:43"
        }
    },
    "Functions/DarkRP/Shared/addChatCommandsLanguage": {
        "en": {
            "content": "[[Category:Functions|addChatCommandsLanguage]]\n[[Category:DarkRP|addChatCommandsLanguage]]\n[[Category:Shared|addChatCommandsLanguage]]\n{{Lua_function |\n    function_name   = DarkRP.addChatCommandsLanguage |\n    arguments   = {{Type|string}} languageCode, {{Type|table}} translations |\n    description = Add a translation table for chat command descriptions. See darkrpmod/lua/darkrp_language/chatcommands.lua for an example. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = languageCode\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The language code of the language. For English this is \"en\".\n\n| Arg2Name = translations\n| Arg2Type = table\n| Arg2Req  = true\n| Arg2Desc = Key-value table with chat command strings as keys and their translation as value.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:39:48"
        }
    },
    "Functions/DarkRP/Shared/addHitmanTeam": {
        "en": {
            "content": "[[Category:Functions|addHitmanTeam]]\n[[Category:DarkRP|addHitmanTeam]]\n[[Category:Shared|addHitmanTeam]]\n{{Lua_function |\n    function_name   = DarkRP.addHitmanTeam |\n    arguments   = {{Type|number}} team number |\n    description = Make this team a hitman. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = team number\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The number of the team (e.g. TEAM_MOB)\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:47:51"
        }
    },
    "Functions/DarkRP/Shared/addLanguage": {
        "en": {
            "content": "[[Category:Functions|addLanguage]]\n[[Category:DarkRP|addLanguage]]\n[[Category:Shared|addLanguage]]\n{{Lua_function |\n    function_name   = DarkRP.addLanguage |\n    arguments   = {{Type|string}} Language name, {{Type|table}} Language contents |\n    description = Create a language/translation. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = Language name\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The short name of the language (\"en\" is English). Make sure the language name fits a possible value for gmod_language!\n\n| Arg2Name = Language contents\n| Arg2Type = table\n| Arg2Req  = true\n| Arg2Desc = A table that contains the translation sentences. Look at sh_english.lua for an example.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:40:14"
        }
    },
    "Functions/DarkRP/Shared/addPhrase": {
        "en": {
            "content": "[[Category:Functions|addPhrase]]\n[[Category:DarkRP|addPhrase]]\n[[Category:Shared|addPhrase]]\n{{Lua_function |\n    function_name   = DarkRP.addPhrase |\n    arguments   = {{Type|string}} Language name, {{Type|string}} key, {{Type|string}} translation |\n    description = Add a phrase to the existing translation. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = Language name\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The short name of the language (\"en\" is English). Make sure the language name fits a possible value for gmod_language!\n\n| Arg2Name = key\n| Arg2Type = string\n| Arg2Req  = true\n| Arg2Desc = The name of the translated phrase.\n\n| Arg3Name = translation\n| Arg3Type = string\n| Arg3Req  = true\n| Arg3Desc = The translation of the phrase.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:44:51"
        }
    },
    "Functions/DarkRP/Shared/addPlayerGesture": {
        "en": {
            "content": "[[Category:Functions|addPlayerGesture]]\n[[Category:DarkRP|addPlayerGesture]]\n[[Category:Shared|addPlayerGesture]]\n{{Lua_function |\n    function_name   = DarkRP.addPlayerGesture |\n    arguments   = {{Type|number}} anim, {{Type|string}} text |\n    description = Add a player gesture to the DarkRP animations menu (the one that opens with the keys weapon.). Note: This function must be called BOTH serverside AND clientside! |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = anim\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The gesture enumeration.\n\n| Arg2Name = text\n| Arg2Type = string\n| Arg2Req  = true\n| Arg2Desc = The textual description of the animation. This is what players see on the button in the menu.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:41:32"
        }
    },
    "Functions/DarkRP/Shared/addToCategory": {
        "en": {
            "content": "[[Category:Functions|addToCategory]]\n[[Category:DarkRP|addToCategory]]\n[[Category:Shared|addToCategory]]\n{{Lua_function |\n    function_name   = DarkRP.addToCategory |\n    arguments   = {{Type|table}} item, {{Type|string}} kind, {{Type|string}} cat |\n    description = Create a category for the F4 menu. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = item\n| Arg1Type = table\n| Arg1Req  = true\n| Arg1Desc = Table of the custom entity/job/etc.\n\n| Arg2Name = kind\n| Arg2Type = string\n| Arg2Req  = true\n| Arg2Desc = The kind of the category (e.g. 'jobs' for job stuff).\n\n| Arg3Name = cat\n| Arg3Type = string\n| Arg3Req  = false\n| Arg3Desc = The name of the category. Note that the category must exist. Defaults to 'Other'.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:38:08"
        }
    },
    "Functions/DarkRP/Shared/chatCommandAlias": {
        "en": {
            "content": "[[Category:Functions|chatCommandAlias]]\n[[Category:DarkRP|chatCommandAlias]]\n[[Category:Shared|chatCommandAlias]]\n{{Lua_function |\n    function_name   = DarkRP.chatCommandAlias |\n    arguments   = {{Type|string}} command, {{Type|vararg}} alias |\n    description = Create an alias for a chat command |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = command\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = An already existing chat command.\n\n| Arg2Name = alias\n| Arg2Type = vararg\n| Arg2Req  = true\n| Arg2Desc = One or more aliases for the chat command.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:46:50"
        }
    },
    "Functions/DarkRP/Shared/createAgenda": {
        "en": {
            "content": "[[Category:Functions|createAgenda]]\n[[Category:DarkRP|createAgenda]]\n[[Category:Shared|createAgenda]]\n{{Lua_function |\n    function_name   = DarkRP.createAgenda |\n    arguments   = {{Type|string}} title, {{Type|number}} manager, {{Type|table}} listeners |\n    description = Create an agenda for groups of jobs to communicate. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = title\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the agenda.\n\n| Arg2Name = manager\n| Arg2Type = number\n| Arg2Req  = true\n| Arg2Desc = The team numer of the manager of the agenda (the one who can set the agenda).\n\n| Arg3Name = listeners\n| Arg3Type = table\n| Arg3Req  = true\n| Arg3Desc = The jobs that can see this agenda.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:48:56"
        }
    },
    "Functions/DarkRP/Shared/createAmmoType": {
        "en": {
            "content": "[[Category:Functions|createAmmoType]]\n[[Category:DarkRP|createAmmoType]]\n[[Category:Shared|createAmmoType]]\n{{Lua_function |\n    function_name   = DarkRP.createAmmoType |\n    arguments   = {{Type|string}} name, {{Type|table}} tbl |\n    description = Create an ammo type. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the ammo.\n\n| Arg2Name = tbl\n| Arg2Type = table\n| Arg2Req  = true\n| Arg2Desc = Table containing the information for the ammo.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:47:22"
        }
    },
    "Functions/DarkRP/Shared/createCategory": {
        "en": {
            "content": "[[Category:Functions|createCategory]]\n[[Category:DarkRP|createCategory]]\n[[Category:Shared|createCategory]]\n{{Lua_function |\n    function_name   = DarkRP.createCategory |\n    arguments   = {{Type|table}} tbl |\n    description = Create a category for the F4 menu. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = tbl\n| Arg1Type = table\n| Arg1Req  = true\n| Arg1Desc = Table describing the category.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:43:24"
        }
    },
    "Functions/DarkRP/Shared/createDemoteGroup": {
        "en": {
            "content": "[[Category:Functions|createDemoteGroup]]\n[[Category:DarkRP|createDemoteGroup]]\n[[Category:Shared|createDemoteGroup]]\n{{Lua_function |\n    function_name   = DarkRP.createDemoteGroup |\n    arguments   = {{Type|string}} name, {{Type|table}} tbl |\n    description = Create a demote group. When you get banned (demoted) from one of the jobs in this group, you will be banned from every job in this group. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the demote group.\n\n| Arg2Name = tbl\n| Arg2Type = table\n| Arg2Req  = true\n| Arg2Desc = Table consisting of a list of job.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:48:22"
        }
    },
    "Functions/DarkRP/Shared/createEntity": {
        "en": {
            "content": "[[Category:Functions|createEntity]]\n[[Category:DarkRP|createEntity]]\n[[Category:Shared|createEntity]]\n{{Lua_function |\n    function_name   = DarkRP.createEntity |\n    arguments   = {{Type|string}} name, {{Type|table}} tbl |\n    description = Create a entity for DarkRP. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the entity.\n\n| Arg2Name = tbl\n| Arg2Type = table\n| Arg2Req  = true\n| Arg2Desc = Table containing the information for the entity.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:38:41"
        }
    },
    "Functions/DarkRP/Shared/createEntityGroup": {
        "en": {
            "content": "[[Category:Functions|createEntityGroup]]\n[[Category:DarkRP|createEntityGroup]]\n[[Category:Shared|createEntityGroup]]\n{{Lua_function |\n    function_name   = DarkRP.createEntityGroup |\n    arguments   = {{Type|string}} name, {{Type|number}} teamNrs |\n    description = Create a entity group for DarkRP. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the entity group.\n\n| Arg2Name = teamNrs\n| Arg2Type = number\n| Arg2Req  = true\n| Arg2Desc = Vararg team numbers.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:37:18"
        }
    },
    "Functions/DarkRP/Shared/createFood": {
        "en": {
            "content": "[[Category:Functions|createFood]]\n[[Category:DarkRP|createFood]]\n[[Category:Shared|createFood]]\n{{Lua_function |\n    function_name   = DarkRP.createFood |\n    arguments   = {{Type|string}} name, {{Type|table}} tbl |\n    description = Create food for DarkRP. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the food.\n\n| Arg2Name = tbl\n| Arg2Type = table\n| Arg2Req  = true\n| Arg2Desc = Table containing the information for the food.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:43:23"
        }
    },
    "Functions/DarkRP/Shared/createGroupChat": {
        "en": {
            "content": "[[Category:Functions|createGroupChat]]\n[[Category:DarkRP|createGroupChat]]\n[[Category:Shared|createGroupChat]]\n{{Lua_function |\n    function_name   = DarkRP.createGroupChat |\n    arguments   = {{Type|any}} functionOrJob, {{Type|number}} teamNr |\n    description = Create a group chat. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = functionOrJob\n| Arg1Type = any\n| Arg1Req  = true\n| Arg1Desc = A function that returns whether the person can see the group chat, or a team number.\n\n| Arg2Name = teamNr\n| Arg2Type = number\n| Arg2Req  = false\n| Arg2Desc = VarArg team number.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:46:19"
        }
    },
    "Functions/DarkRP/Shared/createJob": {
        "en": {
            "content": "[[Category:Functions|createJob]]\n[[Category:DarkRP|createJob]]\n[[Category:Shared|createJob]]\n{{Lua_function |\n    function_name   = DarkRP.createJob |\n    arguments   = {{Type|string}} name, {{Type|table}} tbl |\n    description = Create a job for DarkRP. |\n    deprecated  =  |\n    returns     = {{Type|number}} team |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the job.\n\n| Arg2Name = tbl\n| Arg2Type = table\n| Arg2Req  = true\n| Arg2Desc = Table containing the information for the job.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = team\n| Arg1Type = number\n| Arg1Desc = The team number of the job you've created.\n\n}}",
            "timestamp": "2020-08-26 18:44:36"
        }
    },
    "Functions/DarkRP/Shared/createShipment": {
        "en": {
            "content": "[[Category:Functions|createShipment]]\n[[Category:DarkRP|createShipment]]\n[[Category:Shared|createShipment]]\n{{Lua_function |\n    function_name   = DarkRP.createShipment |\n    arguments   = {{Type|string}} name, {{Type|table}} tbl |\n    description = Create a shipment for DarkRP. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the shipment.\n\n| Arg2Name = tbl\n| Arg2Type = table\n| Arg2Req  = true\n| Arg2Desc = Table containing the information for the shipment.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:40:49"
        }
    },
    "Functions/DarkRP/Shared/createVehicle": {
        "en": {
            "content": "[[Category:Functions|createVehicle]]\n[[Category:DarkRP|createVehicle]]\n[[Category:Shared|createVehicle]]\n{{Lua_function |\n    function_name   = DarkRP.createVehicle |\n    arguments   = {{Type|string}} name, {{Type|table}} tbl |\n    description = Create a vehicle for DarkRP. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the vehicle.\n\n| Arg2Name = tbl\n| Arg2Type = table\n| Arg2Req  = true\n| Arg2Desc = Table containing the information for the vehicle.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:47:50"
        }
    },
    "Functions/DarkRP/Shared/declareChatCommand": {
        "en": {
            "content": "[[Category:Functions|declareChatCommand]]\n[[Category:DarkRP|declareChatCommand]]\n[[Category:Shared|declareChatCommand]]\n{{Lua_function |\n    function_name   = DarkRP.declareChatCommand |\n    arguments   = {{Type|table}} table |\n    description = Declare a chat command (describe it) |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = table\n| Arg1Type = table\n| Arg1Req  = true\n| Arg1Desc = The description of the chat command. Has to contain a string: command, string: description, number: delay, optional function: condition\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:46:11"
        }
    },
    "Functions/DarkRP/Shared/error": {
        "en": {
            "content": "[[Category:Functions|error]]\n[[Category:DarkRP|error]]\n[[Category:Shared|error]]\n{{Lua_function |\n    function_name   = DarkRP.error |\n    arguments   = {{Type|string}} message, {{Type|number}} stack, {{Type|table}} hints, {{Type|string}} path, {{Type|number}} line |\n    description = Throw a simplerr formatted error. Also halts the stack, which means that statements after calling this function will not execute. |\n    deprecated  =  |\n    returns     = {{Type|boolean}} succeed, {{Type|string}} msg |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = message\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The message of the error.\n\n| Arg2Name = stack\n| Arg2Type = number\n| Arg2Req  = false\n| Arg2Desc = From which point in the function call stack to report the error. 1 to include the function that called DarkRP.error, 2 to exclude it, etc. The default value is 1.\n\n| Arg3Name = hints\n| Arg3Type = table\n| Arg3Req  = false\n| Arg3Desc = Table containing hint strings. Use these hints to explain the error, describe possible causes or provide help to solve the problem.\n\n| Arg4Name = path\n| Arg4Type = string\n| Arg4Req  = false\n| Arg4Desc = Override the path of the error. Will be shown in the error message. By default this is determined by the stack level.\n\n| Arg5Name = line\n| Arg5Type = number\n| Arg5Req  = false\n| Arg5Desc = Override the line number of the error. By default this is determined by the stack level.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = succeed\n| Arg1Type = boolean\n| Arg1Desc = Simplerr return value: whether the calculation succeeded. Always false. This return value will never be reached.\n\n| Arg2Name = msg\n| Arg2Type = string\n| Arg2Desc = Simplerr return value: nicely formatted error message. This return value will never be reached.\n\n}}",
            "timestamp": "2020-08-26 18:43:16"
        }
    },
    "Functions/DarkRP/Shared/errorNoHalt": {
        "en": {
            "content": "[[Category:Functions|errorNoHalt]]\n[[Category:DarkRP|errorNoHalt]]\n[[Category:Shared|errorNoHalt]]\n{{Lua_function |\n    function_name   = DarkRP.errorNoHalt |\n    arguments   = {{Type|string}} message, {{Type|number}} stack, {{Type|table}} hints, {{Type|string}} path, {{Type|number}} line |\n    description = Throw a simplerr formatted error. Unlike DarkRP.error, this does not halt the stack. This means that statements after calling this function will be executed like normal. |\n    deprecated  =  |\n    returns     = {{Type|boolean}} succeed, {{Type|string}} msg |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = message\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The message of the error.\n\n| Arg2Name = stack\n| Arg2Type = number\n| Arg2Req  = false\n| Arg2Desc = From which point in the function call stack to report the error. 1 to include the function that called DarkRP.error, 2 to exclude it, etc. The default value is 1.\n\n| Arg3Name = hints\n| Arg3Type = table\n| Arg3Req  = false\n| Arg3Desc = Table containing hint strings. Use these hints to explain the error, describe possible causes or provide help to solve the problem.\n\n| Arg4Name = path\n| Arg4Type = string\n| Arg4Req  = false\n| Arg4Desc = Override the path of the error. Will be shown in the error message. By default this is determined by the stack level.\n\n| Arg5Name = line\n| Arg5Type = number\n| Arg5Req  = false\n| Arg5Desc = Override the line number of the error. By default this is determined by the stack level.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = succeed\n| Arg1Type = boolean\n| Arg1Desc = Simplerr return value: whether the calculation succeeded. Always false.\n\n| Arg2Name = msg\n| Arg2Type = string\n| Arg2Desc = Simplerr return value: nicely formatted error message.\n\n}}",
            "timestamp": "2020-08-26 18:42:53"
        }
    },
    "Functions/DarkRP/Shared/explodeArg": {
        "en": {
            "content": "[[Category:Functions|explodeArg]]\n[[Category:DarkRP|explodeArg]]\n[[Category:Shared|explodeArg]]\n{{Lua_function |\n    function_name   = DarkRP.explodeArg |\n    arguments   = {{Type|string}} arg |\n    description = String arguments exploded into a table. It accounts for substrings in quotes, which makes it more intelligent than string.Explode |\n    deprecated  =  |\n    returns     = {{Type|table}} args |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = arg\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The full string of the argument\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = args\n| Arg1Type = table\n| Arg1Desc = The table of arguments\n\n}}",
            "timestamp": "2020-08-26 18:48:30"
        }
    },
    "Functions/DarkRP/Shared/findPlayer": {
        "en": {
            "content": "[[Category:Functions|findPlayer]]\n[[Category:DarkRP|findPlayer]]\n[[Category:Shared|findPlayer]]\n{{Lua_function |\n    function_name   = DarkRP.findPlayer |\n    arguments   = {{Type|string}} info |\n    description = Find a single player based on vague information. |\n    deprecated  =  |\n    returns     = {{Type|Player}} found |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = info\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The information of the player (UserID, SteamID, name).\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = found\n| Arg1Type = Player\n| Arg1Desc = The player that matches the description.\n\n}}",
            "timestamp": "2020-08-26 18:37:58"
        }
    },
    "Functions/DarkRP/Shared/findPlayers": {
        "en": {
            "content": "[[Category:Functions|findPlayers]]\n[[Category:DarkRP|findPlayers]]\n[[Category:Shared|findPlayers]]\n{{Lua_function |\n    function_name   = DarkRP.findPlayers |\n    arguments   = {{Type|string}} info |\n    description = Find a list of players based on vague information. |\n    deprecated  =  |\n    returns     = {{Type|table}} found |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = info\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The information of the player (UserID, SteamID, name).\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = found\n| Arg1Type = table\n| Arg1Desc = Table of players that match the description.\n\n}}",
            "timestamp": "2020-08-26 18:37:53"
        }
    },
    "Functions/DarkRP/Shared/formatMoney": {
        "en": {
            "content": "[[Category:Functions|formatMoney]]\n[[Category:DarkRP|formatMoney]]\n[[Category:Shared|formatMoney]]\n{{Lua_function |\n    function_name   = DarkRP.formatMoney |\n    arguments   = {{Type|number}} amount |\n    description = Format a number as a money value. Includes currency symbol. |\n    deprecated  =  |\n    returns     = {{Type|string}} money |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = amount\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The money to format, e.g. 100000.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = money\n| Arg1Type = string\n| Arg1Desc = The money as a nice string, e.g. \"$100,000\".\n\n}}\n\n== Example Code ==\n___________________________________________________________________________________________\n\n for _, ply in ipairs(player.GetAll()) do\n    local money = ply:getDarkRPVar(\"money\")\n    print(DarkRP.formatMoney(money))\n end\n\nResult of Code: $250,583",
            "timestamp": "2021-12-06 15:26:42"
        }
    },
    "Functions/DarkRP/Shared/getAgendas": {
        "en": {
            "content": "[[Category:Functions|getAgendas]]\n[[Category:DarkRP|getAgendas]]\n[[Category:Shared|getAgendas]]\n{{Lua_function |\n    function_name   = DarkRP.getAgendas |\n    arguments   =  |\n    description = Get all agendas. Note: teams that share an agenda use the exact same agenda table. E.g. when you change the agenda of the CP, the agenda of the Chief will automatically be updated as well. Make sure this property is maintained when modifying the agenda table. Not maintaining that property will lead to players not seeing the right agenda text. |\n    deprecated  =  |\n    returns     = {{Type|table}} agendas |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = agendas\n| Arg1Type = table\n| Arg1Desc = Table in which the keys are team numbers and the values agendas.\n\n}}",
            "timestamp": "2020-08-26 18:40:22"
        }
    },
    "Functions/DarkRP/Shared/getAvailableVehicles": {
        "en": {
            "content": "[[Category:Functions|getAvailableVehicles]]\n[[Category:DarkRP|getAvailableVehicles]]\n[[Category:Shared|getAvailableVehicles]]\n{{Lua_function |\n    function_name   = DarkRP.getAvailableVehicles |\n    arguments   =  |\n    description = Get the available vehicles that DarkRP supports. |\n    deprecated  =  |\n    returns     = {{Type|table}} vehicles |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = vehicles\n| Arg1Type = table\n| Arg1Desc = Names, models and classnames of all supported vehicles.\n\n}}",
            "timestamp": "2020-08-26 18:39:10"
        }
    },
    "Functions/DarkRP/Shared/getCategories": {
        "en": {
            "content": "[[Category:Functions|getCategories]]\n[[Category:DarkRP|getCategories]]\n[[Category:Shared|getCategories]]\n{{Lua_function |\n    function_name   = DarkRP.getCategories |\n    arguments   =  |\n    description = Get all categories for all F4 menu tabs. |\n    deprecated  =  |\n    returns     = {{Type|table}} tbl |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = tbl\n| Arg1Type = table\n| Arg1Desc = all categories.\n\n}}",
            "timestamp": "2020-08-26 18:46:38"
        }
    },
    "Functions/DarkRP/Shared/getChatCommand": {
        "en": {
            "content": "[[Category:Functions|getChatCommand]]\n[[Category:DarkRP|getChatCommand]]\n[[Category:Shared|getChatCommand]]\n{{Lua_function |\n    function_name   = DarkRP.getChatCommand |\n    arguments   = {{Type|string}} command |\n    description = Get the information on a chat command. |\n    deprecated  =  |\n    returns     = {{Type|table}} chatTable |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = command\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The chat command\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = chatTable\n| Arg1Type = table\n| Arg1Desc = A table containing the information of the chat command.\n\n}}",
            "timestamp": "2020-08-26 18:47:45"
        }
    },
    "Functions/DarkRP/Shared/getChatCommandDescription": {
        "en": {
            "content": "[[Category:Functions|getChatCommandDescription]]\n[[Category:DarkRP|getChatCommandDescription]]\n[[Category:Shared|getChatCommandDescription]]\n{{Lua_function |\n    function_name   = DarkRP.getChatCommandDescription |\n    arguments   = {{Type|string}} command |\n    description = Get the translated description of a chat command. |\n    deprecated  =  |\n    returns     = {{Type|string}} description |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = command\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The chat command string.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = description\n| Arg1Type = string\n| Arg1Desc = The translated chat command description.\n\n}}",
            "timestamp": "2020-08-26 18:44:09"
        }
    },
    "Functions/DarkRP/Shared/getChatCommands": {
        "en": {
            "content": "[[Category:Functions|getChatCommands]]\n[[Category:DarkRP|getChatCommands]]\n[[Category:Shared|getChatCommands]]\n{{Lua_function |\n    function_name   = DarkRP.getChatCommands |\n    arguments   =  |\n    description = Get every chat command. |\n    deprecated  =  |\n    returns     = {{Type|table}} commands |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = commands\n| Arg1Type = table\n| Arg1Desc = A table containing every command. Table indices are the command strings.\n\n}}",
            "timestamp": "2020-08-26 18:42:33"
        }
    },
    "Functions/DarkRP/Shared/getDemoteGroup": {
        "en": {
            "content": "[[Category:Functions|getDemoteGroup]]\n[[Category:DarkRP|getDemoteGroup]]\n[[Category:Shared|getDemoteGroup]]\n{{Lua_function |\n    function_name   = DarkRP.getDemoteGroup |\n    arguments   = {{Type|number}} teamNr |\n    description = Get the demote group of a team. Every team in the same group will return the same object. |\n    deprecated  =  |\n    returns     = {{Type|Disjoint-Set}} set |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = teamNr\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = Table consisting of a list of job.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = set\n| Arg1Type = Disjoint-Set\n| Arg1Desc = The demote group identifier.\n\n}}",
            "timestamp": "2020-08-26 18:41:26"
        }
    },
    "Functions/DarkRP/Shared/getDemoteGroups": {
        "en": {
            "content": "[[Category:Functions|getDemoteGroups]]\n[[Category:DarkRP|getDemoteGroups]]\n[[Category:Shared|getDemoteGroups]]\n{{Lua_function |\n    function_name   = DarkRP.getDemoteGroups |\n    arguments   =  |\n    description = Get all demote groups Every team in the same group will return the same object. |\n    deprecated  =  |\n    returns     = {{Type|table}} set |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = set\n| Arg1Type = table\n| Arg1Desc = Table in which the keys are team numbers and the values Disjoint-Set.\n\n}}",
            "timestamp": "2020-08-26 18:42:42"
        }
    },
    "Functions/DarkRP/Shared/getDoorVars": {
        "en": {
            "content": "[[Category:Functions|getDoorVars]]\n[[Category:DarkRP|getDoorVars]]\n[[Category:Shared|getDoorVars]]\n{{Lua_function |\n    function_name   = DarkRP.getDoorVars |\n    arguments   =  |\n    description = Internal function, retrieves all the registered door variables. |\n    deprecated  =  |\n    returns     = {{Type|table}} doorvars |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = doorvars\n| Arg1Type = table\n| Arg1Desc = The door variables, indexed by number\n\n}}",
            "timestamp": "2020-08-26 18:38:52"
        }
    },
    "Functions/DarkRP/Shared/getDoorVarsByName": {
        "en": {
            "content": "[[Category:Functions|getDoorVarsByName]]\n[[Category:DarkRP|getDoorVarsByName]]\n[[Category:Shared|getDoorVarsByName]]\n{{Lua_function |\n    function_name   = DarkRP.getDoorVarsByName |\n    arguments   =  |\n    description = Internal function, retrieves all the registered door variables, indeded by their names. |\n    deprecated  =  |\n    returns     = {{Type|table}} doorvars |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = doorvars\n| Arg1Type = table\n| Arg1Desc = The door variables, indexed by name\n\n}}",
            "timestamp": "2020-08-26 18:40:12"
        }
    },
    "Functions/DarkRP/Shared/getFoodItems": {
        "en": {
            "content": "[[Category:Functions|getFoodItems]]\n[[Category:DarkRP|getFoodItems]]\n[[Category:Shared|getFoodItems]]\n{{Lua_function |\n    function_name   = DarkRP.getFoodItems |\n    arguments   =  |\n    description = Get all food items. |\n    deprecated  =  |\n    returns     = {{Type|table}} set |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = set\n| Arg1Type = table\n| Arg1Desc = Table with food items.\n\n}}",
            "timestamp": "2020-08-26 18:43:54"
        }
    },
    "Functions/DarkRP/Shared/getGroupChats": {
        "en": {
            "content": "[[Category:Functions|getGroupChats]]\n[[Category:DarkRP|getGroupChats]]\n[[Category:Shared|getGroupChats]]\n{{Lua_function |\n    function_name   = DarkRP.getGroupChats |\n    arguments   =  |\n    description = Get all group chats. |\n    deprecated  =  |\n    returns     = {{Type|table}} set |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = set\n| Arg1Type = table\n| Arg1Desc = Table with functions that decide who can hear who.\n\n}}",
            "timestamp": "2020-08-26 18:38:44"
        }
    },
    "Functions/DarkRP/Shared/getHitmanTeams": {
        "en": {
            "content": "[[Category:Functions|getHitmanTeams]]\n[[Category:DarkRP|getHitmanTeams]]\n[[Category:Shared|getHitmanTeams]]\n{{Lua_function |\n    function_name   = DarkRP.getHitmanTeams |\n    arguments   =  |\n    description = Get all the hitman teams. |\n    deprecated  =  |\n    returns     = {{Type|table}} tbl |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = tbl\n| Arg1Type = table\n| Arg1Desc = A table in which the keys are TEAM_ numbers and the values are just true.\n\n}}",
            "timestamp": "2020-08-26 18:44:24"
        }
    },
    "Functions/DarkRP/Shared/getIncompleteChatCommands": {
        "en": {
            "content": "[[Category:Functions|getIncompleteChatCommands]]\n[[Category:DarkRP|getIncompleteChatCommands]]\n[[Category:Shared|getIncompleteChatCommands]]\n{{Lua_function |\n    function_name   = DarkRP.getIncompleteChatCommands |\n    arguments   =  |\n    description = chat commands that have been defined, but not declared. Information about these chat commands is missing. |\n    deprecated  =  |\n    returns     = {{Type|table}} commands |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = commands\n| Arg1Type = table\n| Arg1Desc = A table containing the undeclared chat commands.\n\n}}",
            "timestamp": "2020-08-26 18:42:04"
        }
    },
    "Functions/DarkRP/Shared/getJobByCommand": {
        "en": {
            "content": "[[Category:Functions|getJobByCommand]]\n[[Category:DarkRP|getJobByCommand]]\n[[Category:Shared|getJobByCommand]]\n{{Lua_function |\n    function_name   = DarkRP.getJobByCommand |\n    arguments   = {{Type|string}} command |\n    description = Get the job table and number from the command of the job. |\n    deprecated  =  |\n    returns     = {{Type|table}} tbl, {{Type|number}} jobindex |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = command\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The command of the job, without preceding slash (e.g. 'medic' for medic)\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = tbl\n| Arg1Type = table\n| Arg1Desc = A table containing all information about the job.\n\n| Arg2Name = jobindex\n| Arg2Type = number\n| Arg2Desc = The index of the job (for 'medic' it's the value of TEAM_MEDIC).\n\n}}",
            "timestamp": "2020-08-26 18:39:26"
        }
    },
    "Functions/DarkRP/Shared/getLaws": {
        "en": {
            "content": "[[Category:Functions|getLaws]]\n[[Category:DarkRP|getLaws]]\n[[Category:Shared|getLaws]]\n{{Lua_function |\n    function_name   = DarkRP.getLaws |\n    arguments   =  |\n    description = Get the table of all current laws. |\n    deprecated  =  |\n    returns     = {{Type|table}} laws |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = laws\n| Arg1Type = table\n| Arg1Desc = A table of all current laws.\n\n}}",
            "timestamp": "2020-08-26 18:43:52"
        }
    },
    "Functions/DarkRP/Shared/getMissingPhrases": {
        "en": {
            "content": "[[Category:Functions|getMissingPhrases]]\n[[Category:DarkRP|getMissingPhrases]]\n[[Category:Shared|getMissingPhrases]]\n{{Lua_function |\n    function_name   = DarkRP.getMissingPhrases |\n    arguments   = {{Type|string}} languageCode |\n    description = Get all the phrases a language is missing. |\n    deprecated  =  |\n    returns     = {{Type|string}} missingPhrases |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = languageCode\n| Arg1Type = string\n| Arg1Req  = false\n| Arg1Desc = The language code of the language. For English this is \"en\".\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = missingPhrases\n| Arg1Type = string\n| Arg1Desc = All the missing phrases formatted in such way that you can copy and paste it in your language file.\n\n}}",
            "timestamp": "2020-08-26 18:45:03"
        }
    },
    "Functions/DarkRP/Shared/getPhrase": {
        "en": {
            "content": "[[Category:Functions|getPhrase]]\n[[Category:DarkRP|getPhrase]]\n[[Category:Shared|getPhrase]]\n{{Lua_function |\n    function_name   = DarkRP.getPhrase |\n    arguments   = {{Type|string}} key, {{Type|vararg}} Phrase parameters |\n    description = Get a phrase from the selected language. |\n    deprecated  =  |\n    returns     = {{Type|string}} phrase |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = key\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the translated phrase.\n\n| Arg2Name = Phrase parameters\n| Arg2Type = vararg\n| Arg2Req  = true\n| Arg2Desc = Some phrases need extra information, like in \"PLAYERNAME just won the lottery!\". Not filling in the phrase parameters will cause errors.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = phrase\n| Arg1Type = string\n| Arg1Desc = The formatted phrase.\n\n}}",
            "timestamp": "2020-08-26 18:44:55"
        }
    },
    "Functions/DarkRP/Shared/getSortedChatCommands": {
        "en": {
            "content": "[[Category:Functions|getSortedChatCommands]]\n[[Category:DarkRP|getSortedChatCommands]]\n[[Category:Shared|getSortedChatCommands]]\n{{Lua_function |\n    function_name   = DarkRP.getSortedChatCommands |\n    arguments   =  |\n    description = Get every chat command, sorted by their name. |\n    deprecated  =  |\n    returns     = {{Type|table}} commands |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = commands\n| Arg1Type = table\n| Arg1Desc = A table containing every command.\n\n}}",
            "timestamp": "2020-08-26 18:39:50"
        }
    },
    "Functions/DarkRP/Shared/nickSortedPlayers": {
        "en": {
            "content": "[[Category:Functions|nickSortedPlayers]]\n[[Category:DarkRP|nickSortedPlayers]]\n[[Category:Shared|nickSortedPlayers]]\n{{Lua_function |\n    function_name   = DarkRP.nickSortedPlayers |\n    arguments   =  |\n    description = A table of players sorted by RP name. |\n    deprecated  =  |\n    returns     = {{Type|table}} players |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = players\n| Arg1Type = table\n| Arg1Desc = The list of players sorted by RP name.\n\n}}",
            "timestamp": "2020-08-26 18:43:57"
        }
    },
    "Functions/DarkRP/Shared/readNetDarkRPVar": {
        "en": {
            "content": "[[Category:Functions|readNetDarkRPVar]]\n[[Category:DarkRP|readNetDarkRPVar]]\n[[Category:Shared|readNetDarkRPVar]]\n{{Lua_function |\n    function_name   = DarkRP.readNetDarkRPVar |\n    arguments   =  |\n    description = Internal function. You probably shouldn't need this. DarkRP calls this function when reading DarkRPVar net messages. This function reads the net data for a specific DarkRPVar. |\n    deprecated  =  |\n    returns     = {{Type|string}} name, {{Type|any}} value |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Desc = The name of the DarkRPVar.\n\n| Arg2Name = value\n| Arg2Type = any\n| Arg2Desc = The value of the DarkRPVar.\n\n}}",
            "timestamp": "2020-08-26 18:45:49"
        }
    },
    "Functions/DarkRP/Shared/readNetDarkRPVarRemoval": {
        "en": {
            "content": "[[Category:Functions|readNetDarkRPVarRemoval]]\n[[Category:DarkRP|readNetDarkRPVarRemoval]]\n[[Category:Shared|readNetDarkRPVarRemoval]]\n{{Lua_function |\n    function_name   = DarkRP.readNetDarkRPVarRemoval |\n    arguments   =  |\n    description = Internal function. You probably shouldn't need this. DarkRP calls this function when reading DarkRPVar net messages. This function the removal of a DarkRPVar. |\n    deprecated  =  |\n    returns     = {{Type|string}} name |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Desc = The name of the DarkRPVar.\n\n}}",
            "timestamp": "2020-08-26 18:39:41"
        }
    },
    "Functions/DarkRP/Shared/registerDarkRPVar": {
        "en": {
            "content": "[[Category:Functions|registerDarkRPVar]]\n[[Category:DarkRP|registerDarkRPVar]]\n[[Category:Shared|registerDarkRPVar]]\n{{Lua_function |\n    function_name   = DarkRP.registerDarkRPVar |\n    arguments   = {{Type|string}} name, {{Type|function}} writeFn, {{Type|function}} readFn |\n    description = Register a DarkRPVar by name. You should definitely register DarkRPVars. Registering DarkRPVars will make networking much more efficient. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the DarkRPVar.\n\n| Arg2Name = writeFn\n| Arg2Type = function\n| Arg2Req  = true\n| Arg2Desc = The function that writes a value for this DarkRPVar. Examples: net.WriteString, function(val) net.WriteUInt(val, 8) end.\n\n| Arg3Name = readFn\n| Arg3Type = function\n| Arg3Req  = true\n| Arg3Desc = The function that reads and returns a value for this DarkRPVar. Examples: net.ReadString, function() return net.ReadUInt(8) end.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:47:15"
        }
    },
    "Functions/DarkRP/Shared/registerDoorVar": {
        "en": {
            "content": "[[Category:Functions|registerDoorVar]]\n[[Category:DarkRP|registerDoorVar]]\n[[Category:Shared|registerDoorVar]]\n{{Lua_function |\n    function_name   = DarkRP.registerDoorVar |\n    arguments   = {{Type|string}} name, {{Type|function}} writeFn, {{Type|function}} readFn |\n    description = Register a door variable by name. You should definitely register door variables. Registering DarkRPVars will make networking much more efficient. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the door var.\n\n| Arg2Name = writeFn\n| Arg2Type = function\n| Arg2Req  = true\n| Arg2Desc = The function that writes a value for this door var. Examples: net.WriteString, function(val) net.WriteUInt(val, 8) end.\n\n| Arg3Name = readFn\n| Arg3Type = function\n| Arg3Req  = true\n| Arg3Desc = The function that reads and returns a value for this door var. Examples: net.ReadString, function() return net.ReadUInt(8) end.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:48:43"
        }
    },
    "Functions/DarkRP/Shared/removeAgenda": {
        "en": {
            "content": "[[Category:Functions|removeAgenda]]\n[[Category:DarkRP|removeAgenda]]\n[[Category:Shared|removeAgenda]]\n{{Lua_function |\n    function_name   = DarkRP.removeAgenda |\n    arguments   = {{Type|string}} name |\n    description = Remove a agenda from DarkRP. NOTE: Must be called from BOTH server AND client to properly get it removed! |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the item.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:42:40"
        }
    },
    "Functions/DarkRP/Shared/removeAmmoType": {
        "en": {
            "content": "[[Category:Functions|removeAmmoType]]\n[[Category:DarkRP|removeAmmoType]]\n[[Category:Shared|removeAmmoType]]\n{{Lua_function |\n    function_name   = DarkRP.removeAmmoType |\n    arguments   = {{Type|number}} i |\n    description = Remove an ammotype from DarkRP. NOTE: Must be called from BOTH server AND client to properly get it removed! |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = i\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The index of the item.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:39:15"
        }
    },
    "Functions/DarkRP/Shared/removeChatCommand": {
        "en": {
            "content": "[[Category:Functions|removeChatCommand]]\n[[Category:DarkRP|removeChatCommand]]\n[[Category:Shared|removeChatCommand]]\n{{Lua_function |\n    function_name   = DarkRP.removeChatCommand |\n    arguments   = {{Type|string}} command |\n    description = Remove a chat command |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = command\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The chat command to remove\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:47:24"
        }
    },
    "Functions/DarkRP/Shared/removeDemoteGroup": {
        "en": {
            "content": "[[Category:Functions|removeDemoteGroup]]\n[[Category:DarkRP|removeDemoteGroup]]\n[[Category:Shared|removeDemoteGroup]]\n{{Lua_function |\n    function_name   = DarkRP.removeDemoteGroup |\n    arguments   = {{Type|string}} name |\n    description = Remove an demotegroup from DarkRP. NOTE: Must be called from BOTH server AND client to properly get it removed! |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the item.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:45:58"
        }
    },
    "Functions/DarkRP/Shared/removeEntity": {
        "en": {
            "content": "[[Category:Functions|removeEntity]]\n[[Category:DarkRP|removeEntity]]\n[[Category:Shared|removeEntity]]\n{{Lua_function |\n    function_name   = DarkRP.removeEntity |\n    arguments   = {{Type|number}} i |\n    description = Remove an entity from DarkRP. NOTE: Must be called from BOTH server AND client to properly get it removed! |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = i\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The index of the item.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:45:16"
        }
    },
    "Functions/DarkRP/Shared/removeEntityGroup": {
        "en": {
            "content": "[[Category:Functions|removeEntityGroup]]\n[[Category:DarkRP|removeEntityGroup]]\n[[Category:Shared|removeEntityGroup]]\n{{Lua_function |\n    function_name   = DarkRP.removeEntityGroup |\n    arguments   = {{Type|string}} name |\n    description = Remove an entitygroup from DarkRP. NOTE: Must be called from BOTH server AND client to properly get it removed! |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the item.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:43:36"
        }
    },
    "Functions/DarkRP/Shared/removeFoodItem": {
        "en": {
            "content": "[[Category:Functions|removeFoodItem]]\n[[Category:DarkRP|removeFoodItem]]\n[[Category:Shared|removeFoodItem]]\n{{Lua_function |\n    function_name   = DarkRP.removeFoodItem |\n    arguments   = {{Type|number}} i |\n    description = Remove a food item from DarkRP. NOTE: Must be called from BOTH server AND client to properly get it removed! |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = i\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The index of the item.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:40:36"
        }
    },
    "Functions/DarkRP/Shared/removeFromCategory": {
        "en": {
            "content": "[[Category:Functions|removeFromCategory]]\n[[Category:DarkRP|removeFromCategory]]\n[[Category:Shared|removeFromCategory]]\n{{Lua_function |\n    function_name   = DarkRP.removeFromCategory |\n    arguments   = {{Type|table}} item, {{Type|string}} kind |\n    description = Create a category for the F4 menu. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = item\n| Arg1Type = table\n| Arg1Req  = true\n| Arg1Desc = Table of the custom entity/job/etc.\n\n| Arg2Name = kind\n| Arg2Type = string\n| Arg2Req  = true\n| Arg2Desc = The kind of the category (e.g. 'jobs' for job stuff).\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:40:16"
        }
    },
    "Functions/DarkRP/Shared/removeGroupChat": {
        "en": {
            "content": "[[Category:Functions|removeGroupChat]]\n[[Category:DarkRP|removeGroupChat]]\n[[Category:Shared|removeGroupChat]]\n{{Lua_function |\n    function_name   = DarkRP.removeGroupChat |\n    arguments   = {{Type|number}} i |\n    description = Remove a groupchat from DarkRP. NOTE: Must be called from BOTH server AND client to properly get it removed! |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = i\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The index of the item.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:46:28"
        }
    },
    "Functions/DarkRP/Shared/removeJob": {
        "en": {
            "content": "[[Category:Functions|removeJob]]\n[[Category:DarkRP|removeJob]]\n[[Category:Shared|removeJob]]\n{{Lua_function |\n    function_name   = DarkRP.removeJob |\n    arguments   = {{Type|number}} i |\n    description = Remove a job from DarkRP. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = i\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The TEAM_ number of the job. Also the index of the job in RPExtraTeams.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:48:59"
        }
    },
    "Functions/DarkRP/Shared/removePlayerGesture": {
        "en": {
            "content": "[[Category:Functions|removePlayerGesture]]\n[[Category:DarkRP|removePlayerGesture]]\n[[Category:Shared|removePlayerGesture]]\n{{Lua_function |\n    function_name   = DarkRP.removePlayerGesture |\n    arguments   = {{Type|number}} anim |\n    description = Removes a player gesture from the DarkRP animations menu (the one that opens with the keys weapon.). Note: This function must be called BOTH serverside AND clientside! |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = anim\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The gesture enumeration.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:46:12"
        }
    },
    "Functions/DarkRP/Shared/removeShipment": {
        "en": {
            "content": "[[Category:Functions|removeShipment]]\n[[Category:DarkRP|removeShipment]]\n[[Category:Shared|removeShipment]]\n{{Lua_function |\n    function_name   = DarkRP.removeShipment |\n    arguments   = {{Type|number}} i |\n    description = Remove a shipment from DarkRP. NOTE: Must be called from BOTH server AND client to properly get it removed! |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = i\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The index of the item.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:48:02"
        }
    },
    "Functions/DarkRP/Shared/removeVehicle": {
        "en": {
            "content": "[[Category:Functions|removeVehicle]]\n[[Category:DarkRP|removeVehicle]]\n[[Category:Shared|removeVehicle]]\n{{Lua_function |\n    function_name   = DarkRP.removeVehicle |\n    arguments   = {{Type|number}} i |\n    description = Remove a vehicle from DarkRP. NOTE: Must be called from BOTH server AND client to properly get it removed! |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = i\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The index of the item.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:37:13"
        }
    },
    "Functions/DarkRP/Shared/simplerrRun": {
        "en": {
            "content": "[[Category:Functions|simplerrRun]]\n[[Category:DarkRP|simplerrRun]]\n[[Category:Shared|simplerrRun]]\n{{Lua_function |\n    function_name   = DarkRP.simplerrRun |\n    arguments   = {{Type|function}} f, {{Type|vararg}} args |\n    description = Run a function with the given parameters and send any runtime errors to admins. |\n    deprecated  =  |\n    returns     = {{Type|vararg}} retVals |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = f\n| Arg1Type = function\n| Arg1Req  = true\n| Arg1Desc = The function to be called.\n\n| Arg2Name = args\n| Arg2Type = vararg\n| Arg2Req  = false\n| Arg2Desc = The arguments to be given to f.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = retVals\n| Arg1Type = vararg\n| Arg1Desc = The return values of f.\n\n}}",
            "timestamp": "2020-08-26 18:47:27"
        }
    },
    "Functions/DarkRP/Shared/writeNetDarkRPVar": {
        "en": {
            "content": "[[Category:Functions|writeNetDarkRPVar]]\n[[Category:DarkRP|writeNetDarkRPVar]]\n[[Category:Shared|writeNetDarkRPVar]]\n{{Lua_function |\n    function_name   = DarkRP.writeNetDarkRPVar |\n    arguments   = {{Type|string}} name, {{Type|any}} value |\n    description = Internal function. You probably shouldn't need this. DarkRP calls this function when sending DarkRPVar net messages. This function writes the net data for a specific DarkRPVar. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the DarkRPVar.\n\n| Arg2Name = value\n| Arg2Type = any\n| Arg2Req  = true\n| Arg2Desc = The value of the DarkRPVar.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:46:54"
        }
    },
    "Functions/DarkRP/Shared/writeNetDarkRPVarRemoval": {
        "en": {
            "content": "[[Category:Functions|writeNetDarkRPVarRemoval]]\n[[Category:DarkRP|writeNetDarkRPVarRemoval]]\n[[Category:Shared|writeNetDarkRPVarRemoval]]\n{{Lua_function |\n    function_name   = DarkRP.writeNetDarkRPVarRemoval |\n    arguments   = {{Type|string}} name |\n    description = Internal function. You probably shouldn't need this. DarkRP calls this function when sending DarkRPVar net messages. This function sets a DarkRPVar to nil. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|DarkRP}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the DarkRPVar.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:48:49"
        }
    },
    "Functions/Entity/Client/drawOwnableInfo": {
        "en": {
            "content": "[[Category:Functions|drawOwnableInfo]]\n[[Category:Entity|drawOwnableInfo]]\n[[Category:Clientside|drawOwnableInfo]]\n{{Lua_function |\n    function_name   = Entity:drawOwnableInfo |\n    arguments   =  |\n    description = Draw the ownability information on a door or vehicle. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:42:08"
        }
    },
    "Functions/Entity/Server/addKeysAllowedToOwn": {
        "en": {
            "content": "[[Category:Functions|addKeysAllowedToOwn]]\n[[Category:Entity|addKeysAllowedToOwn]]\n[[Category:Serverside|addKeysAllowedToOwn]]\n{{Lua_function |\n    function_name   = Entity:addKeysAllowedToOwn |\n    arguments   = {{Type|Player}} ply |\n    description = Make this player allowed to co-own the door or vehicle. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player to give permission to co-own.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:43:03"
        }
    },
    "Functions/Entity/Server/addKeysDoorOwner": {
        "en": {
            "content": "[[Category:Functions|addKeysDoorOwner]]\n[[Category:Entity|addKeysDoorOwner]]\n[[Category:Serverside|addKeysDoorOwner]]\n{{Lua_function |\n    function_name   = Entity:addKeysDoorOwner |\n    arguments   = {{Type|Player}} ply |\n    description = Make this player a co-owner of the door. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player to add as co-owner.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:47:30"
        }
    },
    "Functions/Entity/Server/addKeysDoorTeam": {
        "en": {
            "content": "[[Category:Functions|addKeysDoorTeam]]\n[[Category:Entity|addKeysDoorTeam]]\n[[Category:Serverside|addKeysDoorTeam]]\n{{Lua_function |\n    function_name   = Entity:addKeysDoorTeam |\n    arguments   = {{Type|number}} team |\n    description = Allow a team to lock/unlock a door.. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = team\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The team to add to team owners.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:38:39"
        }
    },
    "Functions/Entity/Server/doorIndex": {
        "en": {
            "content": "[[Category:Functions|doorIndex]]\n[[Category:Entity|doorIndex]]\n[[Category:Serverside|doorIndex]]\n{{Lua_function |\n    function_name   = Entity:doorIndex |\n    arguments   =  |\n    description = Get the door index of a door. Use this to store door information in the database. |\n    deprecated  =  |\n    returns     = {{Type|number}} index |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = index\n| Arg1Type = number\n| Arg1Desc = The door index.\n\n}}",
            "timestamp": "2020-08-26 18:39:01"
        }
    },
    "Functions/Entity/Server/isLocked": {
        "en": {
            "content": "[[Category:Functions|isLocked]]\n[[Category:Entity|isLocked]]\n[[Category:Serverside|isLocked]]\n{{Lua_function |\n    function_name   = Entity:isLocked |\n    arguments   =  |\n    description = Whether this door/vehicle is locked. |\n    deprecated  =  |\n    returns     = {{Type|boolean}} answer |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = answer\n| Arg1Type = boolean\n| Arg1Desc = Whether it's locked.\n\n}}",
            "timestamp": "2020-08-26 18:38:05"
        }
    },
    "Functions/Entity/Server/keysLock": {
        "en": {
            "content": "[[Category:Functions|keysLock]]\n[[Category:Entity|keysLock]]\n[[Category:Serverside|keysLock]]\n{{Lua_function |\n    function_name   = Entity:keysLock |\n    arguments   =  |\n    description = Lock this door or vehicle. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:45:07"
        }
    },
    "Functions/Entity/Server/keysOwn": {
        "en": {
            "content": "[[Category:Functions|keysOwn]]\n[[Category:Entity|keysOwn]]\n[[Category:Serverside|keysOwn]]\n{{Lua_function |\n    function_name   = Entity:keysOwn |\n    arguments   = {{Type|Player}} ply |\n    description = Make the player the master owner of the door |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player set as master owner.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:47:10"
        }
    },
    "Functions/Entity/Server/keysUnLock": {
        "en": {
            "content": "[[Category:Functions|keysUnLock]]\n[[Category:Entity|keysUnLock]]\n[[Category:Serverside|keysUnLock]]\n{{Lua_function |\n    function_name   = Entity:keysUnLock |\n    arguments   =  |\n    description = Unlock this door or vehicle. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:41:13"
        }
    },
    "Functions/Entity/Server/keysUnOwn": {
        "en": {
            "content": "[[Category:Functions|keysUnOwn]]\n[[Category:Entity|keysUnOwn]]\n[[Category:Serverside|keysUnOwn]]\n{{Lua_function |\n    function_name   = Entity:keysUnOwn |\n    arguments   = {{Type|Player}} ply |\n    description = Make this player unown the door/vehicle. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:43:11"
        }
    },
    "Functions/Entity/Server/removeAllKeysAllowedToOwn": {
        "en": {
            "content": "[[Category:Functions|removeAllKeysAllowedToOwn]]\n[[Category:Entity|removeAllKeysAllowedToOwn]]\n[[Category:Serverside|removeAllKeysAllowedToOwn]]\n{{Lua_function |\n    function_name   = Entity:removeAllKeysAllowedToOwn |\n    arguments   =  |\n    description = Disallow all people from owning the door. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:40:04"
        }
    },
    "Functions/Entity/Server/removeAllKeysDoorTeams": {
        "en": {
            "content": "[[Category:Functions|removeAllKeysDoorTeams]]\n[[Category:Entity|removeAllKeysDoorTeams]]\n[[Category:Serverside|removeAllKeysDoorTeams]]\n{{Lua_function |\n    function_name   = Entity:removeAllKeysDoorTeams |\n    arguments   =  |\n    description = Disallow all teams from locking/unlocking a door. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:41:27"
        }
    },
    "Functions/Entity/Server/removeAllKeysExtraOwners": {
        "en": {
            "content": "[[Category:Functions|removeAllKeysExtraOwners]]\n[[Category:Entity|removeAllKeysExtraOwners]]\n[[Category:Serverside|removeAllKeysExtraOwners]]\n{{Lua_function |\n    function_name   = Entity:removeAllKeysExtraOwners |\n    arguments   =  |\n    description = Remove all co-owners from a door. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:38:54"
        }
    },
    "Functions/Entity/Server/removeKeysAllowedToOwn": {
        "en": {
            "content": "[[Category:Functions|removeKeysAllowedToOwn]]\n[[Category:Entity|removeKeysAllowedToOwn]]\n[[Category:Serverside|removeKeysAllowedToOwn]]\n{{Lua_function |\n    function_name   = Entity:removeKeysAllowedToOwn |\n    arguments   = {{Type|Player}} ply |\n    description = Remove a player from being allowed to co-own a door. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player to be removed.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:45:42"
        }
    },
    "Functions/Entity/Server/removeKeysDoorOwner": {
        "en": {
            "content": "[[Category:Functions|removeKeysDoorOwner]]\n[[Category:Entity|removeKeysDoorOwner]]\n[[Category:Serverside|removeKeysDoorOwner]]\n{{Lua_function |\n    function_name   = Entity:removeKeysDoorOwner |\n    arguments   = {{Type|Player}} ply |\n    description = Remove this player as co-owner |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player to remove from the co-owners list.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:44:42"
        }
    },
    "Functions/Entity/Server/removeKeysDoorTeam": {
        "en": {
            "content": "[[Category:Functions|removeKeysDoorTeam]]\n[[Category:Entity|removeKeysDoorTeam]]\n[[Category:Serverside|removeKeysDoorTeam]]\n{{Lua_function |\n    function_name   = Entity:removeKeysDoorTeam |\n    arguments   = {{Type|number}} team |\n    description = Disallow a team from locking/unlocking a door. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = team\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The team to remove from team owners.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:48:46"
        }
    },
    "Functions/Entity/Server/setDoorGroup": {
        "en": {
            "content": "[[Category:Functions|setDoorGroup]]\n[[Category:Entity|setDoorGroup]]\n[[Category:Serverside|setDoorGroup]]\n{{Lua_function |\n    function_name   = Entity:setDoorGroup |\n    arguments   = {{Type|string}} group |\n    description = Set the door group of a door. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = group\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The door group.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:39:17"
        }
    },
    "Functions/Entity/Server/setKeysNonOwnable": {
        "en": {
            "content": "[[Category:Functions|setKeysNonOwnable]]\n[[Category:Entity|setKeysNonOwnable]]\n[[Category:Serverside|setKeysNonOwnable]]\n{{Lua_function |\n    function_name   = Entity:setKeysNonOwnable |\n    arguments   = {{Type|boolean}} ownable |\n    description = Set whether this door or vehicle is ownable or not. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ownable\n| Arg1Type = boolean\n| Arg1Req  = true\n| Arg1Desc = Whether the door or vehicle is blocked from ownership.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:40:47"
        }
    },
    "Functions/Entity/Server/setKeysTitle": {
        "en": {
            "content": "[[Category:Functions|setKeysTitle]]\n[[Category:Entity|setKeysTitle]]\n[[Category:Serverside|setKeysTitle]]\n{{Lua_function |\n    function_name   = Entity:setKeysTitle |\n    arguments   = {{Type|string}} title |\n    description = Set the title of a door or vehicle. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = title\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The title of the door.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:38:19"
        }
    },
    "Functions/Entity/Shared/getDoorData": {
        "en": {
            "content": "[[Category:Functions|getDoorData]]\n[[Category:Entity|getDoorData]]\n[[Category:Shared|getDoorData]]\n{{Lua_function |\n    function_name   = Entity:getDoorData |\n    arguments   =  |\n    description = Internal function to get the door/vehicle data. |\n    deprecated  =  |\n    returns     = {{Type|table}} doordata |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = doordata\n| Arg1Type = table\n| Arg1Desc = All the DarkRP information on a door or vehicle.\n\n}}",
            "timestamp": "2020-08-26 18:38:34"
        }
    },
    "Functions/Entity/Shared/getDoorOwner": {
        "en": {
            "content": "[[Category:Functions|getDoorOwner]]\n[[Category:Entity|getDoorOwner]]\n[[Category:Shared|getDoorOwner]]\n{{Lua_function |\n    function_name   = Entity:getDoorOwner |\n    arguments   =  |\n    description = Get the owner of a door. |\n    deprecated  =  |\n    returns     = {{Type|Player}} owner |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = owner\n| Arg1Type = Player\n| Arg1Desc = The owner of the door.\n\n}}",
            "timestamp": "2020-08-26 18:43:12"
        }
    },
    "Functions/Entity/Shared/getKeysAllowedToOwn": {
        "en": {
            "content": "[[Category:Functions|getKeysAllowedToOwn]]\n[[Category:Entity|getKeysAllowedToOwn]]\n[[Category:Shared|getKeysAllowedToOwn]]\n{{Lua_function |\n    function_name   = Entity:getKeysAllowedToOwn |\n    arguments   =  |\n    description = The list of people of which the master door owner has added as allowed to own. |\n    deprecated  =  |\n    returns     = {{Type|table}} players |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = players\n| Arg1Type = table\n| Arg1Desc = The list of people allowed to own.\n\n}}",
            "timestamp": "2020-08-26 18:47:36"
        }
    },
    "Functions/Entity/Shared/getKeysCoOwners": {
        "en": {
            "content": "[[Category:Functions|getKeysCoOwners]]\n[[Category:Entity|getKeysCoOwners]]\n[[Category:Shared|getKeysCoOwners]]\n{{Lua_function |\n    function_name   = Entity:getKeysCoOwners |\n    arguments   =  |\n    description = The list of people who co-own the door. |\n    deprecated  =  |\n    returns     = {{Type|table}} players |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = players\n| Arg1Type = table\n| Arg1Desc = The list of people allowed to own. The keys of this table are UserIDs, the values are booleans.\n\n}}",
            "timestamp": "2020-08-26 18:44:19"
        }
    },
    "Functions/Entity/Shared/getKeysDoorGroup": {
        "en": {
            "content": "[[Category:Functions|getKeysDoorGroup]]\n[[Category:Entity|getKeysDoorGroup]]\n[[Category:Shared|getKeysDoorGroup]]\n{{Lua_function |\n    function_name   = Entity:getKeysDoorGroup |\n    arguments   =  |\n    description = The door group of a door if it exists. |\n    deprecated  =  |\n    returns     = {{Type|string}} group |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = group\n| Arg1Type = string\n| Arg1Desc = The door group.\n\n}}",
            "timestamp": "2020-08-26 18:41:06"
        }
    },
    "Functions/Entity/Shared/getKeysDoorTeams": {
        "en": {
            "content": "[[Category:Functions|getKeysDoorTeams]]\n[[Category:Entity|getKeysDoorTeams]]\n[[Category:Shared|getKeysDoorTeams]]\n{{Lua_function |\n    function_name   = Entity:getKeysDoorTeams |\n    arguments   =  |\n    description = The teams that are allowed to open this door. |\n    deprecated  =  |\n    returns     = {{Type|table}} teams |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = teams\n| Arg1Type = table\n| Arg1Desc = The door teams.\n\n}}",
            "timestamp": "2020-08-26 18:47:29"
        }
    },
    "Functions/Entity/Shared/getKeysNonOwnable": {
        "en": {
            "content": "[[Category:Functions|getKeysNonOwnable]]\n[[Category:Entity|getKeysNonOwnable]]\n[[Category:Shared|getKeysNonOwnable]]\n{{Lua_function |\n    function_name   = Entity:getKeysNonOwnable |\n    arguments   =  |\n    description = Whether ownability of this door/vehicle is disabled. |\n    deprecated  =  |\n    returns     = {{Type|boolean}} title |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = title\n| Arg1Type = boolean\n| Arg1Desc = The ownability status.\n\n}}",
            "timestamp": "2020-08-26 18:37:52"
        }
    },
    "Functions/Entity/Shared/getKeysTitle": {
        "en": {
            "content": "[[Category:Functions|getKeysTitle]]\n[[Category:Entity|getKeysTitle]]\n[[Category:Shared|getKeysTitle]]\n{{Lua_function |\n    function_name   = Entity:getKeysTitle |\n    arguments   =  |\n    description = Get the title of this door or vehicle. |\n    deprecated  =  |\n    returns     = {{Type|string}} title |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = title\n| Arg1Type = string\n| Arg1Desc = The title of the door or vehicle.\n\n}}",
            "timestamp": "2020-08-26 18:42:15"
        }
    },
    "Functions/Entity/Shared/isDoor": {
        "en": {
            "content": "[[Category:Functions|isDoor]]\n[[Category:Entity|isDoor]]\n[[Category:Shared|isDoor]]\n{{Lua_function |\n    function_name   = Entity:isDoor |\n    arguments   =  |\n    description = Whether this entity is considered a door in DarkRP. |\n    deprecated  =  |\n    returns     = {{Type|boolean}} answer |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = answer\n| Arg1Type = boolean\n| Arg1Desc = Whether it's a door.\n\n}}",
            "timestamp": "2020-08-26 18:38:57"
        }
    },
    "Functions/Entity/Shared/isKeysAllowedToOwn": {
        "en": {
            "content": "[[Category:Functions|isKeysAllowedToOwn]]\n[[Category:Entity|isKeysAllowedToOwn]]\n[[Category:Shared|isKeysAllowedToOwn]]\n{{Lua_function |\n    function_name   = Entity:isKeysAllowedToOwn |\n    arguments   = {{Type|Player}} ply |\n    description = Whether this player is allowed to co-own a door, as decided by the master door owner. |\n    deprecated  =  |\n    returns     = {{Type|boolean}} answer |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player to query.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = answer\n| Arg1Type = boolean\n| Arg1Desc = Whether this door is (co-)ownable by the player.\n\n}}",
            "timestamp": "2020-08-26 18:47:35"
        }
    },
    "Functions/Entity/Shared/isKeysOwnable": {
        "en": {
            "content": "[[Category:Functions|isKeysOwnable]]\n[[Category:Entity|isKeysOwnable]]\n[[Category:Shared|isKeysOwnable]]\n{{Lua_function |\n    function_name   = Entity:isKeysOwnable |\n    arguments   =  |\n    description = Whether this door can be bought. |\n    deprecated  =  |\n    returns     = {{Type|boolean}} answer |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = answer\n| Arg1Type = boolean\n| Arg1Desc = Whether the door can be bought.\n\n}}",
            "timestamp": "2020-08-26 18:47:23"
        }
    },
    "Functions/Entity/Shared/isKeysOwned": {
        "en": {
            "content": "[[Category:Functions|isKeysOwned]]\n[[Category:Entity|isKeysOwned]]\n[[Category:Shared|isKeysOwned]]\n{{Lua_function |\n    function_name   = Entity:isKeysOwned |\n    arguments   =  |\n    description = Whether this door is owned by someone. |\n    deprecated  =  |\n    returns     = {{Type|boolean}} answer |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = answer\n| Arg1Type = boolean\n| Arg1Desc = Whether it's owned.\n\n}}",
            "timestamp": "2020-08-26 18:45:02"
        }
    },
    "Functions/Entity/Shared/isKeysOwnedBy": {
        "en": {
            "content": "[[Category:Functions|isKeysOwnedBy]]\n[[Category:Entity|isKeysOwnedBy]]\n[[Category:Shared|isKeysOwnedBy]]\n{{Lua_function |\n    function_name   = Entity:isKeysOwnedBy |\n    arguments   = {{Type|Player}} ply |\n    description = Whether this door is owned or co-owned by this player |\n    deprecated  =  |\n    returns     = {{Type|boolean}} answer |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player to query.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = answer\n| Arg1Type = boolean\n| Arg1Desc = Whether this door is (co-)owned by the player.\n\n}}",
            "timestamp": "2020-08-26 18:40:30"
        }
    },
    "Functions/Entity/Shared/isLocked": {
        "en": {
            "content": "#REDIRECT [[Functions/Entity/Server/isLocked]]",
            "timestamp": "2020-07-23 18:07:45"
        }
    },
    "Functions/Entity/Shared/isMasterOwner": {
        "en": {
            "content": "[[Category:Functions|isMasterOwner]]\n[[Category:Entity|isMasterOwner]]\n[[Category:Shared|isMasterOwner]]\n{{Lua_function |\n    function_name   = Entity:isMasterOwner |\n    arguments   = {{Type|Player}} ply |\n    description = Whether the player is the main owner of the door (as opposed to a co-owner). |\n    deprecated  =  |\n    returns     = {{Type|boolean}} answer |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player to query.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = answer\n| Arg1Type = boolean\n| Arg1Desc = Whether this player is the master owner.\n\n}}",
            "timestamp": "2020-08-26 18:44:23"
        }
    },
    "Functions/Entity/Shared/isMoneyBag": {
        "en": {
            "content": "[[Category:Functions|isMoneyBag]]\n[[Category:Entity|isMoneyBag]]\n[[Category:Shared|isMoneyBag]]\n{{Lua_function |\n    function_name   = Entity:isMoneyBag |\n    arguments   =  |\n    description = Whether this entity is a money bag |\n    deprecated  =  |\n    returns     = {{Type|boolean}} answer |\n    library     = {{Type|Entity}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = answer\n| Arg1Type = boolean\n| Arg1Desc = Whether this entity is a money bag.\n\n}}",
            "timestamp": "2020-08-26 18:40:38"
        }
    },
    "Functions/Player/Client/drawHitInfo": {
        "en": {
            "content": "[[Category:Functions|drawHitInfo]]\n[[Category:Player|drawHitInfo]]\n[[Category:Clientside|drawHitInfo]]\n{{Lua_function |\n    function_name   = Player:drawHitInfo |\n    arguments   =  |\n    description = Start drawing the hit information above a hitman. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:41:53"
        }
    },
    "Functions/Player/Client/drawPlayerInfo": {
        "en": {
            "content": "[[Category:Functions|drawPlayerInfo]]\n[[Category:Player|drawPlayerInfo]]\n[[Category:Clientside|drawPlayerInfo]]\n{{Lua_function |\n    function_name   = Player:drawPlayerInfo |\n    arguments   =  |\n    description = Draw player info above a player's head (name, health job). Override this function to disable or change drawing behaviour in DarkRP. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:39:29"
        }
    },
    "Functions/Player/Client/drawWantedInfo": {
        "en": {
            "content": "[[Category:Functions|drawWantedInfo]]\n[[Category:Player|drawWantedInfo]]\n[[Category:Clientside|drawWantedInfo]]\n{{Lua_function |\n    function_name   = Player:drawWantedInfo |\n    arguments   =  |\n    description = Draw the wanted info above a player's head. Override this to disable or change the drawing of wanted info above players' heads. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:42:07"
        }
    },
    "Functions/Player/Client/isInRoom": {
        "en": {
            "content": "[[Category:Functions|isInRoom]]\n[[Category:Player|isInRoom]]\n[[Category:Clientside|isInRoom]]\n{{Lua_function |\n    function_name   = Player:isInRoom |\n    arguments   =  |\n    description = Whether the player is in the same room as the LocalPlayer. |\n    deprecated  =  |\n    returns     = {{Type|boolean}} inRoom |\n    library     = {{Type|Player}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = inRoom\n| Arg1Type = boolean\n| Arg1Desc = Whether the player is in the same room.\n\n}}",
            "timestamp": "2020-08-26 18:42:00"
        }
    },
    "Functions/Player/Client/stopHitInfo": {
        "en": {
            "content": "[[Category:Functions|stopHitInfo]]\n[[Category:Player|stopHitInfo]]\n[[Category:Clientside|stopHitInfo]]\n{{Lua_function |\n    function_name   = Player:stopHitInfo |\n    arguments   =  |\n    description = Stop drawing the hit information above a hitman. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Clientside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:42:26"
        }
    },
    "Functions/Player/Server/abortHit": {
        "en": {
            "content": "[[Category:Functions|abortHit]]\n[[Category:Player|abortHit]]\n[[Category:Serverside|abortHit]]\n{{Lua_function |\n    function_name   = Player:abortHit |\n    arguments   = {{Type|string}} message |\n    description = Abort a hit |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = message\n| Arg1Type = string\n| Arg1Req  = false\n| Arg1Desc = The reason why the hit was aborted\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:42:35"
        }
    },
    "Functions/Player/Server/addCustomEntity": {
        "en": {
            "content": "[[Category:Functions|addCustomEntity]]\n[[Category:Player|addCustomEntity]]\n[[Category:Serverside|addCustomEntity]]\n{{Lua_function |\n    function_name   = Player:addCustomEntity |\n    arguments   = {{Type|table}} tblEnt |\n    description = Add a custom entity to the player's limit. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = tblEnt\n| Arg1Type = table\n| Arg1Req  = true\n| Arg1Desc = The entity table (from the DarkRPEntities table).\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:39:25"
        }
    },
    "Functions/Player/Server/addMoney": {
        "en": {
            "content": "[[Category:Functions|addMoney]]\n[[Category:Player|addMoney]]\n[[Category:Serverside|addMoney]]\n{{Lua_function |\n    function_name   = Player:addMoney |\n    arguments   = {{Type|number}} amount |\n    description = Give money to a player. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = amount\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The amount of money to give to the player. A negative amount means you're substracting money.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:46:22"
        }
    },
    "Functions/Player/Server/addPocketItem": {
        "en": {
            "content": "[[Category:Functions|addPocketItem]]\n[[Category:Player|addPocketItem]]\n[[Category:Serverside|addPocketItem]]\n{{Lua_function |\n    function_name   = Player:addPocketItem |\n    arguments   = {{Type|Entity}} ent |\n    description = Add an item to the pocket of the player. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ent\n| Arg1Type = Entity\n| Arg1Req  = true\n| Arg1Desc = The entity to add.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:37:48"
        }
    },
    "Functions/Player/Server/applyPlayerClassVars": {
        "en": {
            "content": "[[Category:Functions|applyPlayerClassVars]]\n[[Category:Player|applyPlayerClassVars]]\n[[Category:Serverside|applyPlayerClassVars]]\n{{Lua_function |\n    function_name   = Player:applyPlayerClassVars |\n    arguments   = {{Type|boolean}} applyHealth |\n    description = Applies all variables in a player's associated GMod player class to the player. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = applyHealth\n| Arg1Type = boolean\n| Arg1Req  = false\n| Arg1Desc = Whether the player's health should be set to the starting health.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:45:55"
        }
    },
    "Functions/Player/Server/arrest": {
        "en": {
            "content": "[[Category:Functions|arrest]]\n[[Category:Player|arrest]]\n[[Category:Serverside|arrest]]\n{{Lua_function |\n    function_name   = Player:arrest |\n    arguments   = {{Type|number}} time, {{Type|Player}} Arrester |\n    description = Arrest a player. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = time\n| Arg1Type = number\n| Arg1Req  = false\n| Arg1Desc = For how long the player is arrested.\n\n| Arg2Name = Arrester\n| Arg2Type = Player\n| Arg2Req  = false\n| Arg2Desc = The player who arrested the target.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:47:54"
        }
    },
    "Functions/Player/Server/changeAllowed": {
        "en": {
            "content": "[[Category:Functions|changeAllowed]]\n[[Category:Player|changeAllowed]]\n[[Category:Serverside|changeAllowed]]\n{{Lua_function |\n    function_name   = Player:changeAllowed |\n    arguments   = {{Type|number}} team |\n    description = Returns whether a player is allowed to get a certain job. |\n    deprecated  =  |\n    returns     = {{Type|boolean}} allowed |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = team\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The job.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = allowed\n| Arg1Type = boolean\n| Arg1Desc = Whether the player is allowed to get the job.\n\n}}",
            "timestamp": "2020-08-26 18:43:20"
        }
    },
    "Functions/Player/Server/changeTeam": {
        "en": {
            "content": "[[Category:Functions|changeTeam]]\n[[Category:Player|changeTeam]]\n[[Category:Serverside|changeTeam]]\n{{Lua_function |\n    function_name   = Player:changeTeam |\n    arguments   = {{Type|number}} team, {{Type|boolean}} force, {{Type|boolean}} suppressNotification |\n    description = Change the team of a player. |\n    deprecated  =  |\n    returns     = {{Type|boolean}} allowed |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = team\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The team (job number).\n\n| Arg2Name = force\n| Arg2Type = boolean\n| Arg2Req  = false\n| Arg2Desc = Force the change (ignore restrictions that players usually have to get the job).\n\n| Arg3Name = suppressNotification\n| Arg3Type = boolean\n| Arg3Req  = false\n| Arg3Desc = Suppress any notifications.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = allowed\n| Arg1Type = boolean\n| Arg1Desc = Whether the player is allowed to get the job.\n\n}}",
            "timestamp": "2020-11-01 19:04:13"
        }
    },
    "Functions/Player/Server/customEntityLimitReached": {
        "en": {
            "content": "[[Category:Functions|customEntityLimitReached]]\n[[Category:Player|customEntityLimitReached]]\n[[Category:Serverside|customEntityLimitReached]]\n{{Lua_function |\n    function_name   = Player:customEntityLimitReached |\n    arguments   = {{Type|table}} tblEnt |\n    description = Set a shared variable. |\n    deprecated  =  |\n    returns     = {{Type|boolean}} limitReached |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = tblEnt\n| Arg1Type = table\n| Arg1Req  = true\n| Arg1Desc = The entity table (from the DarkRPEntities table).\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = limitReached\n| Arg1Type = boolean\n| Arg1Desc = Whether the limit has been reached.\n\n}}",
            "timestamp": "2020-08-26 18:48:25"
        }
    },
    "Functions/Player/Server/doPropertyTax": {
        "en": {
            "content": "[[Category:Functions|doPropertyTax]]\n[[Category:Player|doPropertyTax]]\n[[Category:Serverside|doPropertyTax]]\n{{Lua_function |\n    function_name   = Player:doPropertyTax |\n    arguments   =  |\n    description = Tax a player based on the amount of doors and vehicles they have. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:40:32"
        }
    },
    "Functions/Player/Server/dropDRPWeapon": {
        "en": {
            "content": "[[Category:Functions|dropDRPWeapon]]\n[[Category:Player|dropDRPWeapon]]\n[[Category:Serverside|dropDRPWeapon]]\n{{Lua_function |\n    function_name   = Player:dropDRPWeapon |\n    arguments   = {{Type|Entity}} weapon |\n    description = Drop the weapon with animations. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = weapon\n| Arg1Type = Entity\n| Arg1Req  = true\n| Arg1Desc = The weapon to drop\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:42:23"
        }
    },
    "Functions/Player/Server/dropPocketItem": {
        "en": {
            "content": "[[Category:Functions|dropPocketItem]]\n[[Category:Player|dropPocketItem]]\n[[Category:Serverside|dropPocketItem]]\n{{Lua_function |\n    function_name   = Player:dropPocketItem |\n    arguments   = {{Type|Entity}} ent |\n    description = Make the player drop an item from the pocket. |\n    deprecated  =  |\n    returns     = {{Type|Entity}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = ent\n| Arg1Type = Entity\n| Arg1Req  = true\n| Arg1Desc = The entity to drop.\n\n}}\n\n\n== Function return values ==\nThis function returns the spawned entity.",
            "timestamp": "2021-06-13 02:10:13"
        }
    },
    "Functions/Player/Server/finishHit": {
        "en": {
            "content": "[[Category:Functions|finishHit]]\n[[Category:Player|finishHit]]\n[[Category:Serverside|finishHit]]\n{{Lua_function |\n    function_name   = Player:finishHit |\n    arguments   =  |\n    description = End a hit without a message |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:43:51"
        }
    },
    "Functions/Player/Server/getHitCustomer": {
        "en": {
            "content": "[[Category:Functions|getHitCustomer]]\n[[Category:Player|getHitCustomer]]\n[[Category:Serverside|getHitCustomer]]\n{{Lua_function |\n    function_name   = Player:getHitCustomer |\n    arguments   =  |\n    description = Get the customer for the current hit |\n    deprecated  =  |\n    returns     = {{Type|Player}} customer |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = customer\n| Arg1Type = Player\n| Arg1Desc = The customer for the current hit\n\n}}",
            "timestamp": "2020-08-26 18:44:02"
        }
    },
    "Functions/Player/Server/getPreferredModel": {
        "en": {
            "content": "[[Category:Functions|getPreferredModel]]\n[[Category:Player|getPreferredModel]]\n[[Category:Serverside|getPreferredModel]]\n{{Lua_function |\n    function_name   = Player:getPreferredModel |\n    arguments   = {{Type|number}} TeamNr |\n    description = Get the preferred model of a player for a job. |\n    deprecated  =  |\n    returns     = {{Type|string}} model |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = TeamNr\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The job number.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = model\n| Arg1Type = string\n| Arg1Desc = The preferred model for the job.\n\n}}",
            "timestamp": "2020-08-26 18:48:26"
        }
    },
    "Functions/Player/Server/hungerUpdate": {
        "en": {
            "content": "[[Category:Functions|hungerUpdate]]\n[[Category:Player|hungerUpdate]]\n[[Category:Serverside|hungerUpdate]]\n{{Lua_function |\n    function_name   = Player:hungerUpdate |\n    arguments   =  |\n    description = Makes the player slightly more hungry. Called in a timer by default. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:35:35"
        }
    },
    "Functions/Player/Server/initiateTax": {
        "en": {
            "content": "[[Category:Functions|initiateTax]]\n[[Category:Player|initiateTax]]\n[[Category:Serverside|initiateTax]]\n{{Lua_function |\n    function_name   = Player:initiateTax |\n    arguments   =  |\n    description = Internal function, starts the timer that taxes the player every once in a while. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:39:28"
        }
    },
    "Functions/Player/Server/keysUnOwnAll": {
        "en": {
            "content": "[[Category:Functions|keysUnOwnAll]]\n[[Category:Player|keysUnOwnAll]]\n[[Category:Serverside|keysUnOwnAll]]\n{{Lua_function |\n    function_name   = Player:keysUnOwnAll |\n    arguments   =  |\n    description = Unown every door and vehicle owned by this player. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:38:25"
        }
    },
    "Functions/Player/Server/newHungerData": {
        "en": {
            "content": "[[Category:Functions|newHungerData]]\n[[Category:Player|newHungerData]]\n[[Category:Serverside|newHungerData]]\n{{Lua_function |\n    function_name   = Player:newHungerData |\n    arguments   =  |\n    description = Create the initial hunger data (called on PlayerInitialSpawn). |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:46:25"
        }
    },
    "Functions/Player/Server/payDay": {
        "en": {
            "content": "[[Category:Functions|payDay]]\n[[Category:Player|payDay]]\n[[Category:Serverside|payDay]]\n{{Lua_function |\n    function_name   = Player:payDay |\n    arguments   =  |\n    description = Give a player their salary. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:38:10"
        }
    },
    "Functions/Player/Server/placeHit": {
        "en": {
            "content": "[[Category:Functions|placeHit]]\n[[Category:Player|placeHit]]\n[[Category:Serverside|placeHit]]\n{{Lua_function |\n    function_name   = Player:placeHit |\n    arguments   = {{Type|Player}} customer, {{Type|Player}} target, {{Type|number}} price |\n    description = Place an actual hit. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = customer\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The customer who paid for the hit.\n\n| Arg2Name = target\n| Arg2Type = Player\n| Arg2Req  = true\n| Arg2Desc = The target of the hit.\n\n| Arg3Name = price\n| Arg3Type = number\n| Arg3Req  = true\n| Arg3Desc = The price of the hit.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:44:11"
        }
    },
    "Functions/Player/Server/removeCustomEntity": {
        "en": {
            "content": "[[Category:Functions|removeCustomEntity]]\n[[Category:Player|removeCustomEntity]]\n[[Category:Serverside|removeCustomEntity]]\n{{Lua_function |\n    function_name   = Player:removeCustomEntity |\n    arguments   = {{Type|table}} tblEnt |\n    description = Remove a custom entity to the player's limit. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = tblEnt\n| Arg1Type = table\n| Arg1Req  = true\n| Arg1Desc = The entity table (from the DarkRPEntities table).\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:44:22"
        }
    },
    "Functions/Player/Server/removeDarkRPVar": {
        "en": {
            "content": "[[Category:Functions|removeDarkRPVar]]\n[[Category:Player|removeDarkRPVar]]\n[[Category:Serverside|removeDarkRPVar]]\n{{Lua_function |\n    function_name   = Player:removeDarkRPVar |\n    arguments   = {{Type|string}} variable, {{Type|table}} target |\n    description = Remove a shared variable. Exactly the same as ply:setDarkRPVar(nil). |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = variable\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the variable.\n\n| Arg2Name = target\n| Arg2Type = table\n| Arg2Req  = false\n| Arg2Desc = The clients to whom this variable is sent. Defaults to all players.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:47:56"
        }
    },
    "Functions/Player/Server/removePocketItem": {
        "en": {
            "content": "[[Category:Functions|removePocketItem]]\n[[Category:Player|removePocketItem]]\n[[Category:Serverside|removePocketItem]]\n{{Lua_function |\n    function_name   = Player:removePocketItem |\n    arguments   = {{Type|number}} item |\n    description = Remove an item from the pocket of the player. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = item\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The index of the entity to remove from pocket.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:39:36"
        }
    },
    "Functions/Player/Server/requestHit": {
        "en": {
            "content": "[[Category:Functions|requestHit]]\n[[Category:Player|requestHit]]\n[[Category:Serverside|requestHit]]\n{{Lua_function |\n    function_name   = Player:requestHit |\n    arguments   = {{Type|Player}} customer, {{Type|Player}} target, {{Type|number}} price |\n    description = Request a hit to a hitman. |\n    deprecated  =  |\n    returns     = {{Type|boolean}} succeeded |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = customer\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The customer who paid for the hit.\n\n| Arg2Name = target\n| Arg2Type = Player\n| Arg2Req  = true\n| Arg2Desc = The target of the hit.\n\n| Arg3Name = price\n| Arg3Type = number\n| Arg3Req  = true\n| Arg3Desc = The price of the hit.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = succeeded\n| Arg1Type = boolean\n| Arg1Desc = Whether the hit request could be made.\n\n}}",
            "timestamp": "2020-08-26 18:47:59"
        }
    },
    "Functions/Player/Server/requestWarrant": {
        "en": {
            "content": "[[Category:Functions|requestWarrant]]\n[[Category:Player|requestWarrant]]\n[[Category:Serverside|requestWarrant]]\n{{Lua_function |\n    function_name   = Player:requestWarrant |\n    arguments   = {{Type|Player}} suspect, {{Type|Player}} actor, {{Type|string}} reason |\n    description = File a request for a search warrant. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = suspect\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player who is suspected.\n\n| Arg2Name = actor\n| Arg2Type = Player\n| Arg2Req  = true\n| Arg2Desc = The player who wants the warrant.\n\n| Arg3Name = reason\n| Arg3Type = string\n| Arg3Req  = true\n| Arg3Desc = The reason for the warrant.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:44:15"
        }
    },
    "Functions/Player/Server/sendDarkRPVars": {
        "en": {
            "content": "[[Category:Functions|sendDarkRPVars]]\n[[Category:Player|sendDarkRPVars]]\n[[Category:Serverside|sendDarkRPVars]]\n{{Lua_function |\n    function_name   = Player:sendDarkRPVars |\n    arguments   =  |\n    description = Internal function. Sends all visibleDarkRPVars of all players to this player. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:48:50"
        }
    },
    "Functions/Player/Server/sendDoorData": {
        "en": {
            "content": "[[Category:Functions|sendDoorData]]\n[[Category:Player|sendDoorData]]\n[[Category:Serverside|sendDoorData]]\n{{Lua_function |\n    function_name   = Player:sendDoorData |\n    arguments   =  |\n    description = Internal function. Sends all door data to a player. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:40:42"
        }
    },
    "Functions/Player/Server/setDarkRPVar": {
        "en": {
            "content": "[[Category:Functions|setDarkRPVar]]\n[[Category:Player|setDarkRPVar]]\n[[Category:Serverside|setDarkRPVar]]\n{{Lua_function |\n    function_name   = Player:setDarkRPVar |\n    arguments   = {{Type|string}} variable, {{Type|any}} value, {{Type|table}} target |\n    description = Set a shared variable. Make sure the variable is registered with DarkRP.registerDarkRPVar! |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = variable\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the variable.\n\n| Arg2Name = value\n| Arg2Type = any\n| Arg2Req  = true\n| Arg2Desc = The value of the variable.\n\n| Arg3Name = target\n| Arg3Type = table\n| Arg3Req  = false\n| Arg3Desc = The clients to whom this variable is sent. Defaults to all players.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2021-02-01 21:45:49"
        }
    },
    "Functions/Player/Server/setHitCustomer": {
        "en": {
            "content": "[[Category:Functions|setHitCustomer]]\n[[Category:Player|setHitCustomer]]\n[[Category:Serverside|setHitCustomer]]\n{{Lua_function |\n    function_name   = Player:setHitCustomer |\n    arguments   = {{Type|Player}} customer |\n    description = Set the customer who pays for the hit. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = customer\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The customer who paid for the hit.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:45:37"
        }
    },
    "Functions/Player/Server/setHitPrice": {
        "en": {
            "content": "[[Category:Functions|setHitPrice]]\n[[Category:Player|setHitPrice]]\n[[Category:Serverside|setHitPrice]]\n{{Lua_function |\n    function_name   = Player:setHitPrice |\n    arguments   = {{Type|number}} price |\n    description = Set the price of a hit |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = price\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The price of the hit.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:48:20"
        }
    },
    "Functions/Player/Server/setHitTarget": {
        "en": {
            "content": "[[Category:Functions|setHitTarget]]\n[[Category:Player|setHitTarget]]\n[[Category:Serverside|setHitTarget]]\n{{Lua_function |\n    function_name   = Player:setHitTarget |\n    arguments   = {{Type|Player}} target |\n    description = Set the target of a hit |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = target\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The target of the hit.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:46:00"
        }
    },
    "Functions/Player/Server/setRPName": {
        "en": {
            "content": "[[Category:Functions|setRPName]]\n[[Category:Player|setRPName]]\n[[Category:Serverside|setRPName]]\n{{Lua_function |\n    function_name   = Player:setRPName |\n    arguments   = {{Type|string}} name, {{Type|boolean}} firstrun |\n    description = Set the RPName of a player. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The new name of the player.\n\n| Arg2Name = firstrun\n| Arg2Type = boolean\n| Arg2Req  = false\n| Arg2Desc = Whether to play nice and find a different name if it has been taken (true) or to refuse the name change when taken (false).\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:38:11"
        }
    },
    "Functions/Player/Server/setSelfDarkRPVar": {
        "en": {
            "content": "[[Category:Functions|setSelfDarkRPVar]]\n[[Category:Player|setSelfDarkRPVar]]\n[[Category:Serverside|setSelfDarkRPVar]]\n{{Lua_function |\n    function_name   = Player:setSelfDarkRPVar |\n    arguments   = {{Type|string}} variable, {{Type|any}} value |\n    description = Set a shared variable that is only seen by the player to whom this variable applies. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = variable\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the variable.\n\n| Arg2Name = value\n| Arg2Type = any\n| Arg2Req  = true\n| Arg2Desc = The value of the variable.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:44:20"
        }
    },
    "Functions/Player/Server/teamBan": {
        "en": {
            "content": "[[Category:Functions|teamBan]]\n[[Category:Player|teamBan]]\n[[Category:Serverside|teamBan]]\n{{Lua_function |\n    function_name   = Player:teamBan |\n    arguments   = {{Type|number}} team, {{Type|number}} time |\n    description = Ban someone from getting a certain job. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = team\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = the number of the job (e.g. TEAM_MEDIC).\n\n| Arg2Name = time\n| Arg2Type = number\n| Arg2Req  = false\n| Arg2Desc = For how long the player is banned from this job.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:39:53"
        }
    },
    "Functions/Player/Server/teamBanTimeLeft": {
        "en": {
            "content": "[[Category:Functions|teamBanTimeLeft]]\n[[Category:Player|teamBanTimeLeft]]\n[[Category:Serverside|teamBanTimeLeft]]\n{{Lua_function |\n    function_name   = Player:teamBanTimeLeft |\n    arguments   = {{Type|number}} team |\n    description = Returns the time left on a player's teamban. |\n    deprecated  =  |\n    returns     = {{Type|number}} time |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = team\n| Arg1Type = number\n| Arg1Req  = false\n| Arg1Desc = the number of the job (e.g. TEAM_MEDIC). Uses the player's team if not defined.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = time\n| Arg1Type = number\n| Arg1Desc = The time left on the teamban in seconds.\n\n}}",
            "timestamp": "2020-08-26 18:46:14"
        }
    },
    "Functions/Player/Server/teamUnBan": {
        "en": {
            "content": "[[Category:Functions|teamUnBan]]\n[[Category:Player|teamUnBan]]\n[[Category:Serverside|teamUnBan]]\n{{Lua_function |\n    function_name   = Player:teamUnBan |\n    arguments   = {{Type|number}} team |\n    description = Unban someone from a team. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = team\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The team to unban from.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:48:16"
        }
    },
    "Functions/Player/Server/unArrest": {
        "en": {
            "content": "[[Category:Functions|unArrest]]\n[[Category:Player|unArrest]]\n[[Category:Serverside|unArrest]]\n{{Lua_function |\n    function_name   = Player:unArrest |\n    arguments   = {{Type|Player}} Unarrester |\n    description = Unarrest a player. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = Unarrester\n| Arg1Type = Player\n| Arg1Req  = false\n| Arg1Desc = The player who unarrested the target.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:45:52"
        }
    },
    "Functions/Player/Server/unWanted": {
        "en": {
            "content": "[[Category:Functions|unWanted]]\n[[Category:Player|unWanted]]\n[[Category:Serverside|unWanted]]\n{{Lua_function |\n    function_name   = Player:unWanted |\n    arguments   = {{Type|Player}} actor |\n    description = Clear the wanted status for this person. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = actor\n| Arg1Type = Player\n| Arg1Req  = false\n| Arg1Desc = The player who cleared the wanted status.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:42:20"
        }
    },
    "Functions/Player/Server/unWarrant": {
        "en": {
            "content": "[[Category:Functions|unWarrant]]\n[[Category:Player|unWarrant]]\n[[Category:Serverside|unWarrant]]\n{{Lua_function |\n    function_name   = Player:unWarrant |\n    arguments   = {{Type|Player}} unwarranter |\n    description = Remove the search warrant for this person. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = unwarranter\n| Arg1Type = Player\n| Arg1Req  = false\n| Arg1Desc = The player who removed the warrant.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:45:51"
        }
    },
    "Functions/Player/Server/updateJob": {
        "en": {
            "content": "[[Category:Functions|updateJob]]\n[[Category:Player|updateJob]]\n[[Category:Serverside|updateJob]]\n{{Lua_function |\n    function_name   = Player:updateJob |\n    arguments   = {{Type|string}} job |\n    description = Set the job name of a player (doesn't change the actual team). |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = job\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the job.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:46:51"
        }
    },
    "Functions/Player/Server/wanted": {
        "en": {
            "content": "[[Category:Functions|wanted]]\n[[Category:Player|wanted]]\n[[Category:Serverside|wanted]]\n{{Lua_function |\n    function_name   = Player:wanted |\n    arguments   = {{Type|Player}} actor, {{Type|string}} reason, {{Type|number}} time |\n    description = Make this person wanted by the police. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = actor\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player who made the other person wanted.\n\n| Arg2Name = reason\n| Arg2Type = string\n| Arg2Req  = true\n| Arg2Desc = The reason for the wanted status.\n\n| Arg3Name = time\n| Arg3Type = number\n| Arg3Req  = false\n| Arg3Desc = The time in seconds for which the player should be wanted.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:44:30"
        }
    },
    "Functions/Player/Server/warrant": {
        "en": {
            "content": "[[Category:Functions|warrant]]\n[[Category:Player|warrant]]\n[[Category:Serverside|warrant]]\n{{Lua_function |\n    function_name   = Player:warrant |\n    arguments   = {{Type|Player}} warranter, {{Type|string}} reason |\n    description = Get a search warrant for this person. |\n    deprecated  =  |\n    returns     = {{Type|nil}} |\n    library     = {{Type|Player}} |\n    lua_state   = {{Serverside}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = warranter\n| Arg1Type = Player\n| Arg1Req  = true\n| Arg1Desc = The player who set the warrant.\n\n| Arg2Name = reason\n| Arg2Type = string\n| Arg2Req  = true\n| Arg2Desc = The reason for the warrant.\n\n}}\n\n\n== Function return values ==\nThis function does not return any value.",
            "timestamp": "2020-08-26 18:37:43"
        }
    },
    "Functions/Player/Shared/SteamName": {
        "en": {
            "content": "[[Category:Functions|SteamName]]\n[[Category:Player|SteamName]]\n[[Category:Shared|SteamName]]\n{{Lua_function |\n    function_name   = Player:SteamName |\n    arguments   =  |\n    description = Retrieve a player's real (steam) name. |\n    deprecated  =  |\n    returns     = {{Type|string}} name |\n    library     = {{Type|Player}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Desc = The player's steam name.\n\n}}",
            "timestamp": "2020-08-26 18:45:45"
        }
    },
    "Functions/Player/Shared/canAfford": {
        "en": {
            "content": "[[Category:Functions|canAfford]]\n[[Category:Player|canAfford]]\n[[Category:Shared|canAfford]]\n{{Lua_function |\n    function_name   = Player:canAfford |\n    arguments   = {{Type|number}} amount |\n    description = Whether the player can afford the given amount of money |\n    deprecated  =  |\n    returns     = {{Type|boolean}} answer |\n    library     = {{Type|Player}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = amount\n| Arg1Type = number\n| Arg1Req  = true\n| Arg1Desc = The amount of money\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = answer\n| Arg1Type = boolean\n| Arg1Desc = Whether the player can afford it\n\n}}",
            "timestamp": "2020-08-26 18:46:53"
        }
    },
    "Functions/Player/Shared/canKeysLock": {
        "en": {
            "content": "[[Category:Functions|canKeysLock]]\n[[Category:Player|canKeysLock]]\n[[Category:Shared|canKeysLock]]\n{{Lua_function |\n    function_name   = Player:canKeysLock |\n    arguments   = {{Type|Entity}} door |\n    description = Whether the player can lock a given door. |\n    deprecated  =  |\n    returns     = {{Type|boolean}} allowed |\n    library     = {{Type|Player}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = door\n| Arg1Type = Entity\n| Arg1Req  = true\n| Arg1Desc = The door\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = allowed\n| Arg1Type = boolean\n| Arg1Desc = Whether the player is allowed to lock the door.\n\n}}",
            "timestamp": "2020-08-26 18:38:18"
        }
    },
    "Functions/Player/Shared/canKeysUnlock": {
        "en": {
            "content": "[[Category:Functions|canKeysUnlock]]\n[[Category:Player|canKeysUnlock]]\n[[Category:Shared|canKeysUnlock]]\n{{Lua_function |\n    function_name   = Player:canKeysUnlock |\n    arguments   = {{Type|Entity}} door |\n    description = Whether the player can unlock a given door. |\n    deprecated  =  |\n    returns     = {{Type|boolean}} allowed |\n    library     = {{Type|Player}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = door\n| Arg1Type = Entity\n| Arg1Req  = true\n| Arg1Desc = The door\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = allowed\n| Arg1Type = boolean\n| Arg1Desc = Whether the player is allowed to unlock the door.\n\n}}",
            "timestamp": "2020-08-26 18:38:51"
        }
    },
    "Functions/Player/Shared/getAgenda": {
        "en": {
            "content": "[[Category:Functions|getAgenda]]\n[[Category:Player|getAgenda]]\n[[Category:Shared|getAgenda]]\n{{Lua_function |\n    function_name   = Player:getAgenda |\n    arguments   =  |\n    description = Get the agenda a player manages. |\n    deprecated  = Use ply:getAgendaTable() instead. |\n    returns     = {{Type|table}} agenda |\n    library     = {{Type|Player}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = agenda\n| Arg1Type = table\n| Arg1Desc = The agenda.\n\n}}",
            "timestamp": "2020-08-26 18:43:08"
        }
    },
    "Functions/Player/Shared/getAgendaTable": {
        "en": {
            "content": "[[Category:Functions|getAgendaTable]]\n[[Category:Player|getAgendaTable]]\n[[Category:Shared|getAgendaTable]]\n{{Lua_function |\n    function_name   = Player:getAgendaTable |\n    arguments   =  |\n    description = Get the agenda a player can see. Note: when a player is not the manager of an agenda, it returns the agenda of the manager. |\n    deprecated  =  |\n    returns     = {{Type|table}} agenda |\n    library     = {{Type|Player}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = agenda\n| Arg1Type = table\n| Arg1Desc = The agenda.\n\n}}",
            "timestamp": "2020-08-26 18:44:33"
        }
    },
    "Functions/Player/Shared/getDarkRPVar": {
        "en": {
            "content": "[[Category:Functions|getDarkRPVar]]\n[[Category:Player|getDarkRPVar]]\n[[Category:Shared|getDarkRPVar]]\n{{Lua_function |\n\tfunction_name\t= Player:getDarkRPVar |\n\targuments\t= {{Type|string}} var |\n\tdescription\t= Get the value of a DarkRPVar, which is shared between server and client. |\n\tdeprecated\t=  |\n\treturns \t= {{Type|any}} value |\n\tlibrary\t\t= {{Type|Player}} |\n\tlua_state\t= {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = var\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the variable.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = value\n| Arg1Type = any\n| Arg1Desc = The value of the DarkRP var.\n\n}}\n\n\n== List of DarkRP Variables (To be put in getDarkRPVar( \" \" ) ) ==\n\n* AFK\n* AFKDemoted\n* money\n* salary\n* rpname\n* job\n* HasGunlicense\n* Arrested\n* wanted\n* wantedReason\n* agenda\n* zombieToggle ( Whether the person toggled to a zombie during the zombie event )\n* hitTarget\n* hitPrice\n* lastHitTime\n* Energy (This is what hungermod uses for hunger)\n\n== Example Code ==\n___________________________________________________________________________________________\n\n for _, player in ipairs(player.GetAll()) do\n    print( player:getDarkRPVar(\"rpname\") , player:getDarkRPVar(\"job\") , player:GetDarkRPVar(\"money\") , player:getDarkRPVar(\"Arrested\"))\n end\n\nResult of Code: Quang\tCitizen\t2500\tfalse",
            "timestamp": "2022-01-02 21:48:26"
        }
    },
    "Functions/Player/Shared/getEyeSightHitEntity": {
        "en": {
            "content": "[[Category:Functions|getEyeSightHitEntity]]\n[[Category:Player|getEyeSightHitEntity]]\n[[Category:Shared|getEyeSightHitEntity]]\n{{Lua_function |\n    function_name   = Player:getEyeSightHitEntity |\n    arguments   = {{Type|number}} searchDistance, {{Type|number}} hitDistance, {{Type|function}} filter |\n    description = Get the entity that is closest to a player's line of sight and its distance. |\n    deprecated  =  |\n    returns     = {{Type|Entity}} closestEnt, {{Type|number}} distance |\n    library     = {{Type|Player}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = searchDistance\n| Arg1Type = number\n| Arg1Req  = false\n| Arg1Desc = How far to look. You usually don't want this function to return an entity millions of units away. The default is 100 units.\n\n| Arg2Name = hitDistance\n| Arg2Type = number\n| Arg2Req  = false\n| Arg2Desc = The maximum distance between the player's line of sight and the object. Basically how far the player can be 'looking away' from the object. The default is 15 units.\n\n| Arg3Name = filter\n| Arg3Type = function\n| Arg3Req  = false\n| Arg3Desc = The filter for which entities to look for. By default it only looks for players.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = closestEnt\n| Arg1Type = Entity\n| Arg1Desc = The entity that is closest to the player's line of sight. Returns nil when not found.\n\n| Arg2Name = distance\n| Arg2Type = number\n| Arg2Desc = The (minimum) distance between the player's line of sight and the object.\n\n}}",
            "timestamp": "2020-08-26 18:40:17"
        }
    },
    "Functions/Player/Shared/getHitPrice": {
        "en": {
            "content": "[[Category:Functions|getHitPrice]]\n[[Category:Player|getHitPrice]]\n[[Category:Shared|getHitPrice]]\n{{Lua_function |\n    function_name   = Player:getHitPrice |\n    arguments   =  |\n    description = Get the price the hitman demands for his work. |\n    deprecated  =  |\n    returns     = {{Type|number}} price |\n    library     = {{Type|Player}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = price\n| Arg1Type = number\n| Arg1Desc = The price of the next hit.\n\n}}",
            "timestamp": "2020-08-26 18:47:53"
        }
    },
    "Functions/Player/Shared/getHitTarget": {
        "en": {
            "content": "[[Category:Functions|getHitTarget]]\n[[Category:Player|getHitTarget]]\n[[Category:Shared|getHitTarget]]\n{{Lua_function |\n    function_name   = Player:getHitTarget |\n    arguments   =  |\n    description = Get the target of a hitman. |\n    deprecated  =  |\n    returns     = {{Type|Player}} target |\n    library     = {{Type|Player}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = target\n| Arg1Type = Player\n| Arg1Desc = The target of the hit.\n\n}}",
            "timestamp": "2020-08-26 18:38:15"
        }
    },
    "Functions/Player/Shared/getJobTable": {
        "en": {
            "content": "[[Category:Functions|getJobTable]]\n[[Category:Player|getJobTable]]\n[[Category:Shared|getJobTable]]\n{{Lua_function |\n    function_name   = Player:getJobTable |\n    arguments   =  |\n    description = Get the job table of a player. |\n    deprecated  =  |\n    returns     = {{Type|table}} job |\n    library     = {{Type|Player}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = job\n| Arg1Type = table\n| Arg1Desc = Table with the job information.\n\n}}",
            "timestamp": "2020-08-26 18:45:47"
        }
    },
    "Functions/Player/Shared/getPocketItems": {
        "en": {
            "content": "[[Category:Functions|getPocketItems]]\n[[Category:Player|getPocketItems]]\n[[Category:Shared|getPocketItems]]\n{{Lua_function |\n    function_name   = Player:getPocketItems |\n    arguments   =  |\n    description = Get a player's pocket items. |\n    deprecated  =  |\n    returns     = {{Type|table}} items |\n    library     = {{Type|Player}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = items\n| Arg1Type = table\n| Arg1Desc = A table containing crucial information about the items in the pocket.\n\n}}",
            "timestamp": "2020-08-26 18:46:09"
        }
    },
    "Functions/Player/Shared/getWantedReason": {
        "en": {
            "content": "[[Category:Functions|getWantedReason]]\n[[Category:Player|getWantedReason]]\n[[Category:Shared|getWantedReason]]\n{{Lua_function |\n    function_name   = Player:getWantedReason |\n    arguments   =  |\n    description = Get the reason why someone is wanted |\n    deprecated  =  |\n    returns     = {{Type|string}} answer |\n    library     = {{Type|Player}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = answer\n| Arg1Type = string\n| Arg1Desc = The reason\n\n}}",
            "timestamp": "2020-08-26 18:48:28"
        }
    },
    "Functions/Player/Shared/hasDarkRPPrivilege": {
        "en": {
            "content": "[[Category:Functions|hasDarkRPPrivilege]]\n[[Category:Player|hasDarkRPPrivilege]]\n[[Category:Shared|hasDarkRPPrivilege]]\n{{Lua_function |\n    function_name   = Player:hasDarkRPPrivilege |\n    arguments   = {{Type|string}} priv |\n    description = Whether the player has a certain privilege. |\n    deprecated  =  |\n    returns     = {{Type|boolean}} answer |\n    library     = {{Type|Player}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = priv\n| Arg1Type = string\n| Arg1Req  = true\n| Arg1Desc = The name of the privilege.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = answer\n| Arg1Type = boolean\n| Arg1Desc = Whether the player has the privilege.\n\n}}",
            "timestamp": "2020-08-26 18:43:18"
        }
    },
    "Functions/Player/Shared/hasHit": {
        "en": {
            "content": "[[Category:Functions|hasHit]]\n[[Category:Player|hasHit]]\n[[Category:Shared|hasHit]]\n{{Lua_function |\n    function_name   = Player:hasHit |\n    arguments   =  |\n    description = Whether this hitman has a hit. |\n    deprecated  =  |\n    returns     = {{Type|boolean}} answer |\n    library     = {{Type|Player}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = answer\n| Arg1Type = boolean\n| Arg1Desc = Whether this player has a hit.\n\n}}",
            "timestamp": "2020-08-26 18:41:46"
        }
    },
    "Functions/Player/Shared/isArrested": {
        "en": {
            "content": "[[Category:Functions|isArrested]]\n[[Category:Player|isArrested]]\n[[Category:Shared|isArrested]]\n{{Lua_function |\n    function_name   = Player:isArrested |\n    arguments   =  |\n    description = Whether this player is arrested |\n    deprecated  =  |\n    returns     = {{Type|boolean}} answer |\n    library     = {{Type|Player}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = answer\n| Arg1Type = boolean\n| Arg1Desc = Whether this player is arrested\n\n}}",
            "timestamp": "2020-08-26 18:46:18"
        }
    },
    "Functions/Player/Shared/isCP": {
        "en": {
            "content": "[[Category:Functions|isCP]]\n[[Category:Player|isCP]]\n[[Category:Shared|isCP]]\n{{Lua_function |\n    function_name   = Player:isCP |\n    arguments   =  |\n    description = Whether this player is part of the police force (mayor, cp, chief). |\n    deprecated  =  |\n    returns     = {{Type|boolean}} answer |\n    library     = {{Type|Player}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = answer\n| Arg1Type = boolean\n| Arg1Desc = Whether this player is part of the police force.\n\n}}",
            "timestamp": "2020-08-26 18:37:31"
        }
    },
    "Functions/Player/Shared/isChief": {
        "en": {
            "content": "[[Category:Functions|isChief]]\n[[Category:Player|isChief]]\n[[Category:Shared|isChief]]\n{{Lua_function |\n    function_name   = Player:isChief |\n    arguments   =  |\n    description = Whether this player is a Chief. |\n    deprecated  =  |\n    returns     = {{Type|boolean}} answer |\n    library     = {{Type|Player}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = answer\n| Arg1Type = boolean\n| Arg1Desc = Whether this player is a Chief.\n\n}}",
            "timestamp": "2020-08-26 18:46:39"
        }
    },
    "Functions/Player/Shared/isCook": {
        "en": {
            "content": "[[Category:Functions|isCook]]\n[[Category:Player|isCook]]\n[[Category:Shared|isCook]]\n{{Lua_function |\n    function_name   = Player:isCook |\n    arguments   =  |\n    description = Whether this player is a cook. This function is only available if hungermod is enabled. |\n    deprecated  =  |\n    returns     = {{Type|boolean}} answer |\n    library     = {{Type|Player}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = answer\n| Arg1Type = boolean\n| Arg1Desc = Whether this player is a cook.\n\n}}",
            "timestamp": "2020-08-26 18:45:05"
        }
    },
    "Functions/Player/Shared/isHitman": {
        "en": {
            "content": "[[Category:Functions|isHitman]]\n[[Category:Player|isHitman]]\n[[Category:Shared|isHitman]]\n{{Lua_function |\n    function_name   = Player:isHitman |\n    arguments   =  |\n    description = Whether this player is a hitman. |\n    deprecated  =  |\n    returns     = {{Type|boolean}} answer |\n    library     = {{Type|Player}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = answer\n| Arg1Type = boolean\n| Arg1Desc = Whether this player is a hitman.\n\n}}",
            "timestamp": "2020-08-26 18:40:21"
        }
    },
    "Functions/Player/Shared/isMayor": {
        "en": {
            "content": "[[Category:Functions|isMayor]]\n[[Category:Player|isMayor]]\n[[Category:Shared|isMayor]]\n{{Lua_function |\n    function_name   = Player:isMayor |\n    arguments   =  |\n    description = Whether this player is a mayor. |\n    deprecated  =  |\n    returns     = {{Type|boolean}} answer |\n    library     = {{Type|Player}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = answer\n| Arg1Type = boolean\n| Arg1Desc = Whether this player is a mayor.\n\n}}",
            "timestamp": "2020-08-26 18:39:56"
        }
    },
    "Functions/Player/Shared/isMedic": {
        "en": {
            "content": "[[Category:Functions|isMedic]]\n[[Category:Player|isMedic]]\n[[Category:Shared|isMedic]]\n{{Lua_function |\n    function_name   = Player:isMedic |\n    arguments   =  |\n    description = Whether this player is a medic. |\n    deprecated  =  |\n    returns     = {{Type|boolean}} answer |\n    library     = {{Type|Player}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = answer\n| Arg1Type = boolean\n| Arg1Desc = Whether this player is a medic.\n\n}}",
            "timestamp": "2020-08-26 18:38:13"
        }
    },
    "Functions/Player/Shared/isWanted": {
        "en": {
            "content": "[[Category:Functions|isWanted]]\n[[Category:Player|isWanted]]\n[[Category:Shared|isWanted]]\n{{Lua_function |\n    function_name   = Player:isWanted |\n    arguments   =  |\n    description = Whether this player is wanted |\n    deprecated  =  |\n    returns     = {{Type|boolean}} answer |\n    library     = {{Type|Player}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\nThis function does not take any arguments.\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = answer\n| Arg1Type = boolean\n| Arg1Desc = Whether this player is wanted\n\n}}",
            "timestamp": "2020-08-26 18:40:24"
        }
    },
    "Functions/Vector/Shared/isInSight": {
        "en": {
            "content": "[[Category:Functions|isInSight]]\n[[Category:Vector|isInSight]]\n[[Category:Shared|isInSight]]\n{{Lua_function |\n    function_name   = Vector:isInSight |\n    arguments   = {{Type|table}} filter, {{Type|Player}} ply |\n    description = Decides whether the vector could be seen by the player if they were to look at it. |\n    deprecated  =  |\n    returns     = {{Type|boolean}} answer, {{Type|Vector}} HitPos |\n    library     = {{Type|Vector}} |\n    lua_state   = {{Shared}} |\n}}\n\n== Function parameters ==\n{{ArgumentSyntax\n\n| Arg1Name = filter\n| Arg1Type = table\n| Arg1Req  = true\n| Arg1Desc = Trace filter that decides what the player can see through.\n\n| Arg2Name = ply\n| Arg2Type = Player\n| Arg2Req  = true\n| Arg2Desc = The player for whom the vector may or may not be visible.\n\n}}\n\n\n== Function return values ==\n{{ParameterListSyntax\n\n| Arg1Name = answer\n| Arg1Type = boolean\n| Arg1Desc = Whether the player can see the position.\n\n| Arg2Name = HitPos\n| Arg2Type = Vector\n| Arg2Desc = The position of the thing that blocks the player's sight.\n\n}}",
            "timestamp": "2020-08-26 18:48:39"
        }
    },
    "Hooks/Client/DarkRPLogPrinted": {
        "en": {
            "content": "[[Category:Hooks|DarkRPLogPrinted]]\n[[Category:Clientside|DarkRPLogPrinted]]\n{{Lua_hook |\n    hook_name   = DarkRPLogPrinted |\n    arguments   = {{Type|string}} text, {{Type|Color}} colour |\n    description = Called when a log has printed in console. |\n    deprecated  =  |\n    lua_state   = {{Clientside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = text\n| Arg1Type = string\n| Arg1Desc = The actual log.\n\n| Arg2Name = colour\n| Arg2Type = Color\n| Arg2Desc = The colour of the printed log.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:40:46"
        }
    },
    "Hooks/Client/F4MenuTabs": {
        "en": {
            "content": "[[Category:Hooks|F4MenuTabs]]\n[[Category:Clientside|F4MenuTabs]]\n{{Lua_hook |\n    hook_name   = F4MenuTabs |\n    arguments   =  |\n    description = Called when tabs are generated. Add and remove tabs in this hook. |\n    deprecated  =  |\n    lua_state   = {{Clientside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\nThis hook isn't called with any parameters\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:44:17"
        }
    },
    "Hooks/Client/HUDDrawDoorData": {
        "en": {
            "content": "[[Category:Hooks|HUDDrawDoorData]]\n[[Category:Clientside|HUDDrawDoorData]]\n{{Lua_hook |\n    hook_name   = HUDDrawDoorData |\n    arguments   = {{Type|Entity}} ent |\n    description = Called when DarkRP is about to draw the door ownability information of a door or vehicle. Override this hook to  |\n    deprecated  =  |\n    lua_state   = {{Clientside}} |\n    returns = {{Type|boolean}} override |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ent\n| Arg1Type = Entity\n| Arg1Desc = The door or vehicle of which the ownability information is about to be drawn.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = override\n| Arg1Type = boolean\n| Arg1Desc = Return true in your hook to disable the default drawing and use your own.\n\n}}",
            "timestamp": "2020-08-26 18:41:45"
        }
    },
    "Hooks/Client/chatHideRecipient": {
        "en": {
            "content": "[[Category:Hooks|chatHideRecipient]]\n[[Category:Clientside|chatHideRecipient]]\n{{Lua_hook |\n    hook_name   = chatHideRecipient |\n    arguments   = {{Type|Player}} ply |\n    description = Hide a receipent from who can hear/see your text GUI. |\n    deprecated  =  |\n    lua_state   = {{Clientside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who spoke.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:41:11"
        }
    },
    "Hooks/Client/onDrawSpawnedWeapon": {
        "en": {
            "content": "[[Category:Hooks|onDrawSpawnedWeapon]]\n[[Category:Clientside|onDrawSpawnedWeapon]]\n{{Lua_hook |\n    hook_name   = onDrawSpawnedWeapon |\n    arguments   = {{Type|Player}} weapon |\n    description = Draw spawned weapons. |\n    deprecated  =  |\n    lua_state   = {{Clientside}} |\n    returns = {{Type|any}} value |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = weapon\n| Arg1Type = Player\n| Arg1Desc = The weapon to perform drawing operations on.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = value\n| Arg1Type = any\n| Arg1Desc = Return a value to completely override drawing\n\n}}",
            "timestamp": "2020-08-26 18:42:36"
        }
    },
    "Hooks/Client/onKeysMenuOpened": {
        "en": {
            "content": "[[Category:Hooks|onKeysMenuOpened]]\n[[Category:Clientside|onKeysMenuOpened]]\n{{Lua_hook |\n    hook_name   = onKeysMenuOpened |\n    arguments   = {{Type|Entity}} ent, {{Type|Panel}} Frame |\n    description = Called when the keys menu is opened. |\n    deprecated  =  |\n    lua_state   = {{Clientside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ent\n| Arg1Type = Entity\n| Arg1Desc = The door entity.\n\n| Arg2Name = Frame\n| Arg2Type = Panel\n| Arg2Desc = The keys menu frame.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:43:13"
        }
    },
    "Hooks/Client/teamChanged": {
        "en": {
            "content": "[[Category:Hooks|teamChanged]]\n[[Category:Clientside|teamChanged]]\n{{Lua_hook |\n    hook_name   = teamChanged |\n    arguments   = {{Type|number}} before, {{Type|number}} after |\n    description = When your team is changed. |\n    deprecated  = Use the OnPlayerChangedTeam hook instead. |\n    lua_state   = {{Clientside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = before\n| Arg1Type = number\n| Arg1Desc = The team before the change.\n\n| Arg2Name = after\n| Arg2Type = number\n| Arg2Desc = The team after the change.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:46:15"
        }
    },
    "Hooks/Server/CanChangeRPName": {
        "en": {
            "content": "[[Category:Hooks|CanChangeRPName]]\n[[Category:Serverside|CanChangeRPName]]\n{{Lua_hook |\n    hook_name   = CanChangeRPName |\n    arguments   = {{Type|Player}} ply, {{Type|string}} name |\n    description = Whether a player can change their RP name. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} answer, {{Type|string}} reason |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player.\n\n| Arg2Name = name\n| Arg2Type = string\n| Arg2Desc = The name.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = answer\n| Arg1Type = boolean\n| Arg1Desc = Whether the player can change their RP names.\n\n| Arg2Name = reason\n| Arg2Type = string\n| Arg2Desc = When answer is false, this return value is the reason why.\n\n}}",
            "timestamp": "2020-08-26 18:41:22"
        }
    },
    "Hooks/Server/DarkRPDBInitialized": {
        "en": {
            "content": "[[Category:Hooks|DarkRPDBInitialized]]\n[[Category:Serverside|DarkRPDBInitialized]]\n{{Lua_hook |\n    hook_name   = DarkRPDBInitialized |\n    arguments   =  |\n    description = Called when DarkRP is done initializing the database. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\nThis hook isn't called with any parameters\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:47:19"
        }
    },
    "Hooks/Server/PlayerCanPickupWeapon": {
        "en": {
            "content": "[[Category:Hooks|PlayerCanPickupWeapon]]\n[[Category:Server|PlayerCanPickupWeapon]]\n{{Lua_hook |\n\thook_name\t= PlayerCanPickupWeapon |\n\targuments\t= {{Type|Player}} ply, {{Type|Weapon}} weapon |\n\tdescription\t= Whether a player can pickup a weapon |\n\tlua_state\t= {{Serverside}} |\n\treturns = {{Type|boolean}} canPickup |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player.\n\n| Arg2Name = weapon\n| Arg2Type = Weapon\n| Arg2Desc = The weapon\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canPickup\n| Arg1Type = boolean\n| Arg1Desc = Whether it can be picked up.\n\n}}",
            "timestamp": "2020-07-23 18:07:53"
        }
    },
    "Hooks/Server/PlayerPickupDarkRPWeapon": {
        "en": {
            "content": "[[Category:Hooks|PlayerPickupDarkRPWeapon]]\n[[Category:Serverside|PlayerPickupDarkRPWeapon]]\n{{Lua_hook |\n    hook_name   = PlayerPickupDarkRPWeapon |\n    arguments   = {{Type|Player}} ply, {{Type|Entity}} spawned_weapon, {{Type|Weapon}} real_weapon |\n    description = When a player picks up a spawned_weapon. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} ShouldntContinue |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who dropped the weapon.\n\n| Arg2Name = spawned_weapon\n| Arg2Type = Entity\n| Arg2Desc = The spawned_weapon created from the weapon that is dropped.\n\n| Arg3Name = real_weapon\n| Arg3Type = Weapon\n| Arg3Desc = The actual weapon that will be used by the player.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = ShouldntContinue\n| Arg1Type = boolean\n| Arg1Desc = Whether weapon should be picked up or not.\n\n}}",
            "timestamp": "2020-08-26 18:40:59"
        }
    },
    "Hooks/Server/PlayerWalletChanged": {
        "en": {
            "content": "<div>\n<div style=\"position:relative;top:-52px;margin-bottom: -40px;float:right;text-align:right;padding:2px;line-height:11px; margin-top:5px;border:0;width:100%\">[[File:Jarvis-flag_8010.png]] [[Main_Page|'''English''']]  [[File:Russia-flag.png]] [[Main_Page:ru|'''\u0420\u0443\u0441\u0441\u043a\u0438\u0439''']] [[File:France-flag.png]] [[Main_Page:fr|'''Fran\u00e7ais''']]</div>\n\n{{TOC rightNew}}\n{{CatStartNewMain|About DarkRP}}\n<div>\n<div style=\"padding:3px; border-width:1px; border-radius:0px; border-left:3px #4dfa73 solid; background:#4dfa73; float:center; margin:-10px; padding-left:9px;\">\n<b>[https://github.com/FPtje/DarkRP Download the latest DarkRP!]</b>\n</div><br />\nDarkRP - a game mode for the popular game Garry's Mod with the idea of a simulation of urban life. You could become a gangster and rob people or perhaps become a police officer to protect the town from outlaws. You could open a gun shop or a pizzeria where you sell the most delicious food in town. Or you can become the mayor and manage the city, namely the police, urban economies and licensing people. Read more [[DarkRP|here]].<br><br>\n{{ButtonMainGreen|Bug Reports|Workshop Download|Official Discord}}\n</div>\n\n<div>\n{{CatStartNewMoreCategory|Lua Scripting}}\n{{CatItemNew|Gmodflatblack.png\u200e|:Category:Functions|Functions|Functions available in DarkRP}}\n{{CatItemNew|Gmodflatblack.png|:Category:Hooks|Hooks|Hooks available in DarkRP}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:CustomJobFields|Custom job fields|The customization fields of custom jobs}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:CustomShipmentFields|Custom shipment fields|The customization fields of custom shipments}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:CustomEntityFields|Custom entity fields|The customization fields of custom entities}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:Categories|Custom Categories|The customization of categories in DarkRP 2.6.1}}\n|}\n</div>\n\n<div>\n{{CatStartNewMoreCategory|Tutorials}}\n===Information===\n{{CatItemNew|Book-Open-48.png\u200e|MigratingTo2.5.0|Migrating To 2.5.0|Migrating from DarkRP 2.4.3 to 2.5.0 or later.}}\n{{CatItemNew|Book-Open-48.png\u200e|DarkRP:Console Commands|Console Commands|All of DarkRP's console commands.}}\n{{CatItemNew|Book-Open-48.png\u200e|DarkRP:FAQ|FAQ|Excessively Asked Questions.}}\n|}\n\n{{CatStartNewMoreCategory|Programming}}\n===Modding - Beginners===\n{{CatItemNew|Document-Settings-01-48.png\u200e|DarkRP:ModifyingDarkRP|Modifying DarkRP|How to modify DarkRP without editing core files.}}\n{{CatItemNew|Document-Settings-01-48.png\u200e|Creating_modules|Creating DarkRP modules|How to make modules for DarkRP}}\n{{CatItemNew|Meeting-48.png\u200e|Donator Job configuration|Donator jobs|How to make donator only jobs for your server}}\n{{CatItemNew|Meeting-48.png\u200e|Donator Entities|Donator entities|How to make donator only entities for your server}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Shipments|How to make shipments|This is the third part in my series of DarkRP tutorials.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Jobs|How to make jobs|Another job making guide.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Agendas|Custom Agendas|Tutorial on creating custom agendas.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Door Groups|Custom Door Teams|Tutorial on creating custom door teams.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Vehicles|Buyable Vehicles|Tutorial on allowing people to buy vehicles.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Ammo|Custom Ammo|Tutorial on adding your own ammo types.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:SettingCPTeams|Setting CPs|Tutorial on how to allow certain teams to wanted/warrant}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Factions|Custom factions|Read tutorial on creating custom factions with attributes}}\n{{CatItemNew|Meeting-48.png|LUA:Remove FAdmin|Remove FAdmin|Removing/disabling FAdmin}}\n|-\n|\n===Modding - Advanced & Professional===\n{{CatItemNew|Meeting-48.png|DarkRP:Group Chat|Group Chats|Tutorial on editing/creating group chats.}}\n{{CatItemNew|Meeting-48.png|LUA:Custom Money Printer|Custom Money Printer|How to make your own money printer.}}\n{{CatItemNew|Meeting-48.png|LUA:DarkRP Chat Command|DarkRP Chat Command|Adding a chat command that creates cash.}}\n{{CatItemNew|Meeting-48.png|LUA:Pay Day Baton|Pay Day Baton|How to make a baton that forces a pay day to his/her victim.}}\n{{CatItemNew|Meeting-48.png|LUA:Demote Upon Death|Demote Upon Death|Demote a player from a team after dying.}}\n{{CatItemNew|Meeting-48.png|LUA:Modifying F4|Modifying F4|Modifying the F4 menu}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:Functions|Old Functions|Old functions in DarkRP 2.4.3 and below}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:Hooks|Old Hooks|Old hooks in DarkRP 2.4.3 and below}}\n|}\n</div>\n__NOTOC__\n</div>",
            "timestamp": "2021-11-13 02:43:06"
        }
    },
    "Hooks/Server/PostPlayerSay": {
        "en": {
            "content": "[[Category:Hooks|PostPlayerSay]]\n[[Category:Serverside|PostPlayerSay]]\n{{Lua_hook |\n    hook_name   = PostPlayerSay |\n    arguments   = {{Type|Player}} ply, {{Type|string}} text, {{Type|boolean}} teamonly, {{Type|boolean}} dead |\n    description = Called after a player has said something. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who spoke.\n\n| Arg2Name = text\n| Arg2Type = string\n| Arg2Desc = The thing they said.\n\n| Arg3Name = teamonly\n| Arg3Type = boolean\n| Arg3Desc = Whether they said it to their team only.\n\n| Arg4Name = dead\n| Arg4Type = boolean\n| Arg4Desc = Whether they are dead.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:41:41"
        }
    },
    "Hooks/Server/agendaUpdated": {
        "en": {
            "content": "[[Category:Hooks|agendaUpdated]]\n[[Category:Serverside|agendaUpdated]]\n{{Lua_hook |\n    hook_name   = agendaUpdated |\n    arguments   = {{Type|Player}} ply, {{Type|table}} agenda, {{Type|string}} text |\n    description = When the agenda is updated. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|string}} text |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who changed the agenda. Warning: can be nil!\n\n| Arg2Name = agenda\n| Arg2Type = table\n| Arg2Desc = Agenda table (also holds the previous text).\n\n| Arg3Name = text\n| Arg3Type = string\n| Arg3Desc = The text the player wants to set the agenda to.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = text\n| Arg1Type = string\n| Arg1Desc = An override for the text.\n\n}}\n\n== Example Code ==\n___________________________________________________________________________________________\n\n hook.Add(\"agendaUpdated\", \"updateagenda\", function(ply, agenda, text)\n     print(ply.. \" \" .. \"updated the agenda!\")\n end)\n\n___________________________________________________________________________________________\n\nResult: Quang updated the agenda!",
            "timestamp": "2020-09-22 16:28:03"
        }
    },
    "Hooks/Server/calculateNPCKillPay": {
        "en": {
            "content": "[[Category:Hooks|calculateNPCKillPay]]\n[[Category:Serverside|calculateNPCKillPay]]\n{{Lua_hook |\n    hook_name   = calculateNPCKillPay |\n    arguments   = {{Type|Player}} ply, {{Type|Entity}} npc |\n    description = How much a player should profit from killing a NPC |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|number}} total |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who killed the NPC.\n\n| Arg2Name = npc\n| Arg2Type = Entity\n| Arg2Desc = The NPC that they killed.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = total\n| Arg1Type = number\n| Arg1Desc = How much money they should earn.\n\n}}",
            "timestamp": "2020-08-26 18:48:13"
        }
    },
    "Hooks/Server/canAdvert": {
        "en": {
            "content": "[[Category:Hooks|canAdvert]]\n[[Category:Serverside|canAdvert]]\n{{Lua_hook |\n    hook_name   = canAdvert |\n    arguments   = {{Type|Player}} player, {{Type|table}} arguments |\n    description = Whether someone can place an advertisement billboard. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} canAdvert, {{Type|string}} message |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = player\n| Arg1Type = Player\n| Arg1Desc = The player trying to advertise.\n\n| Arg2Name = arguments\n| Arg2Type = table\n| Arg2Desc = The advertisement itself.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canAdvert\n| Arg1Type = boolean\n| Arg1Desc = A yes or no as to whether the player can place the billboard.\n\n| Arg2Name = message\n| Arg2Type = string\n| Arg2Desc = The message that is shown when they can't place the billboard.\n\n}}",
            "timestamp": "2020-08-26 18:39:05"
        }
    },
    "Hooks/Server/canArrest": {
        "en": {
            "content": "[[Category:Hooks|canArrest]]\n[[Category:Serverside|canArrest]]\n{{Lua_hook |\n    hook_name   = canArrest |\n    arguments   = {{Type|Player}} arrester, {{Type|Player}} arrestee |\n    description = Whether someone can arrest another player. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} canArrest, {{Type|string}} message |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = arrester\n| Arg1Type = Player\n| Arg1Desc = The player trying to arrest someone.\n\n| Arg2Name = arrestee\n| Arg2Type = Player\n| Arg2Desc = The player being arrested.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canArrest\n| Arg1Type = boolean\n| Arg1Desc = A yes or no as to whether the arrester can arrest the arestee.\n\n| Arg2Name = message\n| Arg2Type = string\n| Arg2Desc = The message that is shown when they can't arrest the player.\n\n}}",
            "timestamp": "2020-08-26 18:37:46"
        }
    },
    "Hooks/Server/canChangeJob": {
        "en": {
            "content": "[[Category:Hooks|canChangeJob]]\n[[Category:Serverside|canChangeJob]]\n{{Lua_hook |\n    hook_name   = canChangeJob |\n    arguments   = {{Type|Player}} ply, {{Type|string}} job |\n    description = Whether a player can change their job. NOTE: This is only for the /job comand! The hook for changing to a pre-existing job is playerCanChangeTeam. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} canChangeJob, {{Type|string}} message, {{Type|string}} replace |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player whom is to change their job.\n\n| Arg2Name = job\n| Arg2Type = string\n| Arg2Desc = The job name (what the player entered in the /job command).\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canChangeJob\n| Arg1Type = boolean\n| Arg1Desc = Whether the player can change their job name (doesn't change their team).\n\n| Arg2Name = message\n| Arg2Type = string\n| Arg2Desc = The message to show when the player cannot take the job. Only useful when canChangeJob is false.\n\n| Arg3Name = replace\n| Arg3Type = string\n| Arg3Desc = A replacement for the job name. Only useful when canChangeJob is true.\n\n}}",
            "timestamp": "2020-08-26 18:39:23"
        }
    },
    "Hooks/Server/canChatCommand": {
        "en": {
            "content": "[[Category:Hooks|canChatCommand]]\n[[Category:Serverside|canChatCommand]]\n{{Lua_hook |\n    hook_name   = canChatCommand |\n    arguments   = {{Type|Player}} ply, {{Type|string}} command, {{Type|string}} arguments |\n    description = Called when a player tries to run any chat command or uses the DarkRP console command.  |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} canChatCommand |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who spoke.\n\n| Arg2Name = command\n| Arg2Type = string\n| Arg2Desc = The thing they said.\n\n| Arg3Name = arguments\n| Arg3Type = string\n| Arg3Desc = The arguments of the chat command, given as one string.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canChatCommand\n| Arg1Type = boolean\n| Arg1Desc = Whether the player is allowed to run the chat command.\n\n}}",
            "timestamp": "2020-08-26 18:45:22"
        }
    },
    "Hooks/Server/canChatSound": {
        "en": {
            "content": "[[Category:Hooks|canChatSound]]\n[[Category:Serverside|canChatSound]]\n{{Lua_hook |\n    hook_name   = canChatSound |\n    arguments   = {{Type|Player}} ply, {{Type|string}} chatPhrase, {{Type|string}} chatText |\n    description = Whether a chat sound can be played. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} canChatSound |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who triggered the chat sound.\n\n| Arg2Name = chatPhrase\n| Arg2Type = string\n| Arg2Desc = The chat sound phrase that has been detected.\n\n| Arg3Name = chatText\n| Arg3Type = string\n| Arg3Desc = The whole chat text the player sent that contains the chat sound phrase.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canChatSound\n| Arg1Type = boolean\n| Arg1Desc = False if the chat sound should not be played.\n\n}}",
            "timestamp": "2020-08-26 18:43:40"
        }
    },
    "Hooks/Server/canDarkRPUse": {
        "en": {
            "content": "[[Category:Hooks|canDarkRPUse]]\n[[Category:Serverside|canDarkRPUse]]\n{{Lua_hook |\n    hook_name   = canDarkRPUse |\n    arguments   = {{Type|Player}} ply, {{Type|Entity}} entity, {{Type|Player}} caller |\n    description = When a player uses an entity. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} canUse, {{Type|string}} reason |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who tries to use the entity.\n\n| Arg2Name = entity\n| Arg2Type = Entity\n| Arg2Desc = The actual entity the player attempts to use.\n\n| Arg3Name = caller\n| Arg3Type = Player\n| Arg3Desc = The entity that directly triggered the input.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canUse\n| Arg1Type = boolean\n| Arg1Desc = Whether the entity should be used or not.\n\n| Arg2Name = reason\n| Arg2Type = string\n| Arg2Desc = Why the entity cannot be used.\n\n}}",
            "timestamp": "2020-08-26 18:44:00"
        }
    },
    "Hooks/Server/canDemote": {
        "en": {
            "content": "[[Category:Hooks|canDemote]]\n[[Category:Serverside|canDemote]]\n{{Lua_hook |\n    hook_name   = canDemote |\n    arguments   = {{Type|Player}} ply, {{Type|Player}} target, {{Type|string}} reason |\n    description = Whether a player can demote another player. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} canDemote, {{Type|string}} message |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who wants to demote.\n\n| Arg2Name = target\n| Arg2Type = Player\n| Arg2Desc = The player whom is to be demoted.\n\n| Arg3Name = reason\n| Arg3Type = string\n| Arg3Desc = The reason provided for the demote.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canDemote\n| Arg1Type = boolean\n| Arg1Desc = Whether the player can change demote the target.\n\n| Arg2Name = message\n| Arg2Type = string\n| Arg2Desc = The message to show when the player cannot demote the other player. Only useful when canDemote is false.\n\n}}",
            "timestamp": "2020-08-26 18:46:41"
        }
    },
    "Hooks/Server/canDropPocketItem": {
        "en": {
            "content": "[[Category:Hooks|canDropPocketItem]]\n[[Category:Serverside|canDropPocketItem]]\n{{Lua_hook |\n    hook_name   = canDropPocketItem |\n    arguments   = {{Type|Player}} ply, {{Type|table}} item, {{Type|table}} serialized |\n    description = Whether someone is allowed to drop something from their pocket. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} answer, {{Type|string}} message |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The pocket holder.\n\n| Arg2Name = item\n| Arg2Type = table\n| Arg2Desc = The pocket item's index in the pocket.\n\n| Arg3Name = serialized\n| Arg3Type = table\n| Arg3Desc = The pocket item.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = answer\n| Arg1Type = boolean\n| Arg1Desc = Whether the item can be dropped.\n\n| Arg2Name = message\n| Arg2Type = string\n| Arg2Desc = The message to send to the player when the answer is false.\n\n}}",
            "timestamp": "2020-08-26 18:47:02"
        }
    },
    "Hooks/Server/canDropWeapon": {
        "en": {
            "content": "[[Category:Hooks|canDropWeapon]]\n[[Category:Serverside|canDropWeapon]]\n{{Lua_hook |\n    hook_name   = canDropWeapon |\n    arguments   = {{Type|Player}} ply, {{Type|Weapon}} weapon |\n    description = Whether a player can drop a certain weapon. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} canDrop |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who wants to drop the weapon.\n\n| Arg2Name = weapon\n| Arg2Type = Weapon\n| Arg2Desc = The weapon the player wants to drop.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canDrop\n| Arg1Type = boolean\n| Arg1Desc = Whether the player can drop the weapon.\n\n}}",
            "timestamp": "2020-08-26 18:43:21"
        }
    },
    "Hooks/Server/canEarnNPCKillPay": {
        "en": {
            "content": "[[Category:Hooks|canEarnNPCKillPay]]\n[[Category:Serverside|canEarnNPCKillPay]]\n{{Lua_hook |\n    hook_name   = canEarnNPCKillPay |\n    arguments   = {{Type|Player}} ply, {{Type|Entity}} npc |\n    description = If a player should profit from killing a NPC |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} answer |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who killed the NPC.\n\n| Arg2Name = npc\n| Arg2Type = Entity\n| Arg2Desc = The NPC that they killed.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = answer\n| Arg1Type = boolean\n| Arg1Desc = Whether the player can earn money.\n\n}}",
            "timestamp": "2020-08-26 18:44:48"
        }
    },
    "Hooks/Server/canEditLaws": {
        "en": {
            "content": "[[Category:Hooks|canEditLaws]]\n[[Category:Serverside|canEditLaws]]\n{{Lua_hook |\n    hook_name   = canEditLaws |\n    arguments   = {{Type|Player}} player, {{Type|string}} action, {{Type|table}} arguments |\n    description = Whether someone can edit laws. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} canEdit, {{Type|string}} message |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = player\n| Arg1Type = Player\n| Arg1Desc = The player trying to edit laws.\n\n| Arg2Name = action\n| Arg2Type = string\n| Arg2Desc = How the player is trying to edit laws.\n\n| Arg3Name = arguments\n| Arg3Type = table\n| Arg3Desc = Arguments related to editing laws.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canEdit\n| Arg1Type = boolean\n| Arg1Desc = A yes or no as to whether the player can edit the law.\n\n| Arg2Name = message\n| Arg2Type = string\n| Arg2Desc = The message that is shown when they can't edit the law.\n\n}}",
            "timestamp": "2020-08-26 18:37:54"
        }
    },
    "Hooks/Server/canGoAFK": {
        "en": {
            "content": "[[Category:Hooks|canGoAFK]]\n[[Category:Serverside|canGoAFK]]\n{{Lua_hook |\n    hook_name   = canGoAFK |\n    arguments   = {{Type|Player}} ply, {{Type|boolean}} afk |\n    description = When a player can MANUALLY start being AFK by entering the chat command. Note: this hook does NOT get called when a player is set to AFK automatically! That hook will not be added, because I don't want asshole server owners to make AFK rules not apply to admins. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} canGoAFK |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player.\n\n| Arg2Name = afk\n| Arg2Type = boolean\n| Arg2Desc = True when the player starts being AFK, false when the player stops being AFK.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canGoAFK\n| Arg1Type = boolean\n| Arg1Desc = Whether the player is allowed to go AFK\n\n}}",
            "timestamp": "2020-08-26 18:48:44"
        }
    },
    "Hooks/Server/canPocket": {
        "en": {
            "content": "[[Category:Hooks|canPocket]]\n[[Category:Serverside|canPocket]]\n{{Lua_hook |\n    hook_name   = canPocket |\n    arguments   = {{Type|Player}} ply, {{Type|Entity}} item |\n    description = Whether a player can pocket a certain item. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} answer, {{Type|string}} message |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player.\n\n| Arg2Name = item\n| Arg2Type = Entity\n| Arg2Desc = The item to be pocketed.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = answer\n| Arg1Type = boolean\n| Arg1Desc = Whether the entity can be pocketed.\n\n| Arg2Name = message\n| Arg2Type = string\n| Arg2Desc = The message to send to the player when the answer is false.\n\n}}",
            "timestamp": "2020-08-26 18:45:00"
        }
    },
    "Hooks/Server/canPropertyTax": {
        "en": {
            "content": "[[Category:Hooks|canPropertyTax]]\n[[Category:Serverside|canPropertyTax]]\n{{Lua_hook |\n    hook_name   = canPropertyTax |\n    arguments   = {{Type|Player}} ply, {{Type|number}} tax |\n    description = Called right before a player's property is taxed. This hook differs from onPropertyTax in that onPropertyTax is called AFTER the taxing. With this hook, one can influence the taxing process. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} shouldTax, {{Type|number}} taxOverride |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player whose property will be taxed.\n\n| Arg2Name = tax\n| Arg2Type = number\n| Arg2Desc = The amount of money that will be taxed (unless overridden by this hook).\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = shouldTax\n| Arg1Type = boolean\n| Arg1Desc = Return false here to prevent the doors from being taxed.\n\n| Arg2Name = taxOverride\n| Arg2Type = number\n| Arg2Desc = Override the tax amount.\n\n}}",
            "timestamp": "2020-08-26 18:37:50"
        }
    },
    "Hooks/Server/canSeeLogMessage": {
        "en": {
            "content": "[[Category:Hooks|canSeeLogMessage]]\n[[Category:Serverside|canSeeLogMessage]]\n{{Lua_hook |\n    hook_name   = canSeeLogMessage |\n    arguments   = {{Type|Player}} ply, {{Type|string}} message, {{Type|Color}} color |\n    description = Whether a player can see a DarkRP log message in the console. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} canHear |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player.\n\n| Arg2Name = message\n| Arg2Type = string\n| Arg2Desc = The log message.\n\n| Arg3Name = color\n| Arg3Type = Color\n| Arg3Desc = The color of the message.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canHear\n| Arg1Type = boolean\n| Arg1Desc = Whether the player can see the log message.\n\n}}",
            "timestamp": "2020-08-26 18:42:32"
        }
    },
    "Hooks/Server/canSleep": {
        "en": {
            "content": "[[Category:Hooks|canSleep]]\n[[Category:Serverside|canSleep]]\n{{Lua_hook |\n    hook_name   = canSleep |\n    arguments   = {{Type|Player}} player, {{Type|boolean}} force |\n    description = Whether someone is allowed to sleep. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} canSleep, {{Type|string}} message |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = player\n| Arg1Type = Player\n| Arg1Desc = The player trying to sleep.\n\n| Arg2Name = force\n| Arg2Type = boolean\n| Arg2Desc = Whether the sleep is being forced.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canSleep\n| Arg1Type = boolean\n| Arg1Desc = A yes or no as to whether the player can sleep.\n\n| Arg2Name = message\n| Arg2Type = string\n| Arg2Desc = The message that is shown when they can't sleep.\n\n}}",
            "timestamp": "2020-08-26 18:42:12"
        }
    },
    "Hooks/Server/canStartVote": {
        "en": {
            "content": "[[Category:Hooks|canStartVote]]\n[[Category:Serverside|canStartVote]]\n{{Lua_hook |\n    hook_name   = canStartVote |\n    arguments   = {{Type|table}} vote |\n    description = Whether the vote can be started or not. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} canStartVote, {{Type|boolean}} callSuccess, {{Type|string}} message |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = vote\n| Arg1Type = table\n| Arg1Desc = A table that contains information about the vote.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canStartVote\n| Arg1Type = boolean\n| Arg1Desc = Whether the vote can be started or not.\n\n| Arg2Name = callSuccess\n| Arg2Type = boolean\n| Arg2Desc = True if the callback for a successful vote should be called, false if the callback for a failed vote should be called. Only works when canStartVote is false.\n\n| Arg3Name = message\n| Arg3Type = string\n| Arg3Desc = The message to show when the vote cannot be started. Only works when callSuccess is false.\n\n}}",
            "timestamp": "2020-08-26 18:48:32"
        }
    },
    "Hooks/Server/canTax": {
        "en": {
            "content": "[[Category:Hooks|canTax]]\n[[Category:Serverside|canTax]]\n{{Lua_hook |\n    hook_name   = canTax |\n    arguments   = {{Type|Player}} ply, {{Type|number}} tax |\n    description = Called before a player pays taxes. This hook differs from onPaidTax in that this hook can prevent the taxing and change the tax amount. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} shouldTax, {{Type|number}} tax |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who was taxed.\n\n| Arg2Name = tax\n| Arg2Type = number\n| Arg2Desc = The amount of money that is about to be taxed from the player.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = shouldTax\n| Arg1Type = boolean\n| Arg1Desc = Whether the player is to be taxed. Return false here to prevent the player from being taxed.\n\n| Arg2Name = tax\n| Arg2Type = number\n| Arg2Desc = Overrides the amount of money that is taxed.\n\n}}",
            "timestamp": "2020-08-26 18:37:32"
        }
    },
    "Hooks/Server/canTaxEntity": {
        "en": {
            "content": "[[Category:Hooks|canTaxEntity]]\n[[Category:Serverside|canTaxEntity]]\n{{Lua_hook |\n    hook_name   = canTaxEntity |\n    arguments   = {{Type|Player}} ply, {{Type|Entity}} ent |\n    description = Called right before a player's property is taxed. Decides per entity whether it can be taxed. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} shouldTax |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player whose property will be taxed.\n\n| Arg2Name = ent\n| Arg2Type = Entity\n| Arg2Desc = The door or vehicle that is to be taxed\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = shouldTax\n| Arg1Type = boolean\n| Arg1Desc = Return false here to prevent this specific entity from being taxed.\n\n}}",
            "timestamp": "2020-08-26 18:42:51"
        }
    },
    "Hooks/Server/canUnarrest": {
        "en": {
            "content": "[[Category:Hooks|canUnarrest]]\n[[Category:Serverside|canUnarrest]]\n{{Lua_hook |\n    hook_name   = canUnarrest |\n    arguments   = {{Type|Player}} unarrester, {{Type|Player}} unarrestee |\n    description = Whether someone can unarrest another player. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} canUnarrest, {{Type|string}} message |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = unarrester\n| Arg1Type = Player\n| Arg1Desc = The player trying to unarrest someone.\n\n| Arg2Name = unarrestee\n| Arg2Type = Player\n| Arg2Desc = The player being unarrested.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canUnarrest\n| Arg1Type = boolean\n| Arg1Desc = A yes or no as to whether the player can unarrest the other player.\n\n| Arg2Name = message\n| Arg2Type = string\n| Arg2Desc = The message that is shown when they can't unarrest the player.\n\n}}",
            "timestamp": "2020-08-26 18:43:29"
        }
    },
    "Hooks/Server/canVote": {
        "en": {
            "content": "[[Category:Hooks|canVote]]\n[[Category:Serverside|canVote]]\n{{Lua_hook |\n    hook_name   = canVote |\n    arguments   = {{Type|Player}} ply, {{Type|table}} vote |\n    description = Whether a player can cast a vote. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} canVote, {{Type|string}} message |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player.\n\n| Arg2Name = vote\n| Arg2Type = table\n| Arg2Desc = Table containing all information about the vote.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canVote\n| Arg1Type = boolean\n| Arg1Desc = Whether the player can vote.\n\n| Arg2Name = message\n| Arg2Type = string\n| Arg2Desc = The message to show when the player cannot vote. Only useful when canVote is false.\n\n}}",
            "timestamp": "2020-08-26 18:39:46"
        }
    },
    "Hooks/Server/demoteTeam": {
        "en": {
            "content": "[[Category:Hooks|demoteTeam]]\n[[Category:Serverside|demoteTeam]]\n{{Lua_hook |\n    hook_name   = demoteTeam |\n    arguments   = {{Type|Player}} target |\n    description = The team the player is to be demoted to instead of the default team. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|number}} demoteTeam |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = target\n| Arg1Type = Player\n| Arg1Desc = The player whom is to be demoted.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = demoteTeam\n| Arg1Type = number\n| Arg1Desc = The team the player is to be demoted to.\n\n}}",
            "timestamp": "2020-08-26 18:46:56"
        }
    },
    "Hooks/Server/getDoorCost": {
        "en": {
            "content": "[[Category:Hooks|getDoorCost]]\n[[Category:Serverside|getDoorCost]]\n{{Lua_hook |\n    hook_name   = getDoorCost |\n    arguments   = {{Type|Player}} ply, {{Type|Entity}} ent |\n    description = Get the cost of a door. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|number}} cost |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who has the intention to purchase the door.\n\n| Arg2Name = ent\n| Arg2Type = Entity\n| Arg2Desc = The door\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = cost\n| Arg1Type = number\n| Arg1Desc = The price of the door.\n\n}}",
            "timestamp": "2020-08-26 18:42:44"
        }
    },
    "Hooks/Server/getVehicleCost": {
        "en": {
            "content": "[[Category:Hooks|getVehicleCost]]\n[[Category:Serverside|getVehicleCost]]\n{{Lua_hook |\n    hook_name   = getVehicleCost |\n    arguments   = {{Type|Player}} ply, {{Type|Entity}} ent |\n    description = Get the cost of a vehicle. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|number}} cost |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who has the intention to purchase the vehicle.\n\n| Arg2Name = ent\n| Arg2Type = Entity\n| Arg2Desc = The vehicle\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = cost\n| Arg1Type = number\n| Arg1Desc = The price of the vehicle.\n\n}}",
            "timestamp": "2020-08-26 18:45:30"
        }
    },
    "Hooks/Server/getVoteResults": {
        "en": {
            "content": "[[Category:Hooks|getVoteResults]]\n[[Category:Serverside|getVoteResults]]\n{{Lua_hook |\n    hook_name   = getVoteResults |\n    arguments   = {{Type|table}} vote, {{Type|number}} yea, {{Type|number}} nay |\n    description = Override the results of a vote. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|number}} result |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = vote\n| Arg1Type = table\n| Arg1Desc = A table that contains information about the vote.\n\n| Arg2Name = yea\n| Arg2Type = number\n| Arg2Desc = The amount of people that voted yes.\n\n| Arg3Name = nay\n| Arg3Type = number\n| Arg3Desc = The amount of people that voted no.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = result\n| Arg1Type = number\n| Arg1Desc = The result of the vote. Return 1 for win, -1 for lose, 0 for undecided.\n\n}}",
            "timestamp": "2020-08-26 18:43:43"
        }
    },
    "Hooks/Server/hideSellDoorMessage": {
        "en": {
            "content": "[[Category:Hooks|hideSellDoorMessage]]\n[[Category:Serverside|hideSellDoorMessage]]\n{{Lua_hook |\n    hook_name   = hideSellDoorMessage |\n    arguments   = {{Type|Player}} ply, {{Type|Player}} ent |\n    description = Whether to hide the door/vehicle sold notification |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} hide |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who sold the door or vehicle.\n\n| Arg2Name = ent\n| Arg2Type = Player\n| Arg2Desc = The entity that was sold.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = hide\n| Arg1Type = boolean\n| Arg1Desc = Whether to hide the notification.\n\n}}",
            "timestamp": "2020-08-26 18:46:21"
        }
    },
    "Hooks/Server/hungerUpdate": {
        "en": {
            "content": "[[Category:Hooks|hungerUpdate]]\n[[Category:Serverside|hungerUpdate]]\n{{Lua_hook |\n    hook_name   = hungerUpdate |\n    arguments   = {{Type|Player}} ply, {{Type|number}} energy |\n    description = Called every 10 seconds for every player when hungermod is on. This updates the player's hunger level. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} override |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who might be slightly more hungery.\n\n| Arg2Name = energy\n| Arg2Type = number\n| Arg2Desc = The energy the player has left.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = override\n| Arg1Type = boolean\n| Arg1Desc = Override the default behaviour of substracting some and killing the player when starving.\n\n}}",
            "timestamp": "2020-08-26 18:47:01"
        }
    },
    "Hooks/Server/lotteryEnded": {
        "en": {
            "content": "[[Category:Hooks|lotteryEnded]]\n[[Category:Serverside|lotteryEnded]]\n{{Lua_hook |\n    hook_name   = lotteryEnded |\n    arguments   = {{Type|table}} participants, {{Type|Player}} chosen, {{Type|number}} amount |\n    description = When a lottery has ended. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = participants\n| Arg1Type = table\n| Arg1Desc = The participants of the lottery. An empty table when no one entered the lottery.\n\n| Arg2Name = chosen\n| Arg2Type = Player\n| Arg2Desc = The winner of the lottery.\n\n| Arg3Name = amount\n| Arg3Type = number\n| Arg3Desc = The amount won by the winner.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:42:02"
        }
    },
    "Hooks/Server/lotteryStarted": {
        "en": {
            "content": "[[Category:Hooks|lotteryStarted]]\n[[Category:Serverside|lotteryStarted]]\n{{Lua_hook |\n    hook_name   = lotteryStarted |\n    arguments   = {{Type|Player}} ply, {{Type|number}} price |\n    description = When a lottery has started. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who started the lottery.\n\n| Arg2Name = price\n| Arg2Type = number\n| Arg2Desc = The amount of money people have to pay to enter.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:42:18"
        }
    },
    "Hooks/Server/moneyPrinterCatchFire": {
        "en": {
            "content": "[[Category:Hooks|moneyPrinterCatchFire]]\n[[Category:Serverside|moneyPrinterCatchFire]]\n{{Lua_hook |\n    hook_name   = moneyPrinterCatchFire |\n    arguments   = {{Type|Entity}} moneyprinter |\n    description = Called when a money printer is about to catch fire. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} prevent |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = moneyprinter\n| Arg1Type = Entity\n| Arg1Desc = The money printer that is about to catch fire\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = prevent\n| Arg1Type = boolean\n| Arg1Desc = Set to true to prevent the money printer from catching fire\n\n}}",
            "timestamp": "2020-08-26 18:48:04"
        }
    },
    "Hooks/Server/moneyPrinterPrintMoney": {
        "en": {
            "content": "[[Category:Hooks|moneyPrinterPrintMoney]]\n[[Category:Serverside|moneyPrinterPrintMoney]]\n{{Lua_hook |\n    hook_name   = moneyPrinterPrintMoney |\n    arguments   = {{Type|Entity}} moneyprinter, {{Type|number}} amount |\n    description = Called when a money printer is about to print money. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} prevent, {{Type|number}} amount |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = moneyprinter\n| Arg1Type = Entity\n| Arg1Desc = The money printer that is about to print money\n\n| Arg2Name = amount\n| Arg2Type = number\n| Arg2Desc = The amount to be printed\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = prevent\n| Arg1Type = boolean\n| Arg1Desc = Set to true to prevent the money printer from printing the money.\n\n| Arg2Name = amount\n| Arg2Type = number\n| Arg2Desc = Optionally override the amount of money that will be printed.\n\n}}",
            "timestamp": "2020-08-26 18:48:29"
        }
    },
    "Hooks/Server/moneyPrinterPrinted": {
        "en": {
            "content": "[[Category:Hooks|moneyPrinterPrinted]]\n[[Category:Serverside|moneyPrinterPrinted]]\n{{Lua_hook |\n    hook_name   = moneyPrinterPrinted |\n    arguments   = {{Type|Entity}} moneyprinter, {{Type|Entity}} moneybag |\n    description = Called after a money printer is has printed money. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = moneyprinter\n| Arg1Type = Entity\n| Arg1Desc = The money printer\n\n| Arg2Name = moneybag\n| Arg2Type = Entity\n| Arg2Desc = The moneybag produced by the printer.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:43:15"
        }
    },
    "Hooks/Server/onAllowedToOwnAdded": {
        "en": {
            "content": "[[Category:Hooks|onAllowedToOwnAdded]]\n[[Category:Serverside|onAllowedToOwnAdded]]\n{{Lua_hook |\n    hook_name   = onAllowedToOwnAdded |\n    arguments   = {{Type|Player}} ply, {{Type|Entity}} ent, {{Type|Player}} target |\n    description = When a player adds a co-owner to a door. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} allowed |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who adds the co-owner.\n\n| Arg2Name = ent\n| Arg2Type = Entity\n| Arg2Desc = The door.\n\n| Arg3Name = target\n| Arg3Type = Player\n| Arg3Desc = The target who will be allowed to own the door.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = allowed\n| Arg1Type = boolean\n| Arg1Desc = Whether the player is allowed to add this player as co-owner.\n\n}}",
            "timestamp": "2020-08-26 18:38:23"
        }
    },
    "Hooks/Server/onAllowedToOwnRemoved": {
        "en": {
            "content": "[[Category:Hooks|onAllowedToOwnRemoved]]\n[[Category:Serverside|onAllowedToOwnRemoved]]\n{{Lua_hook |\n    hook_name   = onAllowedToOwnRemoved |\n    arguments   = {{Type|Player}} ply, {{Type|Entity}} ent, {{Type|Player}} target |\n    description = When a player removes a co-owner to a door. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} allowed |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who removes the co-owner.\n\n| Arg2Name = ent\n| Arg2Type = Entity\n| Arg2Desc = The door.\n\n| Arg3Name = target\n| Arg3Type = Player\n| Arg3Desc = The target who will not be allowed to own the door anymore.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = allowed\n| Arg1Type = boolean\n| Arg1Desc = Whether the player is allowed to remove this player as co-owner.\n\n}}",
            "timestamp": "2020-08-26 18:37:39"
        }
    },
    "Hooks/Server/onChatCommand": {
        "en": {
            "content": "[[Category:Hooks|onChatCommand]]\n[[Category:Serverside|onChatCommand]]\n{{Lua_hook |\n    hook_name   = onChatCommand |\n    arguments   = {{Type|Player}} ply, {{Type|string}} command, {{Type|string}} arguments, {{Type|table}} return |\n    description = Called after a player has run any chat command or uses the DarkRP console command. Note: the chat command has already been run. Use canChatCommand if you want to stop chat commands from being run. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|string}} overrideText, {{Type|function}} overrideSayFunc |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who spoke.\n\n| Arg2Name = command\n| Arg2Type = string\n| Arg2Desc = The thing they said.\n\n| Arg3Name = arguments\n| Arg3Type = string\n| Arg3Desc = The arguments of the chat command, given either as one string or a table of strings. That depends on whether the command is declared to use table arguments.\n\n| Arg4Name = return\n| Arg4Type = table\n| Arg4Desc = The return value of the chat command function. Should contain a chat text override and/or a say function. See the return values of this hook for a description\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = overrideText\n| Arg1Type = string\n| Arg1Desc = Overrides the text a chat command will put in everyone's chat box. Return nil to not change behaviour.\n\n| Arg2Name = overrideSayFunc\n| Arg2Type = function\n| Arg2Desc = Say functions handle what needs to be said to whom. The say function for PMs for example make sure only the sender and receiver see the message. You can override this behaviour by returning a different say function in this hook. Return nil to not change behaviour.\n\n}}",
            "timestamp": "2020-08-26 18:41:24"
        }
    },
    "Hooks/Server/onChatSound": {
        "en": {
            "content": "[[Category:Hooks|onChatSound]]\n[[Category:Serverside|onChatSound]]\n{{Lua_hook |\n    hook_name   = onChatSound |\n    arguments   = {{Type|Player}} ply, {{Type|string}} chatPhrase, {{Type|string}} chatText |\n    description = When a chat sound is played. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who triggered the chat sound.\n\n| Arg2Name = chatPhrase\n| Arg2Type = string\n| Arg2Desc = The chat sound phrase that was detected.\n\n| Arg3Name = chatText\n| Arg3Type = string\n| Arg3Desc = The whole chat text the player sent that contains the chat sound phrase.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:40:44"
        }
    },
    "Hooks/Server/onDarkRPWeaponDropped": {
        "en": {
            "content": "[[Category:Hooks|onDarkRPWeaponDropped]]\n[[Category:Serverside|onDarkRPWeaponDropped]]\n{{Lua_hook |\n    hook_name   = onDarkRPWeaponDropped |\n    arguments   = {{Type|Player}} ply, {{Type|Entity}} spawned_weapon, {{Type|Weapon}} original_weapon |\n    description = When a player drops a weapon. Use this hook (in combination with PlayerPickupDarkRPWeapon) to store extra information about a weapon. This hook cannot prevent weapon dropping. If you want to prevent weapon dropping, use canDropWeapon instead. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who dropped the weapon.\n\n| Arg2Name = spawned_weapon\n| Arg2Type = Entity\n| Arg2Desc = The spawned_weapon created from the weapon that is dropped.\n\n| Arg3Name = original_weapon\n| Arg3Type = Weapon\n| Arg3Desc = The original weapon from which the spawned_weapon is made.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:45:25"
        }
    },
    "Hooks/Server/onDoorRamUsed": {
        "en": {
            "content": "[[Category:Hooks|onDoorRamUsed]]\n[[Category:Serverside|onDoorRamUsed]]\n{{Lua_hook |\n    hook_name   = onDoorRamUsed |\n    arguments   = {{Type|boolean}} success, {{Type|Player}} ply, {{Type|table}} trace |\n    description = Called when the door ram has been used. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = success\n| Arg1Type = boolean\n| Arg1Desc = Whether the door ram has been successful in ramming.\n\n| Arg2Name = ply\n| Arg2Type = Player\n| Arg2Desc = The player that used the door ram.\n\n| Arg3Name = trace\n| Arg3Type = table\n| Arg3Desc = The trace containing information about the hit position and ram entity.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:48:33"
        }
    },
    "Hooks/Server/onKeysLocked": {
        "en": {
            "content": "[[Category:Hooks|onKeysLocked]]\n[[Category:Serverside|onKeysLocked]]\n{{Lua_hook |\n    hook_name   = onKeysLocked |\n    arguments   = {{Type|Entity}} ent |\n    description = Called when a door or vehicle was locked. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ent\n| Arg1Type = Entity\n| Arg1Desc = The entity that was locked.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:47:26"
        }
    },
    "Hooks/Server/onKeysUnlocked": {
        "en": {
            "content": "[[Category:Hooks|onKeysUnlocked]]\n[[Category:Serverside|onKeysUnlocked]]\n{{Lua_hook |\n    hook_name   = onKeysUnlocked |\n    arguments   = {{Type|Entity}} ent |\n    description = Called when a door or vehicle was unlocked. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ent\n| Arg1Type = Entity\n| Arg1Desc = The entity that was unlocked.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:42:56"
        }
    },
    "Hooks/Server/onNotify": {
        "en": {
            "content": "[[Category:Hooks|onNotify]]\n[[Category:Serverside|onNotify]]\n{{Lua_hook |\n    hook_name   = onNotify |\n    arguments   = {{Type|table}} plys, {{Type|number}} msgType, {{Type|number}} duration, {{Type|string}} message |\n    description = Called when a notification is sent. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} suppress |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = plys\n| Arg1Type = table\n| Arg1Desc = The table recipients of the notification.\n\n| Arg2Name = msgType\n| Arg2Type = number\n| Arg2Desc = The notification type (NOTIFY_ enum)\n\n| Arg3Name = duration\n| Arg3Type = number\n| Arg3Desc = How long the notification should stay on screen.\n\n| Arg4Name = message\n| Arg4Type = string\n| Arg4Desc = The message of the notification.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = suppress\n| Arg1Type = boolean\n| Arg1Desc = Whether to suppress the notification. Return true to suppress.\n\n}}",
            "timestamp": "2020-08-26 18:46:57"
        }
    },
    "Hooks/Server/onPaidTax": {
        "en": {
            "content": "[[Category:Hooks|onPaidTax]]\n[[Category:Serverside|onPaidTax]]\n{{Lua_hook |\n    hook_name   = onPaidTax |\n    arguments   = {{Type|Player}} ply, {{Type|number}} tax, {{Type|number}} wallet |\n    description = Called when a player has paid tax. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who was taxed.\n\n| Arg2Name = tax\n| Arg2Type = number\n| Arg2Desc = The percentage of tax taken from his wallet.\n\n| Arg3Name = wallet\n| Arg3Type = number\n| Arg3Desc = The amount of money the player had before the tax was applied.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:47:05"
        }
    },
    "Hooks/Server/onPlayerChangedName": {
        "en": {
            "content": "[[Category:Hooks|onPlayerChangedName]]\n[[Category:Serverside|onPlayerChangedName]]\n{{Lua_hook |\n    hook_name   = onPlayerChangedName |\n    arguments   = {{Type|Player}} ply, {{Type|string}} oldName, {{Type|string}} newName |\n    description = Called when a player's DarkRP name has been changed. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player.\n\n| Arg2Name = oldName\n| Arg2Type = string\n| Arg2Desc = The old name.\n\n| Arg3Name = newName\n| Arg3Type = string\n| Arg3Desc = The new name.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:41:49"
        }
    },
    "Hooks/Server/onPlayerDemoted": {
        "en": {
            "content": "[[Category:Hooks|onPlayerDemoted]]\n[[Category:Serverside|onPlayerDemoted]]\n{{Lua_hook |\n    hook_name   = onPlayerDemoted |\n    arguments   = {{Type|Player}} source, {{Type|Player}} target, {{Type|string}} reason |\n    description = Called when a player is demoted. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = source\n| Arg1Type = Player\n| Arg1Desc = The player who demoted the target.\n\n| Arg2Name = target\n| Arg2Type = Player\n| Arg2Desc = The player who has been demoted.\n\n| Arg3Name = reason\n| Arg3Type = string\n| Arg3Desc = The reason provided for the demote.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:40:43"
        }
    },
    "Hooks/Server/onPlayerFirstJoined": {
        "en": {
            "content": "[[Category:Hooks|onPlayerFirstJoined]]\n[[Category:Serverside|onPlayerFirstJoined]]\n{{Lua_hook |\n    hook_name   = onPlayerFirstJoined |\n    arguments   = {{Type|Player}} ply, {{Type|table}} data |\n    description = Called when a player joins this server for the first time (i.e. no entry for this player exists in the DarkRP database) |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|table}} data |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player.\n\n| Arg2Name = data\n| Arg2Type = table\n| Arg2Desc = Contains the default wallet, salary and RPName that will be put in the database\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = data\n| Arg1Type = table\n| Arg1Desc = Override the data that is to be put in the database.\n\n}}",
            "timestamp": "2020-08-26 18:38:20"
        }
    },
    "Hooks/Server/onPocketItemAdded": {
        "en": {
            "content": "[[Category:Hooks|onPocketItemAdded]]\n[[Category:Serverside|onPocketItemAdded]]\n{{Lua_hook |\n    hook_name   = onPocketItemAdded |\n    arguments   = {{Type|Player}} ply, {{Type|Entity}} ent, {{Type|table}} serialized |\n    description = Called when an entity is added to the pocket. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The pocket holder.\n\n| Arg2Name = ent\n| Arg2Type = Entity\n| Arg2Desc = The entity.\n\n| Arg3Name = serialized\n| Arg3Type = table\n| Arg3Desc = The serialized version of the pocketed entity.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:40:55"
        }
    },
    "Hooks/Server/onPocketItemDropped": {
        "en": {
            "content": "[[Category:Hooks|onPocketItemDropped]]\n[[Category:Serverside|onPocketItemDropped]]\n{{Lua_hook |\n\thook_name\t= onPocketItemDropped |\n\targuments\t= {{Type|Player}} ply, {{Type|Entity}} ent, {{Type|number}} item, {{Type|number}} id |\n\tdescription\t= Called when the player drops an item from their pocket. This hook internally calls the hook ''onPocketItemRemoved''. |\n\tdeprecated\t=  |\n\tlua_state\t= {{Serverside}} |\n\treturns = {{Type|nil}} |\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-07-23 18:07:58"
        }
    },
    "Hooks/Server/onPocketItemRemoved": {
        "en": {
            "content": "[[Category:Hooks|onPocketItemRemoved]]\n[[Category:Serverside|onPocketItemRemoved]]\n{{Lua_hook |\n    hook_name   = onPocketItemRemoved |\n    arguments   = {{Type|Player}} ply, {{Type|number}} item |\n    description = Called when an item is removed from the pocket. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The pocket holder.\n\n| Arg2Name = item\n| Arg2Type = number\n| Arg2Desc = The index of the pocket item.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:45:13"
        }
    },
    "Hooks/Server/onPropertyTax": {
        "en": {
            "content": "[[Category:Hooks|onPropertyTax]]\n[[Category:Serverside|onPropertyTax]]\n{{Lua_hook |\n    hook_name   = onPropertyTax |\n    arguments   = {{Type|Player}} ply, {{Type|number}} tax, {{Type|boolean}} couldAfford |\n    description = Called right AFTER a player's property is taxed. Please use canPropertyTax if you want to influence the taxing process. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player whose property has been taxed.\n\n| Arg2Name = tax\n| Arg2Type = number\n| Arg2Desc = The amount of money that has been taxed.\n\n| Arg3Name = couldAfford\n| Arg3Type = boolean\n| Arg3Desc = Whether the player was able to afford the tax.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:39:35"
        }
    },
    "Hooks/Server/onVoteStarted": {
        "en": {
            "content": "[[Category:Hooks|onVoteStarted]]\n[[Category:Serverside|onVoteStarted]]\n{{Lua_hook |\n    hook_name   = onVoteStarted |\n    arguments   = {{Type|table}} vote |\n    description = Called when a vote has been started. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = vote\n| Arg1Type = table\n| Arg1Desc = A table that contains information about the vote.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:39:13"
        }
    },
    "Hooks/Server/playerAFKDemoted": {
        "en": {
            "content": "[[Category:Hooks|playerAFKDemoted]]\n[[Category:Serverside|playerAFKDemoted]]\n{{Lua_hook |\n    hook_name   = playerAFKDemoted |\n    arguments   = {{Type|Player}} ply |\n    description = When a player is demoted for being AFK. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} shouldDemote, {{Type|number}} team, {{Type|boolean}} suppressMessage, {{Type|string}} demoteMessage |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player being demoted.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = shouldDemote\n| Arg1Type = boolean\n| Arg1Desc = Prevent the player from being actually demoted.\n\n| Arg2Name = team\n| Arg2Type = number\n| Arg2Desc = The team the player is to be demoted to (shouldDemote must be true.)\n\n| Arg3Name = suppressMessage\n| Arg3Type = boolean\n| Arg3Desc = Suppress the demote message.\n\n| Arg4Name = demoteMessage\n| Arg4Type = string\n| Arg4Desc = Replacement of the demote message text.\n\n}}",
            "timestamp": "2020-08-26 18:45:40"
        }
    },
    "Hooks/Server/playerAdverted": {
        "en": {
            "content": "<div>\n<div style=\"position:relative;top:-52px;margin-bottom: -40px;float:right;text-align:right;padding:2px;line-height:11px; margin-top:5px;border:0;width:100%\">[[File:Jarvis-flag_8010.png]] [[Main_Page|'''English''']]  [[File:Russia-flag.png]] [[Main_Page:ru|'''\u0420\u0443\u0441\u0441\u043a\u0438\u0439''']] [[File:France-flag.png]] [[Main_Page:fr|'''Fran\u00e7ais''']]</div>\n\n{{TOC rightNew}}\n{{CatStartNewMain|About DarkRP}}\n<div>\n<div style=\"padding:3px; border-width:1px; border-radius:0px; border-left:3px #4dfa73 solid; background:#4dfa73; float:center; margin:-10px; padding-left:9px;\">\n<b>[https://github.com/FPtje/DarkRP Download the latest DarkRP!]</b>\n</div><br />\nDarkRP - a game mode for the popular game Garry's Mod with the idea of a simulation of urban life. You could become a gangster and rob people or perhaps become a police officer to protect the town from outlaws. You could open a gun shop or a pizzeria where you sell the most delicious food in town. Or you can become the mayor and manage the city, namely the police, urban economies and licensing people. Read more [[DarkRP|here]].<br><br>\n{{ButtonMainGreen|Bug Reports|Workshop Download|Official Discord}}\n</div>\n\n<div>\n{{CatStartNewMoreCategory|Lua Scripting}}\n{{CatItemNew|Gmodflatblack.png\u200e|:Category:Functions|Functions|Functions available in DarkRP}}\n{{CatItemNew|Gmodflatblack.png|:Category:Hooks|Hooks|Hooks available in DarkRP}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:CustomJobFields|Custom job fields|The customization fields of custom jobs}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:CustomShipmentFields|Custom shipment fields|The customization fields of custom shipments}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:CustomEntityFields|Custom entity fields|The customization fields of custom entities}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:Categories|Custom Categories|The customization of categories in DarkRP 2.6.1}}\n|}\n</div>\n\n<div>\n{{CatStartNewMoreCategory|Tutorials}}\n===Information===\n{{CatItemNew|Book-Open-48.png\u200e|MigratingTo2.5.0|Migrating To 2.5.0|Migrating from DarkRP 2.4.3 to 2.5.0 or later.}}\n{{CatItemNew|Book-Open-48.png\u200e|DarkRP:Console Commands|Console Commands|All of DarkRP's console commands.}}\n{{CatItemNew|Book-Open-48.png\u200e|DarkRP:FAQ|FAQ|Excessively Asked Questions.}}\n|}\n\n{{CatStartNewMoreCategory|Programming}}\n===Modding - Beginners===\n{{CatItemNew|Document-Settings-01-48.png\u200e|DarkRP:ModifyingDarkRP|Modifying DarkRP|How to modify DarkRP without editing core files.}}\n{{CatItemNew|Document-Settings-01-48.png\u200e|Creating_modules|Creating DarkRP modules|How to make modules for DarkRP}}\n{{CatItemNew|Meeting-48.png\u200e|Donator Job configuration|Donator jobs|How to make donator only jobs for your server}}\n{{CatItemNew|Meeting-48.png\u200e|Donator Entities|Donator entities|How to make donator only entities for your server}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Shipments|How to make shipments|This is the third part in my series of DarkRP tutorials.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Jobs|How to make jobs|Another job making guide.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Agendas|Custom Agendas|Tutorial on creating custom agendas.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Door Groups|Custom Door Teams|Tutorial on creating custom door teams.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Vehicles|Buyable Vehicles|Tutorial on allowing people to buy vehicles.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Ammo|Custom Ammo|Tutorial on adding your own ammo types.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:SettingCPTeams|Setting CPs|Tutorial on how to allow certain teams to wanted/warrant}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Factions|Custom factions|Read tutorial on creating custom factions with attributes}}\n{{CatItemNew|Meeting-48.png|LUA:Remove FAdmin|Remove FAdmin|Removing/disabling FAdmin}}\n|-\n|\n===Modding - Advanced & Professional===\n{{CatItemNew|Meeting-48.png|DarkRP:Group Chat|Group Chats|Tutorial on editing/creating group chats.}}\n{{CatItemNew|Meeting-48.png|LUA:Custom Money Printer|Custom Money Printer|How to make your own money printer.}}\n{{CatItemNew|Meeting-48.png|LUA:DarkRP Chat Command|DarkRP Chat Command|Adding a chat command that creates cash.}}\n{{CatItemNew|Meeting-48.png|LUA:Pay Day Baton|Pay Day Baton|How to make a baton that forces a pay day to his/her victim.}}\n{{CatItemNew|Meeting-48.png|LUA:Demote Upon Death|Demote Upon Death|Demote a player from a team after dying.}}\n{{CatItemNew|Meeting-48.png|LUA:Modifying F4|Modifying F4|Modifying the F4 menu}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:Functions|Old Functions|Old functions in DarkRP 2.4.3 and below}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:Hooks|Old Hooks|Old hooks in DarkRP 2.4.3 and below}}\n|}\n</div>\n__NOTOC__\n</div>",
            "timestamp": "2021-11-13 02:43:06"
        }
    },
    "Hooks/Server/playerArrested": {
        "en": {
            "content": "[[Category:Hooks|playerArrested]]\n[[Category:Serverside|playerArrested]]\n{{Lua_hook |\n    hook_name   = playerArrested |\n    arguments   = {{Type|Player}} criminal, {{Type|number}} time, {{Type|Player}} actor |\n    description = When a player is arrested. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = criminal\n| Arg1Type = Player\n| Arg1Desc = The arrested criminal.\n\n| Arg2Name = time\n| Arg2Type = number\n| Arg2Desc = The jail time.\n\n| Arg3Name = actor\n| Arg3Type = Player\n| Arg3Desc = The person who arrested the criminal.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:44:07"
        }
    },
    "Hooks/Server/playerBoughtAmmo": {
        "en": {
            "content": "[[Category:Hooks|playerBoughtAmmo]]\n[[Category:Serverside|playerBoughtAmmo]]\n{{Lua_hook |\n    hook_name   = playerBoughtAmmo |\n    arguments   = {{Type|Player}} ply, {{Type|table}} ammoTable, {{Type|Weapon}} ent, {{Type|number}} price |\n    description = Called when a player buys some ammo. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player.\n\n| Arg2Name = ammoTable\n| Arg2Type = table\n| Arg2Desc = The table (from the AmmoTypes table).\n\n| Arg3Name = ent\n| Arg3Type = Weapon\n| Arg3Desc = The spawned ammo entity.\n\n| Arg4Name = price\n| Arg4Type = number\n| Arg4Desc = The eventual price.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:46:06"
        }
    },
    "Hooks/Server/playerBoughtCustomEntity": {
        "en": {
            "content": "[[Category:Hooks|playerBoughtCustomEntity]]\n[[Category:Serverside|playerBoughtCustomEntity]]\n{{Lua_hook |\n    hook_name   = playerBoughtCustomEntity |\n    arguments   = {{Type|Player}} ply, {{Type|table}} entityTable, {{Type|Entity}} ent, {{Type|number}} price |\n    description = Called when a player bought an entity (like a money printer or a gun lab). |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player.\n\n| Arg2Name = entityTable\n| Arg2Type = table\n| Arg2Desc = The table of the custom entity (from the DarkRPEntities table).\n\n| Arg3Name = ent\n| Arg3Type = Entity\n| Arg3Desc = The spawned entity.\n\n| Arg4Name = price\n| Arg4Type = number\n| Arg4Desc = The eventual price.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-10-03 05:43:50"
        }
    },
    "Hooks/Server/playerBoughtCustomVehicle": {
        "en": {
            "content": "[[Category:Hooks|playerBoughtCustomVehicle]]\n[[Category:Serverside|playerBoughtCustomVehicle]]\n{{Lua_hook |\n    hook_name   = playerBoughtCustomVehicle |\n    arguments   = {{Type|Player}} ply, {{Type|table}} vehicleTable, {{Type|Entity}} ent, {{Type|number}} price |\n    description = Called when a player bought a vehicle. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player.\n\n| Arg2Name = vehicleTable\n| Arg2Type = table\n| Arg2Desc = The table (from the CustomVehicles table).\n\n| Arg3Name = ent\n| Arg3Type = Entity\n| Arg3Desc = The spawned vehicle.\n\n| Arg4Name = price\n| Arg4Type = number\n| Arg4Desc = The eventual price.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:41:33"
        }
    },
    "Hooks/Server/playerBoughtDoor": {
        "en": {
            "content": "[[Category:Hooks|playerBoughtDoor]]\n[[Category:Serverside|playerBoughtDoor]]\n{{Lua_hook |\n    hook_name   = playerBoughtDoor |\n    arguments   = {{Type|Player}} ply, {{Type|Entity}} ent, {{Type|number}} cost |\n    description = Called when a player has purchased a door. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who has purchased the door.\n\n| Arg2Name = ent\n| Arg2Type = Entity\n| Arg2Desc = The purchased door.\n\n| Arg3Name = cost\n| Arg3Type = number\n| Arg3Desc = The cost of the purchased door.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:40:52"
        }
    },
    "Hooks/Server/playerBoughtFood": {
        "en": {
            "content": "[[Category:Hooks|playerBoughtFood]]\n[[Category:Serverside|playerBoughtFood]]\n{{Lua_hook |\n    hook_name   = playerBoughtFood |\n    arguments   = {{Type|Player}} ply, {{Type|table}} food, {{Type|Entity}} spawnedfood, {{Type|number}} cost |\n    description = Called when a player bought food. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who bought food.\n\n| Arg2Name = food\n| Arg2Type = table\n| Arg2Desc = Food table.\n\n| Arg3Name = spawnedfood\n| Arg3Type = Entity\n| Arg3Desc = Entity of spawned food.\n\n| Arg4Name = cost\n| Arg4Type = number\n| Arg4Desc = How much player paid.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:48:07"
        }
    },
    "Hooks/Server/playerBoughtPistol": {
        "en": {
            "content": "[[Category:Hooks|playerBoughtPistol]]\n[[Category:Serverside|playerBoughtPistol]]\n{{Lua_hook |\n    hook_name   = playerBoughtPistol |\n    arguments   = {{Type|Player}} ply, {{Type|table}} weaponTable, {{Type|Weapon}} ent, {{Type|number}} price |\n    description = Called when a player bought a pistol. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player.\n\n| Arg2Name = weaponTable\n| Arg2Type = table\n| Arg2Desc = The table (from the CustomShipments table).\n\n| Arg3Name = ent\n| Arg3Type = Weapon\n| Arg3Desc = The spawned weapon.\n\n| Arg4Name = price\n| Arg4Type = number\n| Arg4Desc = The eventual price.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:40:50"
        }
    },
    "Hooks/Server/playerBoughtShipment": {
        "en": {
            "content": "[[Category:Hooks|playerBoughtShipment]]\n[[Category:Serverside|playerBoughtShipment]]\n{{Lua_hook |\n    hook_name   = playerBoughtShipment |\n    arguments   = {{Type|Player}} ply, {{Type|table}} shipmentTable, {{Type|Entity}} ent, {{Type|number}} price |\n    description = Called when a player bought a shipment. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player.\n\n| Arg2Name = shipmentTable\n| Arg2Type = table\n| Arg2Desc = The table (from the CustomShipments table).\n\n| Arg3Name = ent\n| Arg3Type = Entity\n| Arg3Desc = The spawned entity.\n\n| Arg4Name = price\n| Arg4Type = number\n| Arg4Desc = The eventual price.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:43:42"
        }
    },
    "Hooks/Server/playerBoughtVehicle": {
        "en": {
            "content": "[[Category:Hooks|playerBoughtVehicle]]\n[[Category:Serverside|playerBoughtVehicle]]\n{{Lua_hook |\n    hook_name   = playerBoughtVehicle |\n    arguments   = {{Type|Player}} ply, {{Type|Entity}} ent, {{Type|number}} cost |\n    description = Called when a player has purchased a vehicle. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who has purchased the vehicle.\n\n| Arg2Name = ent\n| Arg2Type = Entity\n| Arg2Desc = The purchased vehicle.\n\n| Arg3Name = cost\n| Arg3Type = number\n| Arg3Desc = The cost of the purchased vehicle.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:39:51"
        }
    },
    "Hooks/Server/playerBuyDoor": {
        "en": {
            "content": "[[Category:Hooks|playerBuyDoor]]\n[[Category:Serverside|playerBuyDoor]]\n{{Lua_hook |\n    hook_name   = playerBuyDoor |\n    arguments   = {{Type|Player}} ply, {{Type|Entity}} ent |\n    description = When a player purchases a door. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} allowed, {{Type|string}} reason, {{Type|boolean}} surpress |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who is to buy the door.\n\n| Arg2Name = ent\n| Arg2Type = Entity\n| Arg2Desc = The door.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = allowed\n| Arg1Type = boolean\n| Arg1Desc = Whether the player is allowed to buy the door.\n\n| Arg2Name = reason\n| Arg2Type = string\n| Arg2Desc = The reason why a player is not allowed to buy the door, if applicable.\n\n| Arg3Name = surpress\n| Arg3Type = boolean\n| Arg3Desc = Whether to show the reason in a notification to the player, return true here to surpress the message.\n\n}}",
            "timestamp": "2020-08-26 18:47:08"
        }
    },
    "Hooks/Server/playerBuyVehicle": {
        "en": {
            "content": "[[Category:Hooks|playerBuyVehicle]]\n[[Category:Serverside|playerBuyVehicle]]\n{{Lua_hook |\n    hook_name   = playerBuyVehicle |\n    arguments   = {{Type|Player}} ply, {{Type|Entity}} ent |\n    description = When a player purchases a vehicle. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} allowed, {{Type|string}} reason, {{Type|boolean}} surpress |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who is to buy the vehicle.\n\n| Arg2Name = ent\n| Arg2Type = Entity\n| Arg2Desc = The vehicle.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = allowed\n| Arg1Type = boolean\n| Arg1Desc = Whether the player is allowed to buy the vehicle.\n\n| Arg2Name = reason\n| Arg2Type = string\n| Arg2Desc = The reason why a player is not allowed to buy the vehicle, if applicable.\n\n| Arg3Name = surpress\n| Arg3Type = boolean\n| Arg3Desc = Whether to show the reason in a notification to the player, return true here to surpress the message.\n\n}}",
            "timestamp": "2020-08-26 18:46:31"
        }
    },
    "Hooks/Server/playerCanChangeTeam": {
        "en": {
            "content": "[[Category:Hooks|playerCanChangeTeam]]\n[[Category:Serverside|playerCanChangeTeam]]\n{{Lua_hook |\n    hook_name   = playerCanChangeTeam |\n    arguments   = {{Type|Player}} ply, {{Type|number}} team, {{Type|boolean}} force |\n    description = Whether a player can change their team. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} canChange, {{Type|string}} reason |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player whom is to change their team.\n\n| Arg2Name = team\n| Arg2Type = number\n| Arg2Desc = The team number.\n\n| Arg3Name = force\n| Arg3Type = boolean\n| Arg3Desc = Whether this team change is important.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canChange\n| Arg1Type = boolean\n| Arg1Desc = Whether the player can change their team.\n\n| Arg2Name = reason\n| Arg2Type = string\n| Arg2Desc = The reason why the player cannot change their team.\n\n}}",
            "timestamp": "2020-08-26 18:42:24"
        }
    },
    "Hooks/Server/playerClassVarsApplied": {
        "en": {
            "content": "<div>\n<div style=\"position:relative;top:-52px;margin-bottom: -40px;float:right;text-align:right;padding:2px;line-height:11px; margin-top:5px;border:0;width:100%\">[[File:Jarvis-flag_8010.png]] [[Main_Page|'''English''']]  [[File:Russia-flag.png]] [[Main_Page:ru|'''\u0420\u0443\u0441\u0441\u043a\u0438\u0439''']] [[File:France-flag.png]] [[Main_Page:fr|'''Fran\u00e7ais''']]</div>\n\n{{TOC rightNew}}\n{{CatStartNewMain|About DarkRP}}\n<div>\n<div style=\"padding:3px; border-width:1px; border-radius:0px; border-left:3px #4dfa73 solid; background:#4dfa73; float:center; margin:-10px; padding-left:9px;\">\n<b>[https://github.com/FPtje/DarkRP Download the latest DarkRP!]</b>\n</div><br />\nDarkRP - a game mode for the popular game Garry's Mod with the idea of a simulation of urban life. You could become a gangster and rob people or perhaps become a police officer to protect the town from outlaws. You could open a gun shop or a pizzeria where you sell the most delicious food in town. Or you can become the mayor and manage the city, namely the police, urban economies and licensing people. Read more [[DarkRP|here]].<br><br>\n{{ButtonMainGreen|Bug Reports|Workshop Download|Official Discord}}\n</div>\n\n<div>\n{{CatStartNewMoreCategory|Lua Scripting}}\n{{CatItemNew|Gmodflatblack.png\u200e|:Category:Functions|Functions|Functions available in DarkRP}}\n{{CatItemNew|Gmodflatblack.png|:Category:Hooks|Hooks|Hooks available in DarkRP}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:CustomJobFields|Custom job fields|The customization fields of custom jobs}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:CustomShipmentFields|Custom shipment fields|The customization fields of custom shipments}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:CustomEntityFields|Custom entity fields|The customization fields of custom entities}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:Categories|Custom Categories|The customization of categories in DarkRP 2.6.1}}\n|}\n</div>\n\n<div>\n{{CatStartNewMoreCategory|Tutorials}}\n===Information===\n{{CatItemNew|Book-Open-48.png\u200e|MigratingTo2.5.0|Migrating To 2.5.0|Migrating from DarkRP 2.4.3 to 2.5.0 or later.}}\n{{CatItemNew|Book-Open-48.png\u200e|DarkRP:Console Commands|Console Commands|All of DarkRP's console commands.}}\n{{CatItemNew|Book-Open-48.png\u200e|DarkRP:FAQ|FAQ|Excessively Asked Questions.}}\n|}\n\n{{CatStartNewMoreCategory|Programming}}\n===Modding - Beginners===\n{{CatItemNew|Document-Settings-01-48.png\u200e|DarkRP:ModifyingDarkRP|Modifying DarkRP|How to modify DarkRP without editing core files.}}\n{{CatItemNew|Document-Settings-01-48.png\u200e|Creating_modules|Creating DarkRP modules|How to make modules for DarkRP}}\n{{CatItemNew|Meeting-48.png\u200e|Donator Job configuration|Donator jobs|How to make donator only jobs for your server}}\n{{CatItemNew|Meeting-48.png\u200e|Donator Entities|Donator entities|How to make donator only entities for your server}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Shipments|How to make shipments|This is the third part in my series of DarkRP tutorials.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Jobs|How to make jobs|Another job making guide.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Agendas|Custom Agendas|Tutorial on creating custom agendas.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Door Groups|Custom Door Teams|Tutorial on creating custom door teams.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Vehicles|Buyable Vehicles|Tutorial on allowing people to buy vehicles.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Ammo|Custom Ammo|Tutorial on adding your own ammo types.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:SettingCPTeams|Setting CPs|Tutorial on how to allow certain teams to wanted/warrant}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Factions|Custom factions|Read tutorial on creating custom factions with attributes}}\n{{CatItemNew|Meeting-48.png|LUA:Remove FAdmin|Remove FAdmin|Removing/disabling FAdmin}}\n|-\n|\n===Modding - Advanced & Professional===\n{{CatItemNew|Meeting-48.png|DarkRP:Group Chat|Group Chats|Tutorial on editing/creating group chats.}}\n{{CatItemNew|Meeting-48.png|LUA:Custom Money Printer|Custom Money Printer|How to make your own money printer.}}\n{{CatItemNew|Meeting-48.png|LUA:DarkRP Chat Command|DarkRP Chat Command|Adding a chat command that creates cash.}}\n{{CatItemNew|Meeting-48.png|LUA:Pay Day Baton|Pay Day Baton|How to make a baton that forces a pay day to his/her victim.}}\n{{CatItemNew|Meeting-48.png|LUA:Demote Upon Death|Demote Upon Death|Demote a player from a team after dying.}}\n{{CatItemNew|Meeting-48.png|LUA:Modifying F4|Modifying F4|Modifying the F4 menu}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:Functions|Old Functions|Old functions in DarkRP 2.4.3 and below}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:Hooks|Old Hooks|Old hooks in DarkRP 2.4.3 and below}}\n|}\n</div>\n__NOTOC__\n</div>",
            "timestamp": "2021-11-13 02:43:06"
        }
    },
    "Hooks/Server/playerDroppedCheque": {
        "en": {
            "content": "[[Category:Hooks|playerDroppedCheque]]\n[[Category:Serverside|playerDroppedCheque]]\n{{Lua_hook |\n    hook_name   = playerDroppedCheque |\n    arguments   = {{Type|Player}} player, {{Type|Player}} player, {{Type|number}} amount, {{Type|Entity}} entity |\n    description = Called when a player drops a cheque. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = player\n| Arg1Type = Player\n| Arg1Desc = The player who dropped the cheque.\n\n| Arg2Name = player\n| Arg2Type = Player\n| Arg2Desc = The player the cheque was written to.\n\n| Arg3Name = amount\n| Arg3Type = number\n| Arg3Desc = The amount of money the cheque has.\n\n| Arg4Name = entity\n| Arg4Type = Entity\n| Arg4Desc = The entity of the cheque that was dropped.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:46:29"
        }
    },
    "Hooks/Server/playerDroppedMoney": {
        "en": {
            "content": "[[Category:Hooks|playerDroppedMoney]]\n[[Category:Serverside|playerDroppedMoney]]\n{{Lua_hook |\n    hook_name   = playerDroppedMoney |\n    arguments   = {{Type|Player}} player, {{Type|number}} amount, {{Type|Entity}} entity |\n    description = Called when a player drops some money. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = player\n| Arg1Type = Player\n| Arg1Desc = The player who dropped the money.\n\n| Arg2Name = amount\n| Arg2Type = number\n| Arg2Desc = The amount of money dropped.\n\n| Arg3Name = entity\n| Arg3Type = Entity\n| Arg3Desc = The entity of the money that was dropped.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:46:35"
        }
    },
    "Hooks/Server/playerEnteredLottery": {
        "en": {
            "content": "[[Category:Hooks|playerEnteredLottery]]\n[[Category:Serverside|playerEnteredLottery]]\n{{Lua_hook |\n    hook_name   = playerEnteredLottery |\n    arguments   = {{Type|Player}} ply |\n    description = When a player has entered the lottery. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:38:22"
        }
    },
    "Hooks/Server/playerGaveMoney": {
        "en": {
            "content": "[[Category:Hooks|playerGaveMoney]]\n[[Category:Serverside|playerGaveMoney]]\n{{Lua_hook |\n    hook_name   = playerGaveMoney |\n    arguments   = {{Type|Player}} player, {{Type|Player}} otherPlayer, {{Type|number}} amount |\n    description = Called when a player gives another player money. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = player\n| Arg1Type = Player\n| Arg1Desc = The player that gives the money.\n\n| Arg2Name = otherPlayer\n| Arg2Type = Player\n| Arg2Desc = The player that receives the money.\n\n| Arg3Name = amount\n| Arg3Type = number\n| Arg3Desc = The amount of money.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:38:16"
        }
    },
    "Hooks/Server/playerGetSalary": {
        "en": {
            "content": "[[Category:Hooks|playerGetSalary]]\n[[Category:Serverside|playerGetSalary]]\n{{Lua_hook |\n    hook_name   = playerGetSalary |\n    arguments   = {{Type|Player}} ply, {{Type|number}} amount |\n    description = When a player receives salary. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} suppress, {{Type|string}} message, {{Type|number}} amount |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who is receiving salary.\n\n| Arg2Name = amount\n| Arg2Type = number\n| Arg2Desc = The amount of money given to the player.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = suppress\n| Arg1Type = boolean\n| Arg1Desc = Suppress the salary message.\n\n| Arg2Name = message\n| Arg2Type = string\n| Arg2Desc = Override the default message (suppress must be false).\n\n| Arg3Name = amount\n| Arg3Type = number\n| Arg3Desc = Override the salary.\n\n}}",
            "timestamp": "2020-08-26 18:37:56"
        }
    },
    "Hooks/Server/playerGotLicense": {
        "en": {
            "content": "[[Category:Hooks|playerGotLicense]]\n[[Category:Serverside|playerGotLicense]]\n{{Lua_hook |\n    hook_name   = playerGotLicense |\n    arguments   = {{Type|Player}} target, {{Type|Player}} actor |\n    description = Called when a player got a gun license. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = target\n| Arg1Type = Player\n| Arg1Desc = The player who got the license.\n\n| Arg2Name = actor\n| Arg2Type = Player\n| Arg2Desc = The player who gave the license.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2021-01-09 18:46:33"
        }
    },
    "Hooks/Server/playerKeysSold": {
        "en": {
            "content": "[[Category:Hooks|playerKeysSold]]\n[[Category:Serverside|playerKeysSold]]\n{{Lua_hook |\n    hook_name   = playerKeysSold |\n    arguments   = {{Type|Player}} ply, {{Type|Entity}} ent, {{Type|number}} GiveMoneyBack |\n    description = When a player sold a door or vehicle. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who sold the door or vehicle.\n\n| Arg2Name = ent\n| Arg2Type = Entity\n| Arg2Desc = The entity that was sold.\n\n| Arg3Name = GiveMoneyBack\n| Arg3Type = number\n| Arg3Desc = The amount of money refunded to the player\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:38:56"
        }
    },
    "Hooks/Server/playerPickedUpCheque": {
        "en": {
            "content": "[[Category:Hooks|playerPickedUpCheque]]\n[[Category:Serverside|playerPickedUpCheque]]\n{{Lua_hook |\n    hook_name   = playerPickedUpCheque |\n    arguments   = {{Type|Player}} player, {{Type|Player}} player, {{Type|number}} amount, {{Type|bool}} success, {{Type|Entity}} entity |\n    description = Called when a player picks up a cheque. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = player\n| Arg1Type = Player\n| Arg1Desc = The player who attempted to pick up the cheque.\n\n| Arg2Name = player\n| Arg2Type = Player\n| Arg2Desc = The player who the cheque was written to.\n\n| Arg3Name = amount\n| Arg3Type = number\n| Arg3Desc = The amount of money the cheque has.\n\n| Arg4Name = success\n| Arg4Type = bool\n| Arg4Desc = Whether the player was allowed to cash the cheque.\n\n| Arg5Name = entity\n| Arg5Type = Entity\n| Arg5Desc = The entity of the cheque.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:39:18"
        }
    },
    "Hooks/Server/playerPickedUpMoney": {
        "en": {
            "content": "[[Category:Hooks|playerPickedUpMoney]]\n[[Category:Serverside|playerPickedUpMoney]]\n{{Lua_hook |\n    hook_name   = playerPickedUpMoney |\n    arguments   = {{Type|Player}} player, {{Type|number}} amount, {{Type|Entity}} entity |\n    description = Called when a player picked up money. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = player\n| Arg1Type = Player\n| Arg1Desc = The player who picked up the money.\n\n| Arg2Name = amount\n| Arg2Type = number\n| Arg2Desc = The amount of money picked up.\n\n| Arg3Name = entity\n| Arg3Type = Entity\n| Arg3Desc = The entity of the money picked up itself.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:39:03"
        }
    },
    "Hooks/Server/playerSellDoor": {
        "en": {
            "content": "[[Category:Hooks|playerSellDoor]]\n[[Category:Serverside|playerSellDoor]]\n{{Lua_hook |\n    hook_name   = playerSellDoor |\n    arguments   = {{Type|Player}} ply, {{Type|Entity}} ent |\n    description = When a player is about to sell a door. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} allowed, {{Type|string}} reason |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who is to sell the door.\n\n| Arg2Name = ent\n| Arg2Type = Entity\n| Arg2Desc = The door.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = allowed\n| Arg1Type = boolean\n| Arg1Desc = Whether the player is allowed to sell the door.\n\n| Arg2Name = reason\n| Arg2Type = string\n| Arg2Desc = The reason why a player is not allowed to sell the door, if applicable.\n\n}}",
            "timestamp": "2020-08-26 18:44:05"
        }
    },
    "Hooks/Server/playerSellVehicle": {
        "en": {
            "content": "[[Category:Hooks|playerSellVehicle]]\n[[Category:Serverside|playerSellVehicle]]\n{{Lua_hook |\n    hook_name   = playerSellVehicle |\n    arguments   = {{Type|Player}} ply, {{Type|Entity}} ent |\n    description = When a player is about to sell a vehicle. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} allowed, {{Type|string}} reason |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who is to sell the vehicle.\n\n| Arg2Name = ent\n| Arg2Type = Entity\n| Arg2Desc = The vehicle.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = allowed\n| Arg1Type = boolean\n| Arg1Desc = Whether the player is allowed to sell the vehicle.\n\n| Arg2Name = reason\n| Arg2Type = string\n| Arg2Desc = The reason why a player is not allowed to sell the vehicle, if applicable.\n\n}}",
            "timestamp": "2020-08-26 18:45:09"
        }
    },
    "Hooks/Server/playerSetAFK": {
        "en": {
            "content": "[[Category:Hooks|playerSetAFK]]\n[[Category:Serverside|playerSetAFK]]\n{{Lua_hook |\n    hook_name   = playerSetAFK |\n    arguments   = {{Type|Player}} ply, {{Type|boolean}} afk |\n    description = When a player is set to AFK or returns from AFK. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player.\n\n| Arg2Name = afk\n| Arg2Type = boolean\n| Arg2Desc = True when the player starts being AFK, false when the player stops being AFK.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:38:42"
        }
    },
    "Hooks/Server/playerStarved": {
        "en": {
            "content": "[[Category:Hooks|playerStarved]]\n[[Category:Serverside|playerStarved]]\n{{Lua_hook |\n    hook_name   = playerStarved |\n    arguments   = {{Type|Player}} ply |\n    description = Called when a player dies of starvation. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who died of starvation.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:42:46"
        }
    },
    "Hooks/Server/playerToreUpCheque": {
        "en": {
            "content": "[[Category:Hooks|playerToreUpCheque]]\n[[Category:Serverside|playerToreUpCheque]]\n{{Lua_hook |\n    hook_name   = playerToreUpCheque |\n    arguments   = {{Type|Player}} player, {{Type|Player}} player, {{Type|number}} amount, {{Type|Entity}} entity |\n    description = Called when a player tears up a cheque. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = player\n| Arg1Type = Player\n| Arg1Desc = The player who tore up the cheque.\n\n| Arg2Name = player\n| Arg2Type = Player\n| Arg2Desc = The player who the cheque was written to.\n\n| Arg3Name = amount\n| Arg3Type = number\n| Arg3Desc = The amount of money the cheque has.\n\n| Arg4Name = entity\n| Arg4Type = Entity\n| Arg4Desc = The entity of the cheque.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:48:36"
        }
    },
    "Hooks/Server/playerUnArrested": {
        "en": {
            "content": "[[Category:Hooks|playerUnArrested]]\n[[Category:Serverside|playerUnArrested]]\n{{Lua_hook |\n    hook_name   = playerUnArrested |\n    arguments   = {{Type|Player}} criminal, {{Type|Player}} actor |\n    description = When a player is unarrested. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = criminal\n| Arg1Type = Player\n| Arg1Desc = The unarrested criminal.\n\n| Arg2Name = actor\n| Arg2Type = Player\n| Arg2Desc = The person who unarrested the criminal.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:39:00"
        }
    },
    "Hooks/Server/playerUnWanted": {
        "en": {
            "content": "[[Category:Hooks|playerUnWanted]]\n[[Category:Serverside|playerUnWanted]]\n{{Lua_hook |\n    hook_name   = playerUnWanted |\n    arguments   = {{Type|Player}} excriminal, {{Type|Player}} actor |\n    description = When a player is unwanted. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} suppressMsg |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = excriminal\n| Arg1Type = Player\n| Arg1Desc = The ex criminal.\n\n| Arg2Name = actor\n| Arg2Type = Player\n| Arg2Desc = The person who unwanted the ex criminal.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = suppressMsg\n| Arg1Type = boolean\n| Arg1Desc = Return true to make the unwanted silent.\n\n}}",
            "timestamp": "2020-08-26 18:39:09"
        }
    },
    "Hooks/Server/playerUnWarranted": {
        "en": {
            "content": "[[Category:Hooks|playerUnWarranted]]\n[[Category:Serverside|playerUnWarranted]]\n{{Lua_hook |\n    hook_name   = playerUnWarranted |\n    arguments   = {{Type|Player}} excriminal, {{Type|Player}} actor |\n    description = When a player is unwarranted. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} suppressMsg |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = excriminal\n| Arg1Type = Player\n| Arg1Desc = The potential criminal.\n\n| Arg2Name = actor\n| Arg2Type = Player\n| Arg2Desc = The person who unwarranted the potential criminal\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = suppressMsg\n| Arg1Type = boolean\n| Arg1Desc = Return true to make the unwarrant silent.\n\n}}",
            "timestamp": "2020-08-26 18:46:32"
        }
    },
    "Hooks/Server/playerWalletChanged": {
        "en": {
            "content": "[[Category:Hooks|playerWalletChanged]]\n[[Category:Serverside|playerWalletChanged]]\n{{Lua_hook |\n    hook_name   = playerWalletChanged |\n    arguments   = {{Type|Player}} ply, {{Type|number}} amount, {{Type|number}} wallet |\n    description = When a player receives money. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|number}} total |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player who is getting money.\n\n| Arg2Name = amount\n| Arg2Type = number\n| Arg2Desc = The amount of money given to the player.\n\n| Arg3Name = wallet\n| Arg3Type = number\n| Arg3Desc = How much money the player had before receiving the money.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = total\n| Arg1Type = number\n| Arg1Desc = Override the total amount of money (optional).\n\n}}",
            "timestamp": "2020-08-26 18:41:09"
        }
    },
    "Hooks/Server/playerWanted": {
        "en": {
            "content": "[[Category:Hooks|playerWanted]]\n[[Category:Serverside|playerWanted]]\n{{Lua_hook |\n    hook_name   = playerWanted |\n    arguments   = {{Type|Player}} criminal, {{Type|Player}} actor, {{Type|string}} reason |\n    description = When a player is wanted. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} suppressMsg |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = criminal\n| Arg1Type = Player\n| Arg1Desc = The criminal.\n\n| Arg2Name = actor\n| Arg2Type = Player\n| Arg2Desc = The person who wanted the criminal.\n\n| Arg3Name = reason\n| Arg3Type = string\n| Arg3Desc = The reason for wanting this person.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = suppressMsg\n| Arg1Type = boolean\n| Arg1Desc = Return true to make the wanted silent.\n\n}}",
            "timestamp": "2020-08-26 18:45:06"
        }
    },
    "Hooks/Server/playerWarranted": {
        "en": {
            "content": "[[Category:Hooks|playerWarranted]]\n[[Category:Serverside|playerWarranted]]\n{{Lua_hook |\n    hook_name   = playerWarranted |\n    arguments   = {{Type|Player}} criminal, {{Type|Player}} actor, {{Type|string}} reason |\n    description = When a player is warranted. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|boolean}} suppressMsg |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = criminal\n| Arg1Type = Player\n| Arg1Desc = The potential criminal.\n\n| Arg2Name = actor\n| Arg2Type = Player\n| Arg2Desc = The person who wanted the potential criminal.\n\n| Arg3Name = reason\n| Arg3Type = string\n| Arg3Desc = The reason for wanting this person.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = suppressMsg\n| Arg1Type = boolean\n| Arg1Desc = Return true to make the warrant silent.\n\n}}",
            "timestamp": "2020-08-26 18:38:58"
        }
    },
    "Hooks/Server/playerWeaponsConfiscated": {
        "en": {
            "content": "[[Category:Hooks|playerWeaponsConfiscated]]\n[[Category:Serverside|playerWeaponsConfiscated]]\n{{Lua_hook |\n    hook_name   = playerWeaponsConfiscated |\n    arguments   = {{Type|Player}} checker, {{Type|Player}} target, {{Type|table}} weapons |\n    description = Called when a player with a weapon checker has confiscated another player's weapons. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = checker\n| Arg1Type = Player\n| Arg1Desc = The player holding the weapon checker.\n\n| Arg2Name = target\n| Arg2Type = Player\n| Arg2Desc = The player whose weapons have been confiscated.\n\n| Arg3Name = weapons\n| Arg3Type = table\n| Arg3Desc = The weapons that have been confiscated.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:44:59"
        }
    },
    "Hooks/Server/playerWeaponsReturned": {
        "en": {
            "content": "[[Category:Hooks|playerWeaponsReturned]]\n[[Category:Serverside|playerWeaponsReturned]]\n{{Lua_hook |\n    hook_name   = playerWeaponsReturned |\n    arguments   = {{Type|Player}} checker, {{Type|Player}} target, {{Type|table}} weapons |\n    description = Called when a player with a weapon checker has returned another player's weapons. |\n    deprecated  =  |\n    lua_state   = {{Serverside}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = checker\n| Arg1Type = Player\n| Arg1Desc = The player holding the weapon checker.\n\n| Arg2Name = target\n| Arg2Type = Player\n| Arg2Desc = The player whose weapons have been returned.\n\n| Arg3Name = weapons\n| Arg3Type = table\n| Arg3Desc = The weapons that have been returned.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:43:07"
        }
    },
    "Hooks/Shared/DarkRPFinishedLoading": {
        "en": {
            "content": "[[Category:Hooks|DarkRPFinishedLoading]]\n[[Category:Shared|DarkRPFinishedLoading]]\n{{Lua_hook |\n    hook_name   = DarkRPFinishedLoading |\n    arguments   =  |\n    description = Runs right after DarkRP itself has loaded. All DarkRPMod stuff (except for disabled_defaults) is loaded during this hook. NOTE! NO CUSTOM STUFF WILL BE AVAILABLE DURING THIS HOOK. USE `loadCustomDarkRPItems` INSTEAD IF YOU WANT THAT! |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\nThis hook isn't called with any parameters\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:46:48"
        }
    },
    "Hooks/Shared/DarkRPStartedLoading": {
        "en": {
            "content": "[[Category:Hooks|DarkRPStartedLoading]]\n[[Category:Shared|DarkRPStartedLoading]]\n{{Lua_hook |\n    hook_name   = DarkRPStartedLoading |\n    arguments   =  |\n    description = Runs at the very start of loading DarkRP. Not even sandbox has loaded here yet. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\nThis hook isn't called with any parameters\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:39:20"
        }
    },
    "Hooks/Shared/DarkRPVarChanged": {
        "en": {
            "content": "[[Category:Hooks|DarkRPVarChanged]]\n[[Category:Shared|DarkRPVarChanged]]\n{{Lua_hook |\n    hook_name   = DarkRPVarChanged |\n    arguments   = {{Type|Player}} ply, {{Type|string}} varname, {{Type|any}} oldValue, {{Type|any}} newvalue |\n    description = Called when a DarkRPVar was changed. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player for whom the DarkRPVar changed.\n\n| Arg2Name = varname\n| Arg2Type = string\n| Arg2Desc = The name of the variable that has changed.\n\n| Arg3Name = oldValue\n| Arg3Type = any\n| Arg3Desc = The old value of the DarkRPVar.\n\n| Arg4Name = newvalue\n| Arg4Type = any\n| Arg4Desc = The new value of the DarkRPVar.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:44:06"
        }
    },
    "Hooks/Shared/OnPlayerChangedTeam": {
        "en": {
            "content": "[[Category:Hooks|OnPlayerChangedTeam]]\n[[Category:Shared|OnPlayerChangedTeam]]\n{{Lua_hook |\n    hook_name   = OnPlayerChangedTeam |\n    arguments   = {{Type|Player}} ply, {{Type|number}} before, {{Type|number}} after |\n    description = When your team (job) is changed. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player that changed team. Clientside this hook is only called for the LocalPlayer.\n\n| Arg2Name = before\n| Arg2Type = number\n| Arg2Desc = The team before the change.\n\n| Arg3Name = after\n| Arg3Type = number\n| Arg3Desc = The team after the change.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:44:47"
        }
    },
    "Hooks/Shared/UpdatePlayerSpeed": {
        "en": {
            "content": "[[Category:Hooks|UpdatePlayerSpeed]]\n[[Category:Shared|UpdatePlayerSpeed]]\n{{Lua_hook |\n    hook_name   = UpdatePlayerSpeed |\n    arguments   = {{Type|Player}} ply |\n    description = Change a player's walking and running speed. |\n    deprecated  = Use GMod's SetupMove and Move hooks instead. |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player for whom the speed changes.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:47:33"
        }
    },
    "Hooks/Shared/addLaw": {
        "en": {
            "content": "[[Category:Hooks|addLaw]]\n[[Category:Shared|addLaw]]\n{{Lua_hook |\n    hook_name   = addLaw |\n    arguments   = {{Type|number}} index, {{Type|string}} law, {{Type|Player}} player |\n    description = Called when a law is added. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = index\n| Arg1Type = number\n| Arg1Desc = Index of the law\n\n| Arg2Name = law\n| Arg2Type = string\n| Arg2Desc = Law string\n\n| Arg3Name = player\n| Arg3Type = Player\n| Arg3Desc = The player who added the law\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.\n\n== Example Code ==\n______________________________\n hook.Add(\"addLaw\", \"headdalaw\", function(index, law, player)\n \tprint(player .. \" \" .. \"added a law! \\n\" .. law)\n end)\n______________________________\n\nResult: Quang added a law!\nRDM is not allowed.",
            "timestamp": "2020-09-22 16:25:06"
        }
    },
    "Hooks/Shared/canBuyAmmo": {
        "en": {
            "content": "[[Category:Hooks|canBuyAmmo]]\n[[Category:Shared|canBuyAmmo]]\n{{Lua_hook |\n    hook_name   = canBuyAmmo |\n    arguments   = {{Type|Player}} ply, {{Type|table}} ammoTable |\n    description = Whether a player can buy ammo. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|boolean}} canBuy, {{Type|boolean}} suppressMessage, {{Type|string}} message, {{Type|number}} price |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player.\n\n| Arg2Name = ammoTable\n| Arg2Type = table\n| Arg2Desc = The table, as defined in the a ammo file.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canBuy\n| Arg1Type = boolean\n| Arg1Desc = Whether it can be bought.\n\n| Arg2Name = suppressMessage\n| Arg2Type = boolean\n| Arg2Desc = Suppress the notification message when it cannot be bought.\n\n| Arg3Name = message\n| Arg3Type = string\n| Arg3Desc = A replacement for the message that shows if it cannot be bought.\n\n| Arg4Name = price\n| Arg4Type = number\n| Arg4Desc = An optional override for the price.\n\n}}",
            "timestamp": "2020-08-26 18:46:08"
        }
    },
    "Hooks/Shared/canBuyCustomEntity": {
        "en": {
            "content": "[[Category:Hooks|canBuyCustomEntity]]\n[[Category:Shared|canBuyCustomEntity]]\n{{Lua_hook |\n    hook_name   = canBuyCustomEntity |\n    arguments   = {{Type|Player}} ply, {{Type|table}} entTable |\n    description = Whether a player can buy a certain custom entity. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|boolean}} canBuy, {{Type|boolean}} suppressMessage, {{Type|string}} message, {{Type|number}} price |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player.\n\n| Arg2Name = entTable\n| Arg2Type = table\n| Arg2Desc = The table, as defined by the user.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canBuy\n| Arg1Type = boolean\n| Arg1Desc = Whether it can be bought.\n\n| Arg2Name = suppressMessage\n| Arg2Type = boolean\n| Arg2Desc = Suppress the notification message when it cannot be bought.\n\n| Arg3Name = message\n| Arg3Type = string\n| Arg3Desc = A replacement for the message that shows if it cannot be bought.\n\n| Arg4Name = price\n| Arg4Type = number\n| Arg4Desc = An optional override for the price.\n\n}}",
            "timestamp": "2021-04-07 11:03:16"
        }
    },
    "Hooks/Shared/canBuyPistol": {
        "en": {
            "content": "[[Category:Hooks|canBuyPistol]]\n[[Category:Shared|canBuyPistol]]\n{{Lua_hook |\n    hook_name   = canBuyPistol |\n    arguments   = {{Type|Player}} ply, {{Type|table}} shipmentTable |\n    description = Whether a player can buy a pistol. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|boolean}} canBuy, {{Type|boolean}} suppressMessage, {{Type|string}} message, {{Type|number}} price |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player.\n\n| Arg2Name = shipmentTable\n| Arg2Type = table\n| Arg2Desc = The table, as defined in the shipments file.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canBuy\n| Arg1Type = boolean\n| Arg1Desc = Whether it can be bought.\n\n| Arg2Name = suppressMessage\n| Arg2Type = boolean\n| Arg2Desc = Suppress the notification message when it cannot be bought.\n\n| Arg3Name = message\n| Arg3Type = string\n| Arg3Desc = A replacement for the message that shows if it cannot be bought.\n\n| Arg4Name = price\n| Arg4Type = number\n| Arg4Desc = An optional override for the price.\n\n}}",
            "timestamp": "2020-08-26 18:38:38"
        }
    },
    "Hooks/Shared/canBuyShipment": {
        "en": {
            "content": "[[Category:Hooks|canBuyShipment]]\n[[Category:Shared|canBuyShipment]]\n{{Lua_hook |\n    hook_name   = canBuyShipment |\n    arguments   = {{Type|Player}} ply, {{Type|table}} shipmentTable |\n    description = Whether a player can buy a shipment. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|boolean}} canBuy, {{Type|boolean}} suppressMessage, {{Type|string}} message, {{Type|number}} price |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player.\n\n| Arg2Name = shipmentTable\n| Arg2Type = table\n| Arg2Desc = The table, as defined in the shipments file.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canBuy\n| Arg1Type = boolean\n| Arg1Desc = Whether it can be bought.\n\n| Arg2Name = suppressMessage\n| Arg2Type = boolean\n| Arg2Desc = Suppress the notification message when it cannot be bought.\n\n| Arg3Name = message\n| Arg3Type = string\n| Arg3Desc = A replacement for the message that shows if it cannot be bought.\n\n| Arg4Name = price\n| Arg4Type = number\n| Arg4Desc = An optional override for the price.\n\n}}",
            "timestamp": "2020-08-26 18:46:05"
        }
    },
    "Hooks/Shared/canBuyVehicle": {
        "en": {
            "content": "[[Category:Hooks|canBuyVehicle]]\n[[Category:Shared|canBuyVehicle]]\n{{Lua_hook |\n    hook_name   = canBuyVehicle |\n    arguments   = {{Type|Player}} ply, {{Type|table}} vehicleTable |\n    description = Whether a player can buy a vehicle. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|boolean}} canBuy, {{Type|boolean}} suppressMessage, {{Type|string}} message, {{Type|number}} price |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player.\n\n| Arg2Name = vehicleTable\n| Arg2Type = table\n| Arg2Desc = The table, as defined in the vehicles file.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canBuy\n| Arg1Type = boolean\n| Arg1Desc = Whether it can be bought.\n\n| Arg2Name = suppressMessage\n| Arg2Type = boolean\n| Arg2Desc = Suppress the notification message when it cannot be bought.\n\n| Arg3Name = message\n| Arg3Type = string\n| Arg3Desc = A replacement for the message that shows if it cannot be bought.\n\n| Arg4Name = price\n| Arg4Type = number\n| Arg4Desc = An optional override for the price.\n\n}}",
            "timestamp": "2020-08-26 18:45:38"
        }
    },
    "Hooks/Shared/canDoorRam": {
        "en": {
            "content": "[[Category:Hooks|canDoorRam]]\n[[Category:Shared|canDoorRam]]\n{{Lua_hook |\n    hook_name   = canDoorRam |\n    arguments   = {{Type|Player}} ply, {{Type|table}} trace, {{Type|Entity}} ent |\n    description = Called when a player attempts to ram something. Use this to override ram behaviour or to disallow ramming. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|boolean}} override |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player using the door ram.\n\n| Arg2Name = trace\n| Arg2Type = table\n| Arg2Desc = The trace containing information about the hit position and ram entity.\n\n| Arg3Name = ent\n| Arg3Type = Entity\n| Arg3Desc = Short for the entity that is about to be hit by the door ram.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = override\n| Arg1Type = boolean\n| Arg1Desc = Return true to override behaviour, false to disallow ramming and nil (or no value) to defer the decision.\n\n}}",
            "timestamp": "2020-08-26 18:42:47"
        }
    },
    "Hooks/Shared/canKeysLock": {
        "en": {
            "content": "[[Category:Hooks|canKeysLock]]\n[[Category:Shared|canKeysLock]]\n{{Lua_hook |\n    hook_name   = canKeysLock |\n    arguments   = {{Type|Player}} ply, {{Type|Entity}} door |\n    description = Whether the player can lock a given door. This hook is run when ply:canKeysLock is called. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|boolean}} allowed |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player\n\n| Arg2Name = door\n| Arg2Type = Entity\n| Arg2Desc = The door\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = allowed\n| Arg1Type = boolean\n| Arg1Desc = Whether the player is allowed to lock the door.\n\n}}",
            "timestamp": "2020-08-26 18:46:37"
        }
    },
    "Hooks/Shared/canKeysUnlock": {
        "en": {
            "content": "<div>\n<div style=\"position:relative;top:-52px;margin-bottom: -40px;float:right;text-align:right;padding:2px;line-height:11px; margin-top:5px;border:0;width:100%\">[[File:Jarvis-flag_8010.png]] [[Main_Page|'''English''']]  [[File:Russia-flag.png]] [[Main_Page:ru|'''\u0420\u0443\u0441\u0441\u043a\u0438\u0439''']] [[File:France-flag.png]] [[Main_Page:fr|'''Fran\u00e7ais''']]</div>\n\n{{TOC rightNew}}\n{{CatStartNewMain|About DarkRP}}\n<div>\n<div style=\"padding:3px; border-width:1px; border-radius:0px; border-left:3px #4dfa73 solid; background:#4dfa73; float:center; margin:-10px; padding-left:9px;\">\n<b>[https://github.com/FPtje/DarkRP Download the latest DarkRP!]</b>\n</div><br />\nDarkRP - a game mode for the popular game Garry's Mod with the idea of a simulation of urban life. You could become a gangster and rob people or perhaps become a police officer to protect the town from outlaws. You could open a gun shop or a pizzeria where you sell the most delicious food in town. Or you can become the mayor and manage the city, namely the police, urban economies and licensing people. Read more [[DarkRP|here]].<br><br>\n{{ButtonMainGreen|Bug Reports|Workshop Download|Official Discord}}\n</div>\n\n<div>\n{{CatStartNewMoreCategory|Lua Scripting}}\n{{CatItemNew|Gmodflatblack.png\u200e|:Category:Functions|Functions|Functions available in DarkRP}}\n{{CatItemNew|Gmodflatblack.png|:Category:Hooks|Hooks|Hooks available in DarkRP}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:CustomJobFields|Custom job fields|The customization fields of custom jobs}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:CustomShipmentFields|Custom shipment fields|The customization fields of custom shipments}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:CustomEntityFields|Custom entity fields|The customization fields of custom entities}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:Categories|Custom Categories|The customization of categories in DarkRP 2.6.1}}\n|}\n</div>\n\n<div>\n{{CatStartNewMoreCategory|Tutorials}}\n===Information===\n{{CatItemNew|Book-Open-48.png\u200e|MigratingTo2.5.0|Migrating To 2.5.0|Migrating from DarkRP 2.4.3 to 2.5.0 or later.}}\n{{CatItemNew|Book-Open-48.png\u200e|DarkRP:Console Commands|Console Commands|All of DarkRP's console commands.}}\n{{CatItemNew|Book-Open-48.png\u200e|DarkRP:FAQ|FAQ|Excessively Asked Questions.}}\n|}\n\n{{CatStartNewMoreCategory|Programming}}\n===Modding - Beginners===\n{{CatItemNew|Document-Settings-01-48.png\u200e|DarkRP:ModifyingDarkRP|Modifying DarkRP|How to modify DarkRP without editing core files.}}\n{{CatItemNew|Document-Settings-01-48.png\u200e|Creating_modules|Creating DarkRP modules|How to make modules for DarkRP}}\n{{CatItemNew|Meeting-48.png\u200e|Donator Job configuration|Donator jobs|How to make donator only jobs for your server}}\n{{CatItemNew|Meeting-48.png\u200e|Donator Entities|Donator entities|How to make donator only entities for your server}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Shipments|How to make shipments|This is the third part in my series of DarkRP tutorials.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Jobs|How to make jobs|Another job making guide.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Agendas|Custom Agendas|Tutorial on creating custom agendas.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Door Groups|Custom Door Teams|Tutorial on creating custom door teams.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Vehicles|Buyable Vehicles|Tutorial on allowing people to buy vehicles.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Ammo|Custom Ammo|Tutorial on adding your own ammo types.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:SettingCPTeams|Setting CPs|Tutorial on how to allow certain teams to wanted/warrant}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Factions|Custom factions|Read tutorial on creating custom factions with attributes}}\n{{CatItemNew|Meeting-48.png|LUA:Remove FAdmin|Remove FAdmin|Removing/disabling FAdmin}}\n|-\n|\n===Modding - Advanced & Professional===\n{{CatItemNew|Meeting-48.png|DarkRP:Group Chat|Group Chats|Tutorial on editing/creating group chats.}}\n{{CatItemNew|Meeting-48.png|LUA:Custom Money Printer|Custom Money Printer|How to make your own money printer.}}\n{{CatItemNew|Meeting-48.png|LUA:DarkRP Chat Command|DarkRP Chat Command|Adding a chat command that creates cash.}}\n{{CatItemNew|Meeting-48.png|LUA:Pay Day Baton|Pay Day Baton|How to make a baton that forces a pay day to his/her victim.}}\n{{CatItemNew|Meeting-48.png|LUA:Demote Upon Death|Demote Upon Death|Demote a player from a team after dying.}}\n{{CatItemNew|Meeting-48.png|LUA:Modifying F4|Modifying F4|Modifying the F4 menu}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:Functions|Old Functions|Old functions in DarkRP 2.4.3 and below}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:Hooks|Old Hooks|Old hooks in DarkRP 2.4.3 and below}}\n|}\n</div>\n__NOTOC__\n</div>",
            "timestamp": "2021-11-13 02:43:06"
        }
    },
    "Hooks/Shared/canLockpick": {
        "en": {
            "content": "[[Category:Hooks|canLockpick]]\n[[Category:Shared|canLockpick]]\n{{Lua_hook |\n    hook_name   = canLockpick |\n    arguments   = {{Type|Player}} ply, {{Type|Entity}} ent, {{Type|table}} trace |\n    description = Whether an entity can be lockpicked. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|boolean}} allowed |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player attempting to lockpick an entity.\n\n| Arg2Name = ent\n| Arg2Type = Entity\n| Arg2Desc = The entity being lockpicked.\n\n| Arg3Name = trace\n| Arg3Type = table\n| Arg3Desc = The trace result.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = allowed\n| Arg1Type = boolean\n| Arg1Desc = Whether the entity can be lockpicked\n\n}}",
            "timestamp": "2020-08-26 18:44:12"
        }
    },
    "Hooks/Shared/canRequestHit": {
        "en": {
            "content": "[[Category:Hooks|canRequestHit]]\n[[Category:Shared|canRequestHit]]\n{{Lua_hook |\n    hook_name   = canRequestHit |\n    arguments   = {{Type|Player}} hitman, {{Type|Player}} customer, {{Type|Player}} target, {{Type|number}} price |\n    description = Whether someone can request a hit. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|boolean}} canRequest, {{Type|string}} message, {{Type|number}} price |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = hitman\n| Arg1Type = Player\n| Arg1Desc = The hitman performing the hit\n\n| Arg2Name = customer\n| Arg2Type = Player\n| Arg2Desc = The customer for the current hit.\n\n| Arg3Name = target\n| Arg3Type = Player\n| Arg3Desc = The target of the current hit\n\n| Arg4Name = price\n| Arg4Type = number\n| Arg4Desc = The agreed upon price.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canRequest\n| Arg1Type = boolean\n| Arg1Desc = A yes or no as to whether the hit can be requested.\n\n| Arg2Name = message\n| Arg2Type = string\n| Arg2Desc = The message that is shown when they can't request the hit.\n\n| Arg3Name = price\n| Arg3Type = number\n| Arg3Desc = An override for the price of the hit.\n\n}}",
            "timestamp": "2020-08-26 18:40:26"
        }
    },
    "Hooks/Shared/canRequestWarrant": {
        "en": {
            "content": "[[Category:Hooks|canRequestWarrant]]\n[[Category:Shared|canRequestWarrant]]\n{{Lua_hook |\n    hook_name   = canRequestWarrant |\n    arguments   = {{Type|Player}} target, {{Type|Player}} actor, {{Type|Player}} reason |\n    description = Whether someone can request a search warrant. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|boolean}} canRequest, {{Type|string}} message |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = target\n| Arg1Type = Player\n| Arg1Desc = The player to get the search warrant for\n\n| Arg2Name = actor\n| Arg2Type = Player\n| Arg2Desc = The player requesting the warrant\n\n| Arg3Name = reason\n| Arg3Type = Player\n| Arg3Desc = The reason for the search warrant\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canRequest\n| Arg1Type = boolean\n| Arg1Desc = A yes or no as to whether the search warrant can be requested\n\n| Arg2Name = message\n| Arg2Type = string\n| Arg2Desc = The message that is shown when it can't\n\n}}",
            "timestamp": "2020-08-26 18:37:11"
        }
    },
    "Hooks/Shared/canUnwant": {
        "en": {
            "content": "[[Category:Hooks|canUnwant]]\n[[Category:Shared|canUnwant]]\n{{Lua_hook |\n    hook_name   = canUnwant |\n    arguments   = {{Type|Player}} target, {{Type|Player}} actor |\n    description = Whether someone can remove the wanted status from a player |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|boolean}} canUnwant, {{Type|string}} message |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = target\n| Arg1Type = Player\n| Arg1Desc = The player to make wanted by the police\n\n| Arg2Name = actor\n| Arg2Type = Player\n| Arg2Desc = The player requesting the wanted status\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canUnwant\n| Arg1Type = boolean\n| Arg1Desc = A yes or no answer\n\n| Arg2Name = message\n| Arg2Type = string\n| Arg2Desc = The message that is shown when the answer is no\n\n}}",
            "timestamp": "2020-08-26 18:45:54"
        }
    },
    "Hooks/Shared/canWanted": {
        "en": {
            "content": "[[Category:Hooks|canWanted]]\n[[Category:Shared|canWanted]]\n{{Lua_hook |\n    hook_name   = canWanted |\n    arguments   = {{Type|Player}} target, {{Type|Player}} actor, {{Type|Player}} reason |\n    description = Whether someone can make a player wanted |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|boolean}} canRequest, {{Type|string}} message |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = target\n| Arg1Type = Player\n| Arg1Desc = The player to make wanted by the police\n\n| Arg2Name = actor\n| Arg2Type = Player\n| Arg2Desc = The player requesting the wanted status\n\n| Arg3Name = reason\n| Arg3Type = Player\n| Arg3Desc = The reason\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = canRequest\n| Arg1Type = boolean\n| Arg1Desc = A yes or no as to whether the wanted can be requested\n\n| Arg2Name = message\n| Arg2Type = string\n| Arg2Desc = The message that is shown when it can't\n\n}}",
            "timestamp": "2020-08-26 18:45:27"
        }
    },
    "Hooks/Shared/loadCustomDarkRPItems": {
        "en": {
            "content": "[[Category:Hooks|loadCustomDarkRPItems]]\n[[Category:Shared|loadCustomDarkRPItems]]\n{{Lua_hook |\n    hook_name   = loadCustomDarkRPItems |\n    arguments   =  |\n    description = Runs right after the scripts from the DarkRPMod are run. You can add custom jobs, entities, shipments and whatever in this hook. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\nThis hook isn't called with any parameters\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:47:47"
        }
    },
    "Hooks/Shared/lockdownEnded": {
        "en": {
            "content": "[[Category:Hooks|lockdownEnded]]\n[[Category:Shared|lockdownEnded]]\n{{Lua_hook |\n    hook_name   = lockdownEnded |\n    arguments   = {{Type|Player}} actor |\n    description = When a lockdown has ended. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = actor\n| Arg1Type = Player\n| Arg1Desc = The player who ended the lockdown. Note: Can be the world entitity.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:46:59"
        }
    },
    "Hooks/Shared/lockdownStarted": {
        "en": {
            "content": "[[Category:Hooks|lockdownStarted]]\n[[Category:Shared|lockdownStarted]]\n{{Lua_hook |\n    hook_name   = lockdownStarted |\n    arguments   = {{Type|Player}} actor |\n    description = When a lockdown has started. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = actor\n| Arg1Type = Player\n| Arg1Desc = The player who started the lockdown. Note: Can be the world entitity.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:40:39"
        }
    },
    "Hooks/Shared/lockpickStarted": {
        "en": {
            "content": "[[Category:Hooks|lockpickStarted]]\n[[Category:Shared|lockpickStarted]]\n{{Lua_hook |\n    hook_name   = lockpickStarted |\n    arguments   = {{Type|Player}} ply, {{Type|Entity}} ent, {{Type|table}} trace |\n    description = Called when a player is about to pick a lock. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player that is about to pick a lock.\n\n| Arg2Name = ent\n| Arg2Type = Entity\n| Arg2Desc = The entity being lockpicked.\n\n| Arg3Name = trace\n| Arg3Type = table\n| Arg3Desc = The trace result.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:47:20"
        }
    },
    "Hooks/Shared/lockpickTime": {
        "en": {
            "content": "[[Category:Hooks|lockpickTime]]\n[[Category:Shared|lockpickTime]]\n{{Lua_hook |\n    hook_name   = lockpickTime |\n    arguments   = {{Type|Player}} ply, {{Type|Entity}} ent |\n    description = The length of time, in seconds, it takes to lockpick an entity. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|number}} time |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player attempting to lockpick an entity.\n\n| Arg2Name = ent\n| Arg2Type = Entity\n| Arg2Desc = The entity being lockpicked.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = time\n| Arg1Type = number\n| Arg1Desc = Seconds in which it takes a player to lockpick an entity\n\n}}",
            "timestamp": "2020-08-26 18:47:13"
        }
    },
    "Hooks/Shared/onAgendaRemoved": {
        "en": {
            "content": "[[Category:Hooks|onAgendaRemoved]]\n[[Category:Shared|onAgendaRemoved]]\n{{Lua_hook |\n    hook_name   = onAgendaRemoved |\n    arguments   = {{Type|string}} name, {{Type|table}} itemTable |\n    description = Called when an agenda was removed. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Desc = The name of this item.\n\n| Arg2Name = itemTable\n| Arg2Type = table\n| Arg2Desc = The table containing all the info about this item.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:38:35"
        }
    },
    "Hooks/Shared/onAmmoTypeRemoved": {
        "en": {
            "content": "[[Category:Hooks|onAmmoTypeRemoved]]\n[[Category:Shared|onAmmoTypeRemoved]]\n{{Lua_hook |\n    hook_name   = onAmmoTypeRemoved |\n    arguments   = {{Type|number}} num, {{Type|table}} itemTable |\n    description = Called when a ammotype was removed. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = num\n| Arg1Type = number\n| Arg1Desc = The index of this item.\n\n| Arg2Name = itemTable\n| Arg2Type = table\n| Arg2Desc = The table containing all the info about this item.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:38:07"
        }
    },
    "Hooks/Shared/onDemoteGroupRemoved": {
        "en": {
            "content": "[[Category:Hooks|onDemoteGroupRemoved]]\n[[Category:Shared|onDemoteGroupRemoved]]\n{{Lua_hook |\n    hook_name   = onDemoteGroupRemoved |\n    arguments   = {{Type|string}} name, {{Type|table}} itemTable |\n    description = Called when a job was demotegroup. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Desc = The name of this item.\n\n| Arg2Name = itemTable\n| Arg2Type = table\n| Arg2Desc = The table containing all the info about this item.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:40:19"
        }
    },
    "Hooks/Shared/onEntityGroupRemoved": {
        "en": {
            "content": "[[Category:Hooks|onEntityGroupRemoved]]\n[[Category:Shared|onEntityGroupRemoved]]\n{{Lua_hook |\n    hook_name   = onEntityGroupRemoved |\n    arguments   = {{Type|string}} name, {{Type|table}} itemTable |\n    description = Called when an entity group was removed. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = name\n| Arg1Type = string\n| Arg1Desc = The name of this item.\n\n| Arg2Name = itemTable\n| Arg2Type = table\n| Arg2Desc = The table containing all the info about this item.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:47:37"
        }
    },
    "Hooks/Shared/onEntityRemoved": {
        "en": {
            "content": "[[Category:Hooks|onEntityRemoved]]\n[[Category:Shared|onEntityRemoved]]\n{{Lua_hook |\n    hook_name   = onEntityRemoved |\n    arguments   = {{Type|number}} num, {{Type|table}} itemTable |\n    description = Called when a buyable entity was removed. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = num\n| Arg1Type = number\n| Arg1Desc = The index of this item.\n\n| Arg2Name = itemTable\n| Arg2Type = table\n| Arg2Desc = The table containing all the info about this item.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:43:01"
        }
    },
    "Hooks/Shared/onFoodItemRemoved": {
        "en": {
            "content": "[[Category:Hooks|onFoodItemRemoved]]\n[[Category:Shared|onFoodItemRemoved]]\n{{Lua_hook |\n    hook_name   = onFoodItemRemoved |\n    arguments   = {{Type|number}} num, {{Type|table}} itemTable |\n    description = Called when a food item is removed. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = num\n| Arg1Type = number\n| Arg1Desc = The index of this item.\n\n| Arg2Name = itemTable\n| Arg2Type = table\n| Arg2Desc = The table containing all the info about this item.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:37:42"
        }
    },
    "Hooks/Shared/onGroupChatRemoved": {
        "en": {
            "content": "[[Category:Hooks|onGroupChatRemoved]]\n[[Category:Shared|onGroupChatRemoved]]\n{{Lua_hook |\n    hook_name   = onGroupChatRemoved |\n    arguments   = {{Type|number}} num, {{Type|table}} itemTable |\n    description = Called when a groupchat was removed. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = num\n| Arg1Type = number\n| Arg1Desc = The index of this item.\n\n| Arg2Name = itemTable\n| Arg2Type = table\n| Arg2Desc = The table containing all the info about this item.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:45:15"
        }
    },
    "Hooks/Shared/onHitAccepted": {
        "en": {
            "content": "[[Category:Hooks|onHitAccepted]]\n[[Category:Shared|onHitAccepted]]\n{{Lua_hook |\n    hook_name   = onHitAccepted |\n    arguments   = {{Type|Player}} hitman, {{Type|Player}} target, {{Type|Player}} customer |\n    description = When a hitman accepts a hit. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = hitman\n| Arg1Type = Player\n| Arg1Desc = The hitman performing the hit.\n\n| Arg2Name = target\n| Arg2Type = Player\n| Arg2Desc = The target of the current hit.\n\n| Arg3Name = customer\n| Arg3Type = Player\n| Arg3Desc = The customer of the current hit.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:41:19"
        }
    },
    "Hooks/Shared/onHitCompleted": {
        "en": {
            "content": "[[Category:Hooks|onHitCompleted]]\n[[Category:Shared|onHitCompleted]]\n{{Lua_hook |\n    hook_name   = onHitCompleted |\n    arguments   = {{Type|Player}} hitman, {{Type|Player}} target, {{Type|Player}} customer |\n    description = When a hitman finishes a hit. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = hitman\n| Arg1Type = Player\n| Arg1Desc = The hitman performing the hit.\n\n| Arg2Name = target\n| Arg2Type = Player\n| Arg2Desc = The target of the current hit.\n\n| Arg3Name = customer\n| Arg3Type = Player\n| Arg3Desc = The customer of the current hit.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:46:34"
        }
    },
    "Hooks/Shared/onHitFailed": {
        "en": {
            "content": "[[Category:Hooks|onHitFailed]]\n[[Category:Shared|onHitFailed]]\n{{Lua_hook |\n    hook_name   = onHitFailed |\n    arguments   = {{Type|Player}} hitman, {{Type|Player}} target, {{Type|string}} reason |\n    description = When a hit fails for some reason. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = hitman\n| Arg1Type = Player\n| Arg1Desc = The hitman performing the hit.\n\n| Arg2Name = target\n| Arg2Type = Player\n| Arg2Desc = The target of the current hit.\n\n| Arg3Name = reason\n| Arg3Type = string\n| Arg3Desc = why the hit failed.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:48:47"
        }
    },
    "Hooks/Shared/onJobRemoved": {
        "en": {
            "content": "[[Category:Hooks|onJobRemoved]]\n[[Category:Shared|onJobRemoved]]\n{{Lua_hook |\n    hook_name   = onJobRemoved |\n    arguments   = {{Type|number}} num, {{Type|table}} jobbtable |\n    description = Called when a job was removed. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = num\n| Arg1Type = number\n| Arg1Desc = The TEAM_ number of the job.\n\n| Arg2Name = jobbtable\n| Arg2Type = table\n| Arg2Desc = The table containing all the job info.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:48:38"
        }
    },
    "Hooks/Shared/onLockpickCompleted": {
        "en": {
            "content": "[[Category:Hooks|onLockpickCompleted]]\n[[Category:Shared|onLockpickCompleted]]\n{{Lua_hook |\n    hook_name   = onLockpickCompleted |\n    arguments   = {{Type|Player}} ply, {{Type|boolean}} success, {{Type|Entity}} ent |\n    description = Result of a player attempting to lockpick an entity. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|boolean}} override |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = ply\n| Arg1Type = Player\n| Arg1Desc = The player attempting to lockpick the entity.\n\n| Arg2Name = success\n| Arg2Type = boolean\n| Arg2Desc = Whether the player succeeded in lockpicking the entity.\n\n| Arg3Name = ent\n| Arg3Type = Entity\n| Arg3Desc = The entity that was lockpicked.\n\n}}\n\n== Return values ==\n{{ParameterListSyntax\n\n| Arg1Name = override\n| Arg1Type = boolean\n| Arg1Desc = Return true to override default behaviour, which is opening the (fading) door.\n\n}}",
            "timestamp": "2020-08-26 18:48:12"
        }
    },
    "Hooks/Shared/onShipmentRemoved": {
        "en": {
            "content": "[[Category:Hooks|onShipmentRemoved]]\n[[Category:Shared|onShipmentRemoved]]\n{{Lua_hook |\n    hook_name   = onShipmentRemoved |\n    arguments   = {{Type|number}} num, {{Type|table}} itemTable |\n    description = Called when a shipment was removed. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = num\n| Arg1Type = number\n| Arg1Desc = The index of this item.\n\n| Arg2Name = itemTable\n| Arg2Type = table\n| Arg2Desc = The table containing all the info about this item.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:47:58"
        }
    },
    "Hooks/Shared/onVehicleRemoved": {
        "en": {
            "content": "[[Category:Hooks|onVehicleRemoved]]\n[[Category:Shared|onVehicleRemoved]]\n{{Lua_hook |\n    hook_name   = onVehicleRemoved |\n    arguments   = {{Type|number}} num, {{Type|table}} itemTable |\n    description = Called when a vehicle was removed. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = num\n| Arg1Type = number\n| Arg1Desc = The index of this item.\n\n| Arg2Name = itemTable\n| Arg2Type = table\n| Arg2Desc = The table containing all the info about this item.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:46:26"
        }
    },
    "Hooks/Shared/playerWeaponsChecked": {
        "en": {
            "content": "[[Category:Hooks|playerWeaponsChecked]]\n[[Category:Shared|playerWeaponsChecked]]\n{{Lua_hook |\n    hook_name   = playerWeaponsChecked |\n    arguments   = {{Type|Player}} checker, {{Type|Player}} target, {{Type|table}} weapons |\n    description = Called when a player with a weapon checker has checked another player's weapons. Note: Only called when the player looks at the weapons without confiscating. Please see playerWeaponsConfiscated for when weapons are actually confiscated. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = checker\n| Arg1Type = Player\n| Arg1Desc = The player holding the weapon checker.\n\n| Arg2Name = target\n| Arg2Type = Player\n| Arg2Desc = The player whose weapons have been checked.\n\n| Arg3Name = weapons\n| Arg3Type = table\n| Arg3Desc = The weapons that have been checked.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:42:59"
        }
    },
    "Hooks/Shared/postLoadCustomDarkRPItems": {
        "en": {
            "content": "[[Category:Hooks|postLoadCustomDarkRPItems]]\n[[Category:Shared|postLoadCustomDarkRPItems]]\n{{Lua_hook |\n    hook_name   = postLoadCustomDarkRPItems |\n    arguments   =  |\n    description = Runs right after loadCustomDarkRPItems. All custom DarkRP content will be loaded by this time. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\nThis hook isn't called with any parameters\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:37:28"
        }
    },
    "Hooks/Shared/removeLaw": {
        "en": {
            "content": "[[Category:Hooks|removeLaw]]\n[[Category:Shared|removeLaw]]\n{{Lua_hook |\n    hook_name   = removeLaw |\n    arguments   = {{Type|number}} index, {{Type|string}} law, {{Type|Player}} player |\n    description = Called when a law is removed. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = index\n| Arg1Type = number\n| Arg1Desc = Index of law\n\n| Arg2Name = law\n| Arg2Type = string\n| Arg2Desc = Law string\n\n| Arg3Name = player\n| Arg3Type = Player\n| Arg3Desc = The player who removed the law\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:40:27"
        }
    },
    "Hooks/Shared/resetLaws": {
        "en": {
            "content": "[[Category:Hooks|resetLaws]]\n[[Category:Shared|resetLaws]]\n{{Lua_hook |\n    hook_name   = resetLaws |\n    arguments   = {{Type|Player}} player |\n    description = Called when laws are reset. |\n    deprecated  =  |\n    lua_state   = {{Shared}} |\n    returns = {{Type|nil}} |\n}}\n\n== Parameters ==\n{{ParameterListSyntax\n\n| Arg1Name = player\n| Arg1Type = Player\n| Arg1Desc = The player resetting the laws.\n\n}}\n\n== Return values ==\nThis hook does not accept return values. You can still return a value to override the default implementation of this hook.",
            "timestamp": "2020-08-26 18:48:01"
        }
    },
    "Hooks/server/PlayerCanPickupWeapon": {
        "en": {
            "content": "#REDIRECT [[Hooks/Server/PlayerCanPickupWeapon]]",
            "timestamp": "2020-07-23 18:08:07"
        }
    },
    "LUA:Custom Money Printer": {
        "en": {
            "content": "{{TOC right}}{{Languages|en=LUA:Custom Money Printer|ru=LUA:\u0421\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 Money \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u044b|fr=LUA:Custom Money Printer:fr}}\n\nThis tutorial will show you how to create a new money printer, but only by copying and pasting to make it easy for you.\n\nA program that would be useful to you is Sublime Text. You can download it from [http://www.sublimetext.com/ Here.]\n\n== Starting Off ==\n\nIn darkrpmod/lua/entities/entities create a folder called something_moneyprinter (you may rename it to whatever you want it to be).\n\nCreate 3 lua files:<br>\n* cl_init.lua<br>\n* init.lua<br>\n* shared.lua\n\nOpen them in your text editor.\n\nYou will find the default money printer files in darkrp/entities/entities/money_printer. Copy the contents of these files to the files you created in your own money printer folder (copy the stuff from money_printer/cl_init.lua over to something_moneyprinter/cl_init.lua etc.)\n\nMake sure the contents of the three files _match_ before you start editing your money printer!\n\nTo get your money printer to work, open darkrpmod/lua/darkrp_customthings/entities.lua. Add an entity for your custom money printer (you can take the existing money printer as an example).\n\n== Customizing your printer ==\n\ncl_init.lua has the clientside stuff of the money printer (drawing and shit). You can change the text \"Money Printer\" to say something else, you can change everything between Color(.....) tags to change the colours of things. You can change the font to something else, making sure it exists.\n\ninit.lua has the serverside things. The SeizeReward on top is how much money police officers get when they smack that shit with their stunsticks. You can set the model of the money printer in the line where it says self:SetModel(\"MODEL HERE\"). The self.damage line says how much health the money printer has. Raise the number to give it higher health and lower it to decrease it.\n\nLines that say DarkRP.notify are messages that are sent to the player. You can change the texts in these messages.\n\nThe ENT:CreateMoneybag() function has some interesting stuff too, by default there's a one in 22 chance that the thing catches fire. Change the number 22 and you will change the chance of it catching fire. The amount is how much money your printer prints. By default it uses the config value. If you change GAMEMODE.Config.mprintamount to like 1000, it will print 1000 dollars.\n\nThe line that says timer.Simple(math.random(blah, blah is how long it takes to print something. By default it's randomly chosen between 100 and 350 seconds. change those numbers and you'll have a different money printing time. Make sure the first number is lower than the other. If you don't, Lua will poop and mess things up.\n\nshared.lua has the authors and print name. Don't change the Base or the Type, that'll fuck shit up. Don't change the numbers in the lines that say self:NetworkVar. Those numbers probably don't mean what you think they mean. Changing them will probably fuck shit up.",
            "timestamp": "2020-07-23 18:08:07"
        },
        "fr": {
            "content": "__TOC__\n\n{{Languages|en=LUA:Custom Money Printer|fr=LUA:Custom Money Printer:fr}}\n\nCe tutoriel vous montrera comment cr\u00e9er une nouvelle imprimante d'argent, mais uniquement en copiant et collant pour que ce soit facile.\n== Commencer ==\n\nDans darkrpmodification-master/lua/entities/entities , cr\u00e9ez un dossier appel\u00e9 something_moneyprinter (vous pouvez le renommer en ce que vous voulez).\n\nCr\u00e9ez 3 fichiers lua:<br>\n* cl_init.lua<br>\n* init.lua<br>\n* shared.lua\n\nOuvrez les.\n\nVous pouvez trouver l'imprimante d'argent par d\u00e9faut dans darkrp/entities/money_printer.\nCopier le contenu de ces fichiers dans les fichiers que vous avez cr\u00e9ez (le code de money_printer/cl_init.lua dans something_moneyprinter/cl_init.lua , etc..)\n\nAssurez-vous que le contenu des trois fichiers sont bien pr\u00e9sents avant de commencer \u00e0 modifier l'imprimante d'argent !\n\nPour obtenir une imprimante d'argent fonctionnelle, ouvrez darkrpmodification-master/lua/darkrp_customthings/entities.lua.\nAjoutez une entit\u00e9 pour votre imprimante d'argent personnalis\u00e9e.\n\n== Modifier son imprimante ==\ncl_init.lua est le code du client pour l'imprimante d'argent (le HUD de l'imprimante en quelque sorte, et d'autres \u00e9l\u00e9ments). Vous pouvez changer le texte \"Money Printer\" et mettre ce que vous voulez, vous pouvez tout changer entre les tags de couleurs (.....) pour changer la couleur. Vous pouvez changer la police pour autre chose, mais assurez-vous qu'elle existe.\n\ninit.lua est le code du serveur. Le SeizeReward en haut est combien d'argent gagne les officiers de police lorsqu'ils frappent les imprimantes d'argent avec leur stunstick.\nVous pouvez mettre le model de l'imprimante d'argent au choix dans la ligne o\u00f9 il est \u00e9crit self:SetModel(\"LE MODEL\"). \nLa ligne self.damage dit combien de vie l'imprimante a. Augmentez la valeur pour lui faire augmenter sa vie et diminuer ses chances d'explosion.\n\nLes lignes o\u00f9 sont \u00e9crits DarkRP.notify sont les messages envoy\u00e9s au joueur. Vous pouvez changer le texte dans ces messages.\n\nLa fonction ENT:CreateMoneybag() a quelque chose d'int\u00e9r\u00e9ssant, par d\u00e9faut la chance est de 22 que l'imprimante prenne feu. Changer le num\u00e9ro et vous pouvez changer la chance que cela explose.\nLe montant est combien d'argent votre imprimante fabrique. Par d\u00e9faut cela utilise la valeur de la configuration. Si vous changez GAMEMODE.Config.mprintamount \u00e0 1000 par exemple, cela fabriquera 1 000 dollars.\n\nLa ligne o\u00f9 il est \u00e9crit timer.Simple(math.random(blah, blah est le temps que \u00e7a prend pour fabriquer de l'argent. Par d\u00e9faut c'est au hasard entre 100 et 350 secondes. Changez ses num\u00e9ros et vous aurez un temps diff\u00e9rent pour une fabrication d'argent. Assurez-vous que le premier nombre est plus petit que le second (c'est \u00e9vident). Si vous faites une erreur, le code va vous faire une erreur.\n\nshared.lua a le nom de l'imprimante et de l'auteur. Ne changez pas la ligne \"Base\" ou \"Type\", \u00e7a va vous attirer des probl\u00e8mes. Ne changez pas les num\u00e9ros dans les lignes qui disent self:NetworkVar. Ces nombres ne signifient pas ce que vous pensez qu'ils signifient. Les changer vous fera cr\u00e9er des probl\u00e8mes Lua.",
            "timestamp": "2020-07-23 18:08:07"
        }
    },
    "LUA:DarkRP Chat Command": {
        "en": {
            "content": "__NOTOC__\n{{Article|\ncategory = Lua |\nname = DarkRP Chat Command |\nauthor = [[User:KillerLUA|KillerLUA]]|\ndate = April 25, 2010 |\nupdated = August 19, 2013 |\ndescription = How to create a new chat command for DarkRP 2.5.0.}}\n{{Languages|en=LUA:DarkRP Chat Command|fr=LUA:DarkRP Chat Command:fr}}\n__TOC__\n\n==Introduction==\n\nWelcome to the tutorial, in this tutorial. I will be showing you how to add a new chat command that creates money from nothing!\n\n==Setting up the files==\n\nThe following code should be placed in a serverside file in a module. See [[Creating modules]] for more.\n\n==Coding it==\n\nAdd the following code inside your ''serverside'' file:\n\n{{Code|1=\nlocal function CreateCash(ply, args)\n\tif args == \"\" or not tonumber(args) then return \"\" end\n\t\n\tlocal amount = math.floor(tonumber(args))\n\n\tif amount <= 1 then\n\t\tDarkRP.notify(ply, 1, 4, DarkRP.getPhrase(\"invalid_x\", DarkRP.getPhrase(\"arguments\"), \"\"))\n\t\treturn \"\"\n\tend\n\t\n\tif ply:IsSuperAdmin() then\n\t\tply:ChatPrint(\"You created \" .. DarkRP.formatMoney(amount) .. \"!\")\n\telse\n\t\tply:ChatPrint(\"You are not authorized to use this chat command!\")\n\t\treturn \"\"\n\tend\n\n\tlocal trace = {}\n\ttrace.start = ply:EyePos()\n\ttrace.endpos = trace.start + ply:GetAimVector() * 85\n\ttrace.filter = ply\n\n\tlocal tr = util.TraceLine(trace)\n\tDarkRP.createMoneyBag(tr.HitPos, amount)\n\n\treturn \"\"\nend\nDarkRP.defineChatCommand(\"createcash\", CreateCash)\nDarkRP.defineChatCommand(\"createmoney\", CreateCash)\n}}\n\nAnd this in a ''shared'' file:\n\n{{Code|1=\nDarkRP.declareChatCommand{\n\tcommand = \"createcash\",\n\tdescription = \"Create cash!\",\n\tdelay = 1.5\n}\nDarkRP.declareChatCommand{\n\tcommand = \"createmoney\",\n\tdescription = \"Create cash!\",\n\tdelay = 1.5\n}\n}}\n\nLet's take the code apart\n\nFirst, we check if the player has provided anything and if it is a numeric value, e.g. /dropmoney <Amount>\n\n{{Code|1=\nif args == \"\" or not tonumber(args) then return \"\" end\n}}\n\nNext, we check if the value they are trying to create is lower than 1, or if the player that is trying to create cash, is not a superadmin.\n\n{{Code|1=\nlocal amount = math.floor(tonumber(args))\n\nif amount <= 1 then\n\tDarkRP.notify(ply, 1, 4, DarkRP.getPhrase(\"invalid_x\", DarkRP.getPhrase(\"arguments\"), \"\"))\n\treturn \"\"\nend\n\t\nif ply:IsSuperAdmin() then\n\tply:ChatPrint(\"You created \" .. DarkRP.formatMoney(amount) .. \"!\")\nelse\n\tply:ChatPrint(\"You are not authorized to use this chat command!\")\n\treturn \"\"\nend\n}}\n\nNext, we create a trace object of where the playing is looking at...\n\n{{Code|1=\nlocal trace = {}\ntrace.start = ply:EyePos()\ntrace.endpos = trace.start + ply:GetAimVector() * 85\ntrace.filter = ply\n\nlocal tr = util.TraceLine(trace)\n}}\n\nAnd finally, we create the money using the trace information:\n\n{{Code|1=\nDarkRP.createMoneyBag(tr.HitPos, amount)\n}}\n\nWhen using DarkRP chat commands, you must return a empty string. Otherwise, all players will see the chatcommand and arguments in their chat boxes!\n\n{{Code|1=\nreturn \"\"\n}}\n\nWe then define the chat command, so it actually works:\n\n{{Code|1=\nDarkRP.defineChatCommand(\"createcash\", CreateCash)\nDarkRP.defineChatCommand(\"createmoney\", CreateCash)\n}}\n\nIn the shared file we then ''declare'' the command. This adds a delay to prevent spam and a short description that's used in the F1 help menu.\n\n{{Code|1=\nDarkRP.declareChatCommand{\n\tcommand = \"createcash\",\n\tdescription = \"Create cash!\",\n\tdelay = 1.5\n}\nDarkRP.declareChatCommand{\n\tcommand = \"createmoney\",\n\tdescription = \"Create cash!\",\n\tdelay = 1.5\n}\n}}\n\nIn this script, we add a chat command that creates cash from nothing.",
            "timestamp": "2020-07-23 18:08:07"
        },
        "fr": {
            "content": "{{Languages|en=LUA:DarkRP Chat Command|fr=LUA:DarkRP Chat Command:fr}}\n__TOC__\n\n==Commencer==\n\nLe code suivant doit \u00eatre plac\u00e9 dans un fichier serveur dans un module. Voir [[Creating modules:fr|ici]] pour plus d'informations \u00e0 ce sujet.\n\n==Coder==\n\nAjoutez le code suivant \u00e0 l'int\u00e9rieur de votre fichier ''serverside'' :\n\n{{Code|1=\nlocal function CreateCash(ply, args)\n\tif args == \"\" or not tonumber(args) then return \"\" end\n\t\n\tlocal amount = math.floor(tonumber(args))\n\n\tif amount <= 1 then\n\t\tDarkRP.notify(ply, 1, 4, DarkRP.getPhrase(\"invalid_x\", DarkRP.getPhrase(\"arguments\"), \"\"))\n\t\treturn \"\"\n\tend\n\t\n\tif ply:IsSuperAdmin() then\n\t\tply:ChatPrint(\"Vous creez \" .. DarkRP.formatMoney(amount) .. \"!\")\n\telse\n\t\tply:ChatPrint(\"Vous n'etes pas autorise a utiliser cette commande de chat !\")\n\t\treturn \"\"\n\tend\n\n\tlocal trace = {}\n\ttrace.start = ply:EyePos()\n\ttrace.endpos = trace.start + ply:GetAimVector() * 85\n\ttrace.filter = ply\n\n\tlocal tr = util.TraceLine(trace)\n\tDarkRP.createMoneyBag(tr.HitPos, amount)\n\n\treturn \"\"\nend\nDarkRP.defineChatCommand(\"createcash\", CreateCash)\nDarkRP.defineChatCommand(\"createmoney\", CreateCash)\n}}\n\nEt ceci dans un fichier ''shared'' :\n\n{{Code|1=\nDarkRP.declareChatCommand{\n\tcommand = \"createcash\",\n\tdescription = \"Creez de l'argent!\",\n\tdelay = 1.5\n}\nDarkRP.declareChatCommand{\n\tcommand = \"createmoney\",\n\tdescription = \"Creez de l'argent!\",\n\tdelay = 1.5\n}\n}}\n\nVoyons maintenant comment tout cela fonctionne.\n\nTout d'abord, nous v\u00e9rifions si le joueur a fourni quelque chose et si c'est une valeur num\u00e9rique, par exemple /dropmoney <montant>\n\n{{Code|1=\nif args == \"\" or not tonumber(args) then return \"\" end\n}}\n\nEnsuite, nous v\u00e9rifions sur la valeur qu'il essaie de cr\u00e9er est plus petite que 1, ou si le joueur qui essaie de cr\u00e9er de l'argent n'est pas un superadmin.\n\n{{Code|1=\nlocal amount = math.floor(tonumber(args))\n\nif amount <= 1 then\n\tDarkRP.notify(ply, 1, 4, DarkRP.getPhrase(\"invalid_x\", DarkRP.getPhrase(\"arguments\"), \"\"))\n\treturn \"\"\nend\n\t\nif ply:IsSuperAdmin() then\n\t\tply:ChatPrint(\"Vous creez \" .. DarkRP.formatMoney(amount) .. \"!\")\n\telse\n\t\tply:ChatPrint(\"Vous n'etes pas autorise a utiliser cette commande de chat !\")\n\t\treturn \"\"\n\tend\n}}\n\nEnsuite, nous cr\u00e9ons le fait que l'objet qui appara\u00eetra sera \u00e0 l'endroit o\u00f9 le joueur regarde... \n\n{{Code|1=\nlocal trace = {}\ntrace.start = ply:EyePos()\ntrace.endpos = trace.start + ply:GetAimVector() * 85\ntrace.filter = ply\n\nlocal tr = util.TraceLine(trace)\n}}\n\nEt finalement, nous cr\u00e9ons l'argent en utilisant l'information \"trace\" :\n\n{{Code|1=\nDarkRP.createMoneyBag(tr.HitPos, amount)\n}}\n\nQuand vous utilisez une commande de chat DarkRP, vous devez retourner une valeur vide. Sinon, tous les joueurs verront la commande de chat (ainsi que le montant) dans leurs chats !\n\n{{Code|1=\nreturn \"\"\n}}\n\nNous devons d\u00e9finir la commande \u00e0 \u00e9crire, donc cela fonctionne :\n{{Code|1=\nDarkRP.defineChatCommand(\"createcash\", CreateCash)\nDarkRP.defineChatCommand(\"createmoney\", CreateCash)\n}}\nDans le fichier ''shared'' (partag\u00e9) nous devons d\u00e9clarer la commande. Cela ajoute un d\u00e9lai pour pr\u00e9venir du spam et une courte description qui est utilis\u00e9 dans le menu d'aide F1.\nIn the shared file we then ''declare'' the command. This adds a delay to prevent spam and a short description that's used in the F1 help menu.\n\n{{Code|1=\nDarkRP.declareChatCommand{\n\tcommand = \"createcash\",\n\tdescription = \"Creez de l'argent!\",\n\tdelay = 1.5\n}\nDarkRP.declareChatCommand{\n\tcommand = \"createmoney\",\n\tdescription = \"Creez de l'argent!\",\n\tdelay = 1.5\n}\n}}\n\nDans ce script, nous avons ajout\u00e9 une commande de chat qui cr\u00e9e de l'argent.",
            "timestamp": "2020-07-23 18:08:07"
        }
    },
    "LUA:DarkRPVars": {
        "en": {
            "content": "{{Article |\ncategory = LUA |\nname = DarkRPVars |\nauthor = [[User:RalphORama|RalphORama]] |\nupdated = 14th December 2015 (creation) |\ndescription = Programming using DarkRPVars }}\n\n{{Example\n| Description = List of DarkRPVars\n| Code = \nDarkRP.registerDarkRPVar(\"AFK\", net.WriteBit, fn.Compose{tobool, net.ReadBit})\nDarkRP.registerDarkRPVar(\"AFKDemoted\", net.WriteBit, fn.Compose{tobool, net.ReadBit})\nDarkRP.registerDarkRPVar(\"money\",         net.WriteDouble, net.ReadDouble)\nDarkRP.registerDarkRPVar(\"salary\",        fp{fn.Flip(net.WriteInt), 32}, fp{net.ReadInt, 32})\nDarkRP.registerDarkRPVar(\"rpname\",        net.WriteString, net.ReadString)\nDarkRP.registerDarkRPVar(\"job\",           net.WriteString, net.ReadString)\nDarkRP.registerDarkRPVar(\"HasGunlicense\", net.WriteBit, fc{tobool, net.ReadBit})\nDarkRP.registerDarkRPVar(\"Arrested\",      net.WriteBit, fc{tobool, net.ReadBit})\nDarkRP.registerDarkRPVar(\"wanted\",        net.WriteBit, fc{tobool, net.ReadBit})\nDarkRP.registerDarkRPVar(\"wantedReason\",  net.WriteString, net.ReadString)\nDarkRP.registerDarkRPVar(\"agenda\",        net.WriteString, net.ReadString)\nDarkRP.registerDarkRPVar(\"zombieToggle\", net.WriteBit, fn.Compose{tobool, net.ReadBit})\nDarkRP.registerDarkRPVar(\"zPoints\", function(zSpawns) ... end)\nDarkRP.registerDarkRPVar(\"hasHit\", net.WriteBit, fn.Compose{tobool, net.ReadBit})\nDarkRP.registerDarkRPVar(\"hitTarget\", net.WriteEntity, net.ReadEntity)\nDarkRP.registerDarkRPVar(\"hitPrice\", fn.Curry(fn.Flip(net.WriteInt), 2)(32), fn.Partial(net.ReadInt, 32))\nDarkRP.registerDarkRPVar(\"lastHitTime\", fn.Curry(fn.Flip(net.WriteInt), 2)(32), fn.Partial(net.ReadInt, 32))\nDarkRP.registerDarkRPVar(\"Energy\", net.WriteFloat, net.ReadFloat)\n\n| Output = This code is part of DarkRP, it registers all DarkRPVars\n}}",
            "timestamp": "2020-07-23 18:08:07"
        }
    },
    "LUA:Demote Upon Death": {
        "en": {
            "content": "{{Article|\ncategory = Lua |\nname = Demote Upon Death |\nauthor = [[User:Pawsative|Pawsative]] |\ndate = August 17, 2013  |\nupdated = April 5, 2014 |\ndescription = Demote upon death }}\n\n{{Languages|en=LUA:Demote Upon Death|fr=LUA:Demote Upon Death:fr}}\n\n{{TOC right}}\n\n==Introduction==\n\nWelcome to the tutorial, in this tutorial, I will show you how to demote a player as soon as they die.\n\n==Setting up the files==\n\n===Gamemode===\n\nOpen jobs.lua in lua/darkrp_customthings in your DarkRP modification addon (see [[DarkRP:ModifyingDarkRP|here]]).\n\n==Coding it==\n\nWhen you're in jobs.lua, find the job you want the player to be demoted from when they're killed. If it is a default job then copy the job from DarkRP's default jobrelated.lua and disable the default job in lua/darkrp_config/disabled_defaults.lua. Then add this:\n\n{{Code|1=\n\tPlayerDeath = function(ply, weapon, killer)\n\t\tply:teamBan()\n\t\tply:changeTeam(GAMEMODE.DefaultTeam, true)\n\t\tif killer:IsPlayer() then\n\t\t\tDarkRP.notifyAll(0, 4, \"The mayor has been killed and is therefor demoted.\")\n\t\telse\n\t\t\tDarkRP.notifyAll(0, 4, \"The mayor has died and is therefor demoted.\")\n\t\tend\n\tend\n}}\n\nSo full team should look something like this:\n\n{{Code|1=\nTEAM_MAYOR = DarkRP.createJob(\"Mayor\", {\n\tcolor = Color(150, 20, 20, 255),\n\tmodel = \"models/player/breen.mdl\",\n\tdescription = [[The Mayor of the city creates laws to serve the greater good\n\tof the people.\n\tIf you are the mayor you may create and accept warrants.\n\tType /wanted <name>  to warrant a player\n\tType /jailpos to set the Jail Position\n\tType /lockdown initiate a lockdown of the city.\n\tEveryone must be inside during a lockdown.\n\tThe cops patrol the area\n\t/unlockdown to end a lockdown]],\n\tweapons = {},\n\tcommand = \"mayor\",\n\tmax = 1,\n\tsalary = GAMEMODE.Config.normalsalary * 1.89,\n\tadmin = 0,\n\tvote = true,\n\thasLicense = false,\n\tmayor = true,\n\tcategory = \"Civil Protection\",\n\tPlayerDeath = function(ply, weapon, killer)\n\t\tply:teamBan()\n\t\tply:changeTeam(GAMEMODE.DefaultTeam, true)\n\t\tif killer:IsPlayer() then\n\t\t\tDarkRP.notifyAll(0, 4, \"The mayor has been killed and is therefor demoted.\")\n\t\telse\n\t\t\tDarkRP.notifyAll(0, 4, \"The mayor has died and is therefor demoted.\")\n\t\tend\n\tend\n})\n}}\n\nWhen the mayor dies, he will be demoted.",
            "timestamp": "2021-06-04 23:21:46"
        },
        "fr": {
            "content": "{{Languages|en=LUA:Demote Upon Death|fr=LUA:Demote Upon Death:fr}}\n\n{{TOC right}}\n\n===Gamemode===\n\nOuvrez jobs.lua dans lua/darkrp_customthings dans votre addon DarkRP modification (voir [[DarkRP:ModifyingDarkRP:fr|ici]]).\n\n==Coding it==\n\nQuand vous \u00eates dans jobs.lua, cherchez le job que vous voulez demote du job quand il meurt. Si c'est un job par d\u00e9faut alors copiez le du fichier jobrelated.lua dans le DarkRP de base et d\u00e9sactivez le job par d\u00e9faut dans lua/darkrp_config/disabled_defaults.lua. Puis ajoutez cela:\n\n{{Code|1=\n\tPlayerDeath = function(ply, weapon, killer)\n\t\tply:teamBan()\n\t\tply:changeTeam(GAMEMODE.DefaultTeam, true)\n\t\tif killer:IsPlayer() then\n\t\t\tDarkRP.notifyAll(0, 4, \"Le maire a ete tue et est demote.\")\n\t\telse\n\t\t\tDarkRP.notifyAll(0, 4, \"Le maire est mort et a ete demote.\")\n\t\tend\n\tend\n}}\n\nDonc le job entier devrait ressembler \u00e0 \u00e7a:\n\n{{Code|1=\nTEAM_MAYOR = DarkRP.createJob(\"Maire\", {\n\tcolor = Color(150, 20, 20, 255),\n\tmodel = \"models/player/breen.mdl\",\n\tdescription = [[Le maire de la ville cree des lois pour le meilleur de la population.\n\tSi vous etes le maire vous pouvez creer et accepter des mandats.\n\tEcrivez /wanted <name>  pour rechercher un joueur.\n\tEcrivez /jailpos pour mettre la position de la jail.\n\tEcrivez /lockdown pour initier un couvre-feu dans la ville.\n\tTout le monde doit etre chez soi durant un couvre-feu.\n\tLes policiers controlent la ville.\n\t/unlockdown pour terminer un couvre-feu]],\n\tweapons = {},\n\tcommand = \"maire\",\n\tmax = 1,\n\tsalary = GAMEMODE.Config.normalsalary * 1.89,\n\tadmin = 0,\n\tvote = true,\n\thasLicense = false,\n\tmayor = true,\n\tPlayerDeath = function(ply, weapon, killer)\n\t\tply:teamBan()\n\t\tply:changeTeam(GAMEMODE.DefaultTeam, true)\n\t\tif killer:IsPlayer() then\n\t\t\tDarkRP.notifyAll(0, 4, \"Le maire a ete tue et est demote.\")\n\t\telse\n\t\t\tDarkRP.notifyAll(0, 4, \"Le maire est mort et a ete demote.\")\n\t\tend\n\tend\n})\n}}\n\nQuand le maire sera mort, il sera automatiquement expuls\u00e9 de son job.",
            "timestamp": "2020-07-23 18:08:08"
        }
    },
    "LUA:Modifying F4": {
        "en": {
            "content": "{{TOC right}}{{Languages|en=LUA:Modifying_F4|ru=LUA:Modifying_F4:ru|fr=LUA:Modifying_F4:fr}}\n=== Add a tab to the F4 menu ===\n{{Example\n| Description = Add your own tab to the F4 menu\n| Code = \nlocal function createMyTab()\n\tlocal tab = vgui.Create(\"whatever...\")\n\t-- Create the your tab here or something\n\treturn tab\nend\n\nhook.Add(\"F4MenuTabs\", \"addTab\", function()\n\t-- Add the tab to F4 (will be added as the last tab)\n\t-- DarkRP.addF4MenuTab(\"NAME OF TAB HERE\", vguiControlOfTab) returns the tab number of the added tab\n\tlocal tabNr = DarkRP.addF4MenuTab(\"My Custom Tab\", createMyTab())\n\n\n\t-- If you want it to move the tab to be before another, use this\n\t-- DarkRP.switchTabOrder(TabNumberOfTabYouWantToMove, TabNumberOfDestination)\n\tDarkRP.switchTabOrder(tabNr, 4)\nend)\n\n| Output = Your tab is added to the F4 menu\n}}\n=== Remove a tab from F4 ===\n{{Example\n| Description = Removes tab number 3\n| Code = \nhook.Add(\"F4MenuTabs\", \"removeTab\", function()\n\t-- the HUD tab is the fourth one\n\t-- DarkRP.removeF4MenuTab(TabNumber)\n\tDarkRP.removeF4MenuTab(3)\nend)\n\n| Output = Tab #3 is gone.\n}}",
            "timestamp": "2021-02-19 10:58:40"
        },
        "fr": {
            "content": "{{TOC right}}{{Languages|en=LUA:Modifying_F4|ru=LUA:Modifying_F4:ru|fr=LUA:Modifying_F4:fr}}\n=== Ajouter un onglet au menu F4 ===\n{{Example\n| Description = Ajouter votre onglet au menu F4\n| Code = \nlocal function createMyTab()\n\tlocal tab = vgui.Create(\"cequevousvoulez...\")\n\t-- Cr\u00e9ez votre onglet ici ou quelque chose\n\treturn tab\nend\n\nhook.Add(\"F4MenuTabs\", \"addTab\", function()\n\t-- Ajouter l'onglet au menu F4 (sera ajout\u00e9 en dernier onglet)\n\t-- DarkRP.addF4MenuTab(\"NOM DE L'ONGLET ICI\", vguiControlOfTab) retourne le num\u00e9ro de l'onglet de l'onglet ajout\u00e9\n\tlocal tabNr = DarkRP.addF4MenuTab(\"Mon onglet\", createMyTab())\n\n\n\t-- Si vous voulez modifier l'ordre des onglets, utilisez ceci\n\t-- DarkRP.switchTabOrder(NumeroOngletDeLaTableQueVousVoulezBouger, NumeroDestinationOnglet)\n\tDarkRP.switchTabOrder(tabNr, 4)\nend)\n\n| Output = Votre onglet est ajout\u00e9 au menu F4\n}}\n=== Supprimer un onglet du menu F4 ===\n{{Example\n| Description = Supprimer l'onglet 4\n| Code = \nhook.Add(\"F4MenuTabs\", \"removeTab\", function()\n\t-- l'onglet HUD est le quatri\u00e8me\n\t-- DarkRP.removeF4MenuTab(NumeroOnglet)\n\tDarkRP.removeF4MenuTab(4)\nend)\n\n| Output = L'onglet #4 est supprim\u00e9.\n}}",
            "timestamp": "2020-07-23 18:08:08"
        },
        "ru": {
            "content": "{{TOC right}}{{Languages|en=LUA:Modifying_F4|ru=LUA:Modifying_F4:ru|fr=LUA:Modifying_F4:fr}}\n=== \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0432\u043a\u043b\u0430\u0434\u043a\u0438 \u0432 \u043c\u0435\u043d\u044e \u043d\u0430 F4 ===\n{{Example:ru\n| Description = \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u0432\u043e\u0435\u0439 \u0432\u043a\u043b\u0430\u0434\u043a\u0438 \u0432 \u043c\u0435\u043d\u044e \u043d\u0430 F4\n| Code = \nlocal function createMyTab()\n\tlocal tab = vgui.Create(\"whatever...\")\n\t-- \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u0434\n\treturn tab\nend\n\nhook.Add(\"F4MenuTabs\", \"addTab\", function()\n\t-- \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0432\u043a\u043b\u0430\u0434\u043a\u0438 \u0432 F4-\u043c\u0435\u043d\u044e (\u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0430 \u0432 \u043a\u043e\u043d\u0435\u0446)\n\t-- DarkRP.addF4MenuTab(\"\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\", vguiControlOfTab) \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u0435\u0440\u043d\u0451\u0442 \u043d\u043e\u043c\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u043a\u043b\u0430\u0434\u043a\u0430 \u0438\u043c\u0435\u0435\u0442 \u0432 \u043c\u0435\u043d\u044e\n\tlocal tabNr = DarkRP.addF4MenuTab(\"\u041c\u043e\u044f \u0432\u043a\u043b\u0430\u0434\u043a\u0430\", createMyTab())\n\n\n\t-- \u042f \u0445\u043e\u0447\u0443, \u0447\u0442\u043e\u0431\u044b \u044d\u0442\u0430 \u0432\u043a\u043b\u0430\u0434\u043a\u0430 \u0431\u044b\u043b\u0430 \u043f\u0435\u0440\u0435\u0434 HUD-\u0432\u043a\u043b\u0430\u0434\u043a\u043e\u0439 (\u0447\u0451\u0442\u0432\u0451\u0440\u0442\u043e\u0439 \u043f\u043e \u0441\u0447\u0451\u0442\u0443)\n\t-- DarkRP.switchTabOrder(TabNumberOfFirstTab, TabNumberOfSecondTab)\n\tDarkRP.switchTabOrder(tabNr, 4)\nend)\n\n| Output = \u041f\u043e\u0441\u043b\u0435 \u0432\u0441\u0442\u0430\u0432\u043a\u0438 \u043a\u043e\u0434\u0430, \u0432\u0430\u0448\u0430 \u0432\u043a\u043b\u0430\u0434\u043a\u0430 \u043f\u043e\u044f\u0432\u0438\u0442\u044c\u0441\u044f \u0432 F4-\u043c\u0435\u043d\u044e.\n}}\n\n=== \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0432\u043a\u043b\u0430\u0434\u043e\u043a \u0438\u0437 \u043c\u0435\u043d\u044e \u043d\u0430 F4 ===\n{{Example:ru\n| Description = \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0432\u043a\u043b\u0430\u0434\u043a\u0438 HUD\n| Code = \nhook.Add(\"F4MenuTabs\", \"removeTab\", function()\n\t-- \u041a\u0430\u043a\u0430\u044f-\u0442\u043e \u0432\u043a\u043b\u0430\u0434\u043a\u0430 \u0438\u043c\u0435\u0435\u0442 \u043d\u043e\u043c\u0435\u0440 4 \u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0435\u0451 \u0443\u0434\u0430\u043b\u0438\u0442\u044c\n\t-- DarkRP.removeF4MenuTab(TabNumber)\n\tDarkRP.removeF4MenuTab(4)\nend)\n\n| Output = \u0412\u043a\u043b\u0430\u0434\u043a\u0430 \u043f\u043e\u0434 \u043d\u043e\u043c\u0435\u0440\u043e\u043c 4 \u0431\u0443\u0434\u0435\u0442 \u0443\u0434\u0430\u043b\u0435\u043d\u0430\n}}",
            "timestamp": "2020-07-23 18:08:08"
        }
    },
    "LUA:Pay Day Baton": {
        "en": {
            "content": "{{Article|\ncategory = Lua |\nname = Pay Day Baton |\nauthor = [[User:KillerLUA|KillerLUA]] |\ndate = March 13, 2010  |\nupdated = December 26, 2014 |\ndescription = How to create a pay day baton. }}\n\n{{Languages|en=LUA:Pay Day Baton|fr=LUA:Pay Day Baton:fr}}\n\n{{TOC right}}\n\n==Introduction==\n\nWelcome to the tutorial, in this tutorial. I will not only be showing you how to make a swep, I will be showing you one that uses custom meta functions!\n\n==Setting up the files==\n\nCreate a new file called shared.lua inside the DarkRP modification addon in lua/weapons/pay_day_baton (see [[DarkRP:ModifyingDarkRP|here]]).\n\n==Coding it==\n\nAdd the following code into shared.lua:\n\n{{Code|1=\nAddCSLuaFile()\n \nif CLIENT then --Client stuff\n\tSWEP.PrintName = \"Pay Day Baton\" --Name\n\tSWEP.Slot = 1\n\tSWEP.SlotPos = 3\n\tSWEP.DrawAmmo = false --Draw ammo in bottom right corner\n\tSWEP.DrawCrosshair = false --Draw crosshair?\nend\n \nSWEP.Author = \"KillerLUA\" --Author\nSWEP.Instructions = \"Left or right click to give the player a pay day\" --How to use\nSWEP.Contact = \"\" --Contact\nSWEP.Purpose = \"Gives people paydays\" --Purpose\n \nSWEP.ViewModelFOV = 62\nSWEP.ViewModelFlip = false\nSWEP.AnimPrefix = \"stunstick\"\n \nSWEP.Spawnable = true\nSWEP.AdminOnly = true --Only spawnable by admins!\n \nSWEP.NextStrike = 0\n \nSWEP.ViewModel = Model(\"models/weapons/v_stunstick.mdl\") --The model while being held\nSWEP.WorldModel = Model(\"models/weapons/w_stunbaton.mdl\") --World model (on the ground)\n \nSWEP.Sound = Sound(\"weapons/stunstick/stunstick_swing1.wav\") --The sound\n \nSWEP.Primary.ClipSize = -1\nSWEP.Primary.DefaultClip = 0\nSWEP.Primary.Automatic = false \nSWEP.Primary.Ammo = \"\"\n \nSWEP.Secondary.ClipSize = -1\nSWEP.Secondary.DefaultClip = 0\nSWEP.Secondary.Automatic = false\nSWEP.Secondary.Ammo = \"\"\n \nfunction SWEP:Initialize()\n\tself:SetHoldType(\"normal\")\nend\n \nfunction SWEP:PrimaryAttack()\n\tif CurTime() < self.NextStrike then return end\n \n\tself:SetHoldType(\"normal\")\n\ttimer.Simple(0.3, function() if self:IsValid() then self:SetHoldType(\"normal\") end end) --Checks that the swep hasn't quickly been switched\n\n\tself.Owner:SetAnimation(PLAYER_ATTACK1)\n\tself.Weapon:EmitSound(self.Sound) ---Emit a sound, the stunstick wack\n\tself.Weapon:SendWeaponAnim(ACT_VM_HITCENTER)\n \n\tself.NextStrike = CurTime() + 0.51\n \n\tif CLIENT then return end --No clients past here\n \n\tself.Owner:LagCompensation(true)\n\tlocal trace = util.QuickTrace(self.Owner:EyePos(), self.Owner:GetAimVector() * 90, {self.Owner})\n\tself.Owner:LagCompensation(false)\n\n\tlocal ent = self.Owner:getEyeSightHitEntity(nil, nil, function(p) return p ~= self.Owner and p:IsPlayer() and p:Alive() end)\n\n        if not IsValid(ent) or (self.Owner:EyePos():Distance(ent:GetPos()) > 90) or (not ent:IsPlayer() and not ent:IsNPC()) then\n\t\treturn\n\tend\n\n\tent:payDay() --Give them a payday\nend\n \nfunction SWEP:SecondaryAttack()\n\tself:PrimaryAttack() --Run Primary Attack\nend\n}}\n\nIn this script we create the stunstick animation and run payday on our victim.",
            "timestamp": "2020-07-23 18:08:08"
        },
        "fr": {
            "content": "{{Languages|en=LUA:Pay Day Baton|fr=LUA:Pay Day Baton:fr}}\n\n{{TOC right}}\n\n==Commencer==\n\nCr\u00e9ez un nouveau fichier appel\u00e9 shared.lua \u00e0 l'int\u00e9rieur de l'addon DarkRP modification dans lua/weapons/pay_day_baton (voir [[DarkRP:ModifyingDarkRP:fr|ici]]).\n\n==Code==\n\nAjoutez le code suivant dans shared.lua:\n\n{{Code|1=\nAddCSLuaFile()\n \nif CLIENT then --Client stuff\n\tSWEP.PrintName = \"Baton de jour de paie\" --Nom\n\tSWEP.Slot = 1\n\tSWEP.SlotPos = 3\n\tSWEP.DrawAmmo = false --Dessiner des munitions en bas \u00e0 droite dans le coin\n\tSWEP.DrawCrosshair = false --Dessiner le viseur?\nend\n \nSWEP.Author = \"KillerLUA\" --Auteur\nSWEP.Instructions = \"Clique gauche ou droit pour donner \u00e0 un joueur une paie\" --Comment l'utiliser\nSWEP.Contact = \"\" --Contact\nSWEP.Purpose = \"Donne au joueur une paie\" --R\u00e9sum\u00e9\n \nSWEP.ViewModelFOV = 62\nSWEP.ViewModelFlip = false\nSWEP.AnimPrefix = \"stunstick\"\n \nSWEP.Spawnable = true\nSWEP.AdminOnly = true --Peut \u00eatre spawn uniquement par les admins !\n \nSWEP.NextStrike = 0\n \nSWEP.ViewModel = Model(\"models/weapons/v_stunstick.mdl\") --Le model dans les mains\nSWEP.WorldModel = Model(\"models/weapons/w_stunbaton.mdl\") --Le World model (quand il est par terre)\n \nSWEP.Sound = Sound(\"weapons/stunstick/stunstick_swing1.wav\") --Le son\n \nSWEP.Primary.ClipSize = -1\nSWEP.Primary.DefaultClip = 0\nSWEP.Primary.Automatic = false \nSWEP.Primary.Ammo = \"\"\n \nSWEP.Secondary.ClipSize = -1\nSWEP.Secondary.DefaultClip = 0\nSWEP.Secondary.Automatic = false\nSWEP.Secondary.Ammo = \"\"\n \nfunction SWEP:Initialize()\n\tself:SetHoldType(\"normal\")\nend\n \nfunction SWEP:PrimaryAttack()\n\tif CurTime() < self.NextStrike then return end\n \n\tself:SetHoldType(\"normal\")\n\ttimer.Simple(0.3, function() if self:IsValid() then self:SetHoldType(\"normal\") end end) --Regarder si le SWEP n'a pas \u00e9t\u00e9 chang\u00e9 rapidement\n\n\tself.Owner:SetAnimation(PLAYER_ATTACK1)\n\tself.Weapon:EmitSound(self.Sound) ---Ajoute un son, ici celui du stunstick\n\tself.Weapon:SendWeaponAnim(ACT_VM_HITCENTER)\n \n\tself.NextStrike = CurTime() + 0.51\n \n\tif CLIENT then return end --Pas de clients coll\u00e9s ici\n \n\tself.Owner:LagCompensation(true)\n\tlocal trace = util.QuickTrace(self.Owner:EyePos(), self.Owner:GetAimVector() * 90, {self.Owner})\n\tself.Owner:LagCompensation(false)\n\n\tlocal ent = self.Owner:getEyeSightHitEntity(nil, nil, function(p) return p ~= self.Owner and p:IsPlayer() and p:Alive() end)\n\n        if not IsValid(ent) or (self.Owner:EyePos():Distance(ent:GetPos()) > 90) or (not ent:IsPlayer() and not ent:IsNPC()) then\n\t\treturn\n\tend\n\n\tent:payDay() --Donner une paie\nend\n \nfunction SWEP:SecondaryAttack()\n\tself:PrimaryAttack() --Lancer le clique gauche\nend\n}}\n\nDans ce script nous avons cr\u00e9er l'animation du stunstick qui permet de d\u00e9clencher un jour de paie sur la victime.",
            "timestamp": "2020-07-23 18:08:08"
        }
    },
    "LUA:Physgunable Entities": {
        "en": {
            "content": "=== Physgun Override ===\n{{Example\n| Description = Make the entity's owner (or admins) able to physgun your entity.\n| Code = \n\nfunction ENT:PhysgunPickup(ply, ent)\n    return (ply == self:Getowning_ent()) or ply:IsAdmin()\nend\n| Output = Admins and the entity's owner may physgun it.\n}}",
            "timestamp": "2020-07-23 18:08:08"
        }
    },
    "LUA:Remove FAdmin": {
        "en": {
            "content": "{{Languages|en=LUA:Remove FAdmin|ru=LUA:Remove FAdmin:ru|fr=LUA:Remove FAdmin:fr}}\n\nFirst of all, '''don't remove any FAdmin files'''. DarkRP depends on them, don't be an idiot. Do it right.\n\nSecondly, there used to be a different guide here that told you to make a Lua script that would disable FAdmin. That's actually a terrible way of doing it. It doesn't really disable FAdmin. It just disables the FAdmin scoreboard. People have reported several problems with that method.\n\n== How to do it ==\n1. Make sure the DarkRPMod is installed\n\n2. In the darkrpmod, open ''lua\\darkrp_config\\disabled_defaults.lua'' with a text editor (preferably Sublime text or Notepad++, the Windows notepad program tends to mess things up)\n\n3. In that file you should see something like this:\n\n{{Code|1=\n/*---------------------------------------------------------------------------\nThe list of modules that are disabled. Set to true to disable, false to enable.\nModules that are not in this list are enabled by default.\n---------------------------------------------------------------------------*/\nDarkRP.disabledDefaults[\"modules\"] = {\n\t[\"afk\"]              = true,\n\t[\"chatsounds\"]       = false,\n\t[\"events\"]           = true,\n\t[\"fpp\"]              = false,\n\t[\"f1menu\"]           = true,\n\t[\"f4menu\"]           = true,\n\t[\"hitmenu\"]          = true,\n\t[\"hud\"]              = false,\n\t[\"hungermod\"]        = true,\n\t[\"playerscale\"]      = true,\n\t[\"sleep\"]            = true,\n\t[\"fadmin\"]           = true,\n}\n}}\n\n4. Simply change the \"false\" next to [\"fadmin\"] to \"true\". After you're done, that line should look like this:\n\n{{Code|1=\n\t[\"fadmin\"]           = true,\n}}\n\n5. Done.",
            "timestamp": "2020-10-31 09:07:26"
        },
        "fr": {
            "content": "{{Languages|en=LUA:Remove FAdmin|ru=LUA:Remove FAdmin:ru|fr=LUA:Remove FAdmin:fr}}\n\nTout d'abord, '''ne supprimez aucun fichier FAdmin'''. DarkRP d\u00e9pend de FAdmin, ne soyez pas idiot. Faites le proprement.\n\nEnsuite, sachez qu'il existe un guide diff\u00e9rent qui vous montre comment faire un script Lua et d\u00e9sactiver FAdmin. C'est une fa\u00e7on terrible de le faire. \u00c7a ne d\u00e9sactive pas vraiment FAdmin, mais uniquement le tableau de bord. Les personnes reportent de nombreux probl\u00e8mes avec cette m\u00e9thode.\n\n== Comment faire ==\n1. Assurez vous que le mod DarkRP est install\u00e9\n\n2. Dans le mod DarkRP, ouvrez ''lua\\darkrp_config\\disabled_defaults.lua'' avec un \u00e9diteur de texte (de pr\u00e9f\u00e9rence Sublime text ou Notepad++, le bloc-notes de Windows a tendance \u00e0 mettre des lignes vers le haut).\n\n3. Dans ce fichier, vous devriez quelque chose comme \u00e7a :\n\n{{Code|1=\n/*---------------------------------------------------------------------------\nThe list of modules that are disabled. Set to true to disable, false to enable.\nModules that are not in this list are enabled by default.\n---------------------------------------------------------------------------*/\nDarkRP.disabledDefaults[\"modules\"] = {\n\t[\"afk\"]              = true,\n\t[\"chatsounds\"]       = false,\n\t[\"events\"]           = false,\n\t[\"fpp\"]              = false,\n\t[\"f1menu\"]           = false,\n\t[\"f4menu\"]           = false,\n\t[\"hitmenu\"]          = false,\n\t[\"hud\"]              = false,\n\t[\"hungermod\"]        = true,\n\t[\"playerscale\"]      = false,\n\t[\"sleep\"]            = false,\n\t[\"fadmin\"]           = false,\n}\n}}\n\n4. Changez simplement le \"false\" \u00e0 c\u00f4t\u00e9 de [\"fadmin\"] \u00e0 \"true\". Apr\u00e8s l'avoir fait, la ligne devrait ressembl\u00e9 \u00e0 \u00e7a :\n\n{{Code|1=\n\t[\"fadmin\"]           = true,\n}}\n\n5. C'est termin\u00e9.",
            "timestamp": "2020-07-23 18:08:09"
        },
        "ru": {
            "content": "{{Languages|en=LUA:Remove FAdmin|ru=LUA:Remove FAdmin:ru|fr=LUA:Remove FAdmin:fr}}\n\n\u0412\u043e-\u043f\u0435\u0440\u0432\u044b\u0445, '''\u043d\u0435 \u0443\u0434\u0430\u043b\u044f\u0439\u0442\u0435 \u043d\u0438\u043a\u0430\u043a\u0438\u0435 \u0444\u0430\u0439\u043b\u044b FAdmin'''. DarkRP \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u043d\u0438\u0445, \u043d\u0435 \u0431\u0443\u0434\u044c\u0442\u0435 \u0441\u0442\u0440\u0430\u043d\u043d\u044b\u043c. \u0414\u0435\u043b\u0430\u0439\u0442\u0435 \u044d\u0442\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e.\n\n\u0412\u043e-\u0432\u0442\u043e\u0440\u044b\u0445, \u0440\u0430\u043d\u044c\u0448\u0435 \u0437\u0434\u0435\u0441\u044c \u0431\u044b\u043b \u0434\u0440\u0443\u0433\u043e\u0439 \u0433\u0430\u0439\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0431\u044a\u044f\u0441\u043d\u044f\u043b \u043a\u0430\u043a \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u044c FAdmin \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f Lua \u0441\u043a\u0440\u0438\u043f\u0442\u0430. \u041d\u0430 \u0441\u0430\u043c\u043e\u043c \u0434\u0435\u043b\u0435 \u044d\u0442\u043e \u0431\u044b\u043b \u0443\u0436\u0430\u0441\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0438\u043a\u043e\u0433\u0434\u0430, \u043f\u043e \u0441\u0443\u0442\u0438, \u0438 \u043d\u0435 \u043e\u0442\u043a\u043b\u044e\u0447\u0430\u043b FAdmin, \u0435\u0441\u043b\u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u043b\u0438\u0448\u044c \u0435\u0433\u043e Scoreboard. \u0414\u0430 \u0438 \u043b\u044e\u0434\u0438 \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u043e \u0436\u0430\u043b\u043e\u0432\u0430\u043b\u0438\u0441\u044c \u043d\u0430 \u043e\u0448\u0438\u0431\u043a\u0438, \u0432\u043e\u0437\u043d\u0438\u043a\u0430\u044e\u0449\u0438\u0435 \u043f\u043e\u0441\u043b\u0435 \"\u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f\" FAdmin.\n\n== \u041a\u0430\u043a \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c ==\n1. \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e [https://github.com/FPtje/darkrpmodification DarkRPMod] \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\n\n2. \u0412 darkrpmod, \u043e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b ''lua\\darkrp_config\\disabled_defaults.lua'' \u0432 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u043c \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0435 (\u043b\u0443\u0447\u0448\u0435 \u0447\u0435\u0440\u0435\u0437 Sublime \u0438\u043b\u0438 Notepad++, \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u0411\u043b\u043e\u043a\u043d\u043e\u0442 \u0437\u0434\u0435\u0441\u044c \u043d\u0435 \u043f\u043e\u0434\u043e\u0439\u0434\u0451\u0442)\n\n3. \u0412 \u0444\u0430\u0439\u043b\u0435 \u0432\u044b \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e \u0442\u0430\u043a\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043a\u043e\u0434\u0430:\n\n{{Code|1=\n/*---------------------------------------------------------------------------\nThe list of modules that are disabled. Set to true to disable, false to enable.\nModules that are not in this list are enabled by default.\n---------------------------------------------------------------------------*/\nDarkRP.disabledDefaults[\"modules\"] = {\n\t[\"afk\"]              = true,\n\t[\"chatsounds\"]       = false,\n\t[\"events\"]           = false,\n\t[\"fpp\"]              = false,\n\t[\"f1menu\"]           = false,\n\t[\"f4menu\"]           = false,\n\t[\"hitmenu\"]          = false,\n\t[\"hud\"]              = false,\n\t[\"hungermod\"]        = true,\n\t[\"playerscale\"]      = false,\n\t[\"sleep\"]            = false,\n\t[\"fadmin\"]           = false,\n}\n}}\n\n4. \u041f\u0440\u043e\u0441\u0442\u043e \u0443\u0431\u0435\u0440\u0438\u0442\u0435 \"false\" \u043d\u0430\u043f\u0440\u043e\u0442\u0438\u0432 [\"fadmin\"] \u0438 \u043d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \"true\". \u041f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e, \u0443 \u0432\u0430\u0441 \u0434\u043e\u043b\u0436\u043d\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0441\u044f \u0432\u043e\u0442 \u0442\u0430\u043a\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430:\n\n{{Code|1=\n\t[\"fadmin\"]           = true,\n}}\n\n5. \u0413\u043e\u0442\u043e\u0432\u043e.",
            "timestamp": "2020-07-23 18:08:09"
        }
    },
    "LUA:\u0421\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 Money \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u044b": {
        "en": {
            "content": "{{TOC right}}{{Languages|en=LUA:Custom Money Printer|ru=LUA:\u0421\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 Money \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u044b|fr=LUA:Custom Money Printer:fr}}\n\n\u042d\u0442\u043e\u0442 \u0442\u0443\u0442\u043e\u0440\u0438\u0430\u043b \u043f\u043e\u043a\u0430\u0436\u0435\u0442 \u0432\u0430\u043c \u043a\u0430\u043a \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0441\u0432\u043e\u0439 Money \u043f\u0440\u0438\u043d\u0442\u0435\u0440, \u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0435\u0441\u043b\u0438 \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0442\u043e \u044d\u0442\u043e\u0442 \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0441\u0442\u0430\u043d\u0435\u0442 \u043b\u0435\u0433\u0447\u0435.\n\n\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u043c\u043e\u0436\u0435\u0442 \u0432\u0430\u043c \u0432 \u0441\u043e\u0437\u0434\u0430\u043d\u0438 \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f Sublime Text. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u043a\u0430\u0447\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u0439\u0434\u044f \u043f\u043e \u044d\u0442\u043e\u0439 [http://www.sublimetext.com/ \u0441\u0441\u044b\u043b\u043a\u0435.]\n\n== \u041d\u0430\u0447\u0430\u043b\u043e ==\n\n\u0412 \u043f\u0430\u043f\u043a\u0435 darkrpmod/lua/entities/entities \u0441\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u043f\u0430\u043f\u043a\u0443 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c something_moneyprinter (\u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u0442\u044c \u0435\u0451 \u0435\u0441\u043b\u0438 \u0432\u0430\u043c \u044d\u0442\u043e \u043d\u0443\u0436\u043d\u043e).\n\n\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 3 lua \u0444\u0430\u0439\u043b\u0430:<br>\n* cl_init.lua<br>\n* init.lua<br>\n* shared.lua\n\n\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0438\u0445 \u0432 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u043c \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0435.\n\n\u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u043d\u0430\u0439\u0442\u0438 \u0444\u0430\u0439\u043b\u044b \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 Money \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u044b \u0432 \u043f\u0430\u043f\u043a\u0435 darkrp/entities/entities/money_printer.\n\u0421\u043a\u043e\u043f\u0438\u0440\u0443\u0439\u0442\u0435 \u0444\u0430\u0439\u043b\u044b \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 Money \u043f\u0440\u0438\u043d\u0442\u0435\u0440 \u0432 \u0432\u0430\u0448\u0443 \u043f\u0430\u043f\u043a\u0443 (\u0441\u043a\u043e\u043f\u0438\u0440\u0443\u0439\u0442\u0435 money_printer/cl_init.lua \u0432 something_moneyprinter/cl_init.lua \u0438 \u0442.\u0434.)\n\n\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c \u0447\u0442\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u0434 \u0442\u0435\u043c \u043a\u0430\u043a \u043d\u0430\u0447\u0430\u0442\u044c \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0441\u0432\u043e\u0438 \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u044b!\n\n\u0427\u0442\u043e \u0431\u044b \u0432\u0430\u0448\u0438 \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u044b \u0437\u0430\u0440\u0430\u0431\u043e\u0442\u0430\u043b\u0438, \u043e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 darkrpmod/lua/darkrp_customthings/entities.lua.\n\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 Entity \u0434\u043b\u044f \u0432\u0430\u0448\u0435\u0433\u043e Money \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u0430 (\u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u0437\u044f\u0442\u044c \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 Money \u043f\u0440\u0438\u043d\u0442\u0435\u0440).\n\n== \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u043e\u0432 (\u041a\u0430\u0441\u0442\u043e\u043c\u0438\u0437\u0430\u0446\u0438\u044f) ==\n'''cl_init.lua''' \u0438\u043c\u0435\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 (\u043f\u0438\u0448\u0435\u0442 \u0438 \u043f\u0435\u0447\u0430\u0442\u0430\u0435\u0442). \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0442\u0435\u043a\u0441\u0442 \"Money Printer\" \u043d\u0430 \u0447\u0442\u043e \u043d\u0438\u0431\u0443\u0434\u044c \u0434\u0440\u0443\u0433\u043e\u0435, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0432\u0441\u0435 \u043f\u043e\u0441\u0440\u0435\u0434\u0438 \u0442\u0435\u0433\u0430 Color(.....) \u0447\u0442\u043e \u0431\u044b \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0446\u0432\u0435\u0442. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0448\u0440\u0438\u0444\u0442, \u0442\u043e\u043b\u044c\u043a\u043e \u0443\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c \u0447\u0442\u043e \u043e\u043d \u0435\u0441\u0442\u044c \u0443 \u0432\u0430\u0441. \n\n\n'''init.lua''' \u0438\u043c\u0435\u0435\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f SeizeReward \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043b\u0438\u0446\u0435\u0439\u0441\u043a\u0438\u0435 \u043f\u043e\u043b\u0443\u0447\u0430\u0442 \u0437\u0430 \u0443\u043d\u0438\u0447\u0442\u043e\u0436\u0435\u043d\u0438\u0435 \u0432\u0430\u0448\u0435\u0433\u043e Money \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u0430 \u0435\u0441\u043b\u0438 \u0435\u0433\u043e \u0443\u043d\u0438\u0447\u0442\u043e\u0436\u0438\u0442\u044c Stunstick'\u043e\u043c. \n\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u0430 \u0435\u0441\u043b\u0438 \u0432\u043f\u0438\u0441\u0430\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c self:SetModel(\"\u0417\u0414\u0415\u0421\u042c \u0412\u041f\u0418\u0428\u0418\u0422\u0415 \u041c\u041e\u0414\u0415\u041b\u042c\"). \n\u041b\u0438\u043d\u0438\u044f \u0441 \u0442\u0435\u043a\u0441\u0442\u043e\u043c ''self.damage'' \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0425\u041f \u0443 \u0432\u0430\u0448\u0435\u0433\u043e Money \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u0430. \u0423\u0432\u0435\u043b\u0438\u0447\u044c\u0442\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0447\u0442\u043e \u0431\u044b \u043f\u043e\u0432\u044b\u0441\u0438\u0442\u044c \u0425\u041f, \u0438 \u043f\u043e\u043d\u0438\u0437\u044c\u0442\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0447\u0442\u043e \u0431\u044b \u043f\u043e\u043d\u0438\u0437\u0438\u0442\u044c \u0425\u041f.\n\u041b\u0438\u043d\u0438\u044f \u0433\u0434\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043e ''DarkRP.notify'' \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442 \u0438\u0433\u0440\u043e\u043a \u0435\u0441\u043b\u0438 \u0435\u0433\u043e \u043f\u0440\u0438\u043d\u0442\u0435\u0440 \u0441\u043b\u043e\u043c\u0430\u043b\u0441\u044f. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u043c\u0435\u043d\u044f\u0442\u044c \u0442\u0435\u043a\u0441\u0442.\n\n\n\u041b\u0438\u043d\u0438\u044f \u0441\u043e \u0441\u0442\u0440\u043e\u043a\u043e\u0439 ''ENT:CreateMoneybag() function'' \u0438\u043c\u0435\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u044b\u0445 \u0432\u0435\u0449\u0435\u0439, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0435\u0441\u0442\u044c \u0448\u0430\u043d\u0441 \u0447\u0442\u043e \u0432 1 \u0438\u0437 22 \u0441\u043b\u0443\u0447\u0430\u0435\u0432 \u043f\u0440\u0438\u043d\u0442\u0435\u0440 \u0437\u0430\u0433\u043e\u0440\u0438\u0442\u0441\u044f. \u0418\u0437\u043c\u0435\u043d\u0438\u0442\u0435 \u0447\u0438\u0441\u043b\u043e 22 \u0438 \u0432\u044b \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u0435 \u0448\u0430\u043d\u0441 \u0437\u0430\u0433\u043e\u0440\u0435\u0442\u044c\u0441\u044f.\n\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 ''amount'' \u044d\u0442\u043e \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432\u044b \u0431\u0443\u0434\u0435\u0442\u0435 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043e\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0438\u0437 \u043a\u043e\u043d\u0444\u0438\u0433\u043e\u0432. \u0415\u0441\u043b\u0438 \u0432\u044b \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 ''GAMEMODE.Config.mprintamount'' \u043d\u0430 1000, \u0442\u043e \u043f\u0440\u0438\u043d\u0442\u0435\u0440 \u043d\u0430\u043f\u0435\u0447\u0430\u0442\u0430\u0435\u0442 1000.\n\n\n\u041b\u0438\u043d\u0438\u044f \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043e ''timer.Simple(math.random(\u0431\u043b\u0430 \u0431\u043b\u0430 \u0431\u043b\u0430, \u0438 \u0434\u043b\u0438\u043d\u043d\u044b \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0447\u0442\u043e-\u0442\u043e \u043f\u0435\u0447\u0430\u0442\u0430\u0435\u0442''. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u044d\u0442\u043e \u0447\u0438\u0441\u043b\u043e \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442\u0441\u044f \u043e\u0442 100 \u0434\u043e 300 \u0441\u0435\u043a\u0443\u043d\u0434. \u0418\u0437\u043c\u0435\u043d\u0438\u0442\u0435 \u044d\u0442\u043e \u0447\u0438\u0441\u043b\u043e \u0438 \u0432\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0435 \u043d\u043e\u0432\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u043f\u0435\u0447\u0430\u0442\u0430\u043d\u0438\u044f. \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c \u0447\u0442\u043e \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u043c\u0435\u043d\u044c\u0448\u0435 \u0432\u0442\u043e\u0440\u043e\u0433\u043e. \u0418\u043d\u0430\u0447\u0435, Lua \u043f\u0440\u043e\u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0435\u0442 \u044d\u0442\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435.\n\n\n'''shared.lua''' \u0432\u043c\u0435\u0449\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u0430\u0434\u0434\u043e\u043d\u0435 \u0438 \u0435\u0433\u043e \u0430\u0432\u0442\u043e\u0440\u0435. \u041d\u0435 \u0438\u0437\u043c\u0435\u043d\u044f\u0439\u0442\u0435 '''Base''' \u0438\u043b\u0438 '''Type''', \u0438\u043b\u0438 \u0436\u0435 \u043e\u043d\u043e \u043d\u0435 \u0437\u0430\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442. \u041d\u0435 \u043c\u0435\u043d\u044f\u0439\u0442\u0435 \u0446\u0438\u0444\u0440\u044b \u0433\u0434\u0435 \u0441\u043a\u0430\u0437\u0430\u043d\u043e ''self:NetworkVar''. \u042d\u0442\u0438 \u0446\u0438\u0444\u0440\u044b \u043d\u0435 \u043e\u0437\u043d\u0430\u0447\u0430\u044e\u0442, \u0442\u043e \u0447\u0442\u043e \u0442\u044b \u0434\u0443\u043c\u0430\u0435\u0448\u044c. \u0418\u0437\u043c\u0435\u043d\u044f\u0442\u044c \u0438\u0445 \u043d\u0435 \u043d\u0430\u0434\u043e! \u0413\u0435\u043c\u043e\u0440\u043e\u0439.",
            "timestamp": "2020-07-23 18:08:09"
        }
    },
    "Lua/Classes/CRecipientFilter": {
        "en": {
            "content": "http://wiki.garrysmod.com/page/Category:CRecipientFilter\n\n==Usage==\n\nTo create a CRecipientFilter, use this simple global:\n\n{{Code|1=\nlocal recipientFilter = RecipientFilter()\n}}\n\nThat's it!",
            "timestamp": "2020-07-23 18:08:09"
        }
    },
    "Lua/Classes/Color": {
        "en": {
            "content": "#REDIRECT [[Lua/Structures/Color]]",
            "timestamp": "2020-07-23 18:08:09"
        }
    },
    "Lua/Classes/DarkRP": {
        "en": {
            "content": "#REDIRECT [[:Category:DarkRP]]",
            "timestamp": "2020-07-23 18:08:09"
        }
    },
    "Lua/Classes/Entity": {
        "en": {
            "content": "The Entity metatable is the table of functions you can run on an entity.\n\n== GMod functions ==\nThe default Garry's mod entity functions can be found here:\n<br />\nhttp://wiki.garrysmod.com/page/Entity\n\n== DarkRP functions == \nDarkRP's Entity functions can be found here:\n<br />\n[[:Category:Entity|The entity category]]",
            "timestamp": "2020-07-23 18:08:09"
        }
    },
    "Lua/Classes/Panel": {
        "en": {
            "content": "http://wiki.garrysmod.com/page/Category:Panel",
            "timestamp": "2020-07-23 18:08:10"
        }
    },
    "Lua/Classes/Player": {
        "en": {
            "content": "The player metatable is the table of functions you can run on a player.\n\n== GMod functions ==\nThe default Garry's mod Player functions can be found here:\n<br />\nhttp://wiki.garrysmod.com/page/Player\n\n== DarkRP functions == \nDarkRP's Player functions can be found here:\n<br />\n[[:Category:Player|The player category]]",
            "timestamp": "2020-07-23 18:08:10"
        }
    },
    "Lua/Classes/Player, table": {
        "en": {
            "content": "{{delete|Vandalism page (and blank now)}}",
            "timestamp": "2021-01-31 22:19:40"
        }
    },
    "Lua/Classes/Vector": {
        "en": {
            "content": "The Vector metatable is the table of functions you can run on a vector.\n\n== GMod functions ==\nThe default Garry's mod vector functions can be found here:\n<br />\nhttp://wiki.garrysmod.com/page/Vector\n\n== DarkRP functions == \nDarkRP's Vector functions can be found here:\n<br />\n[[:Category:Vector|The vector category]]",
            "timestamp": "2020-07-23 18:08:10"
        }
    },
    "Lua/Classes/Weapon": {
        "en": {
            "content": "http://wiki.garrysmod.com/page/Category:Weapon",
            "timestamp": "2020-07-23 18:08:10"
        }
    },
    "Lua/Classes/any": {
        "en": {
            "content": "Anything. Absolutely anything.",
            "timestamp": "2020-07-23 18:08:10"
        }
    },
    "Lua/Classes/boolean": {
        "en": {
            "content": "http://wiki.garrysmod.com/page/Category:boolean",
            "timestamp": "2020-07-23 18:08:10"
        }
    },
    "Lua/Classes/function": {
        "en": {
            "content": "http://www.lua.org/pil/5.html",
            "timestamp": "2020-07-23 18:08:10"
        }
    },
    "Lua/Classes/nil": {
        "en": {
            "content": "Nothing, nada.",
            "timestamp": "2020-07-23 18:08:10"
        }
    },
    "Lua/Classes/number": {
        "en": {
            "content": "http://wiki.garrysmod.com/page/Category:number",
            "timestamp": "2020-07-23 18:08:10"
        }
    },
    "Lua/Classes/string": {
        "en": {
            "content": "http://wiki.garrysmod.com/page/Category:string",
            "timestamp": "2020-07-23 18:08:10"
        }
    },
    "Lua/Classes/table": {
        "en": {
            "content": "http://wiki.garrysmod.com/page/Category:table",
            "timestamp": "2020-07-23 18:08:11"
        }
    },
    "Lua/Classes/vararg": {
        "en": {
            "content": "Multiple arguments. As many or as little as you wish.",
            "timestamp": "2020-07-23 18:08:11"
        }
    },
    "Lua/Structures/Color": {
        "en": {
            "content": "http://wiki.garrysmod.com/page/Structures/Color",
            "timestamp": "2020-07-23 18:08:11"
        }
    },
    "Main Page": {
        "en": {
            "content": "<div>\n<div style=\"position:relative;top:-52px;margin-bottom: -40px;float:right;text-align:right;padding:2px;line-height:11px; margin-top:5px;border:0;width:100%\">[[File:Jarvis-flag_8010.png]] [[Main_Page|'''English''']]  [[File:Russia-flag.png]] [[Main_Page:ru|'''\u0420\u0443\u0441\u0441\u043a\u0438\u0439''']] [[File:France-flag.png]] [[Main_Page:fr|'''Fran\u00e7ais''']]</div>\n\n{{TOC rightNew}}\n{{CatStartNewMain|About DarkRP}}\n<div>\n<div style=\"padding:3px; border-width:1px; border-radius:0px; border-left:3px #4dfa73 solid; background:#4dfa73; float:center; margin:-10px; padding-left:9px;\">\n<b>[https://github.com/FPtje/DarkRP Download the latest DarkRP!]</b>\n</div><br />\nDarkRP - a game mode for the popular game Garry's Mod with the idea of a simulation of urban life. You could become a gangster and rob people or perhaps become a police officer to protect the town from outlaws. You could open a gun shop or a pizzeria where you sell the most delicious food in town. Or you can become the mayor and manage the city, namely the police, urban economies and licensing people. Read more [[DarkRP|here]].<br><br>\n{{ButtonMainGreen|Bug Reports|Workshop Download|Official Discord}}\n</div>\n\n<div>\n{{CatStartNewMoreCategory|Lua Scripting}}\n{{CatItemNew|Gmodflatblack.png\u200e|:Category:Functions|Functions|Functions available in DarkRP}}\n{{CatItemNew|Gmodflatblack.png|:Category:Hooks|Hooks|Hooks available in DarkRP}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:CustomJobFields|Custom job fields|The customization fields of custom jobs}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:CustomShipmentFields|Custom shipment fields|The customization fields of custom shipments}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:CustomEntityFields|Custom entity fields|The customization fields of custom entities}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:Categories|Custom Categories|The customization of categories in DarkRP 2.6.1}}\n|}\n</div>\n\n<div>\n{{CatStartNewMoreCategory|Tutorials}}\n===Information===\n{{CatItemNew|Book-Open-48.png\u200e|MigratingTo2.5.0|Migrating To 2.5.0|Migrating from DarkRP 2.4.3 to 2.5.0 or later.}}\n{{CatItemNew|Book-Open-48.png\u200e|DarkRP:Console Commands|Console Commands|All of DarkRP's console commands.}}\n{{CatItemNew|Book-Open-48.png\u200e|DarkRP:FAQ|FAQ|Excessively Asked Questions.}}\n|}\n\n{{CatStartNewMoreCategory|Programming}}\n===Modding - Beginners===\n{{CatItemNew|Document-Settings-01-48.png\u200e|DarkRP:ModifyingDarkRP|Modifying DarkRP|How to modify DarkRP without editing core files.}}\n{{CatItemNew|Document-Settings-01-48.png\u200e|Creating_modules|Creating DarkRP modules|How to make modules for DarkRP}}\n{{CatItemNew|Meeting-48.png\u200e|Donator Job configuration|Donator jobs|How to make donator only jobs for your server}}\n{{CatItemNew|Meeting-48.png\u200e|Donator Entities|Donator entities|How to make donator only entities for your server}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Shipments|How to make shipments|This is the third part in my series of DarkRP tutorials.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Jobs|How to make jobs|Another job making guide.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Agendas|Custom Agendas|Tutorial on creating custom agendas.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Door Groups|Custom Door Teams|Tutorial on creating custom door teams.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Vehicles|Buyable Vehicles|Tutorial on allowing people to buy vehicles.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Ammo|Custom Ammo|Tutorial on adding your own ammo types.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:SettingCPTeams|Setting CPs|Tutorial on how to allow certain teams to wanted/warrant}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Factions|Custom factions|Read tutorial on creating custom factions with attributes}}\n{{CatItemNew|Meeting-48.png|LUA:Remove FAdmin|Remove FAdmin|Removing/disabling FAdmin}}\n|-\n|\n===Modding - Advanced & Professional===\n{{CatItemNew|Meeting-48.png|DarkRP:Group Chat|Group Chats|Tutorial on editing/creating group chats.}}\n{{CatItemNew|Meeting-48.png|LUA:Custom Money Printer|Custom Money Printer|How to make your own money printer.}}\n{{CatItemNew|Meeting-48.png|LUA:DarkRP Chat Command|DarkRP Chat Command|Adding a chat command that creates cash.}}\n{{CatItemNew|Meeting-48.png|LUA:Pay Day Baton|Pay Day Baton|How to make a baton that forces a pay day to his/her victim.}}\n{{CatItemNew|Meeting-48.png|LUA:Demote Upon Death|Demote Upon Death|Demote a player from a team after dying.}}\n{{CatItemNew|Meeting-48.png|LUA:Modifying F4|Modifying F4|Modifying the F4 menu}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:Functions|Old Functions|Old functions in DarkRP 2.4.3 and below}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:Hooks|Old Hooks|Old hooks in DarkRP 2.4.3 and below}}\n|}\n</div>\n__NOTOC__\n</div>",
            "timestamp": "2021-11-13 02:43:06"
        },
        "fr": {
            "content": "<div style=\"position:relative;top:-52px;margin-bottom: -40px;float:right;text-align:right;padding:2px;line-height:11px; margin-top:5px;border:0;width:100%\">[[File:Jarvis-flag_8010.png]] [[Main_Page|'''English''']]  [[File:Russia-flag.png]] [[Main_Page:ru|'''\u0420\u0443\u0441\u0441\u043a\u0438\u0439''']] [[File:France-flag.png]] [[Main_Page:fr|'''Fran\u00e7ais''']]</div>\n\n{{TOC rightNew}}\n{{CatStartNewMain|A propos du DarkRP}}\n<div>\n<div style=\"padding:3px; border-width:1px; border-radius:0px; border-left:3px #4dfa73 solid; background:#4dfa73; float:center; margin:-10px; padding-left:9px;\">\n<b>[https://github.com/FPtje/DarkRP T\u00e9l\u00e9charger le dernier DarkRP!]</b>\n</div><br />\n\nDarkRP - un mode de jeu pour le jeu populaire Garry's Mod avec comme id\u00e9e de base, une simulation de la vie urbaine. Vous pouvez devenir un gangster et voler les gens, ou l'inverse, c'est-\u00e0-dire devenir un agent de police pour prot\u00e9ger la ville des hors-la-loi. Vous ouvrez votre magasin d'armes, votre pizzeria o\u00f9 vous vendez la nourriture la plus d\u00e9licieuse en ville, ou encore vous pouvez devenir le maire et g\u00e9rer la ville, \u00e0 savoir la police, l'\u00e9conomie de la ville et les licences d'armes des citoyens. Lire la suite [[DarkRP:fr|ici]].<br><br>\n{{ButtonMainGreen|DarkRP (GitHub)|DarkRP (Workshop)|Discord DarkRP}}\n</div>\n\n<div>\n{{CatStartNewMoreCategory|Script Lua}}\n{{CatItemNew|Gmodflatblack.png\u200e|:Category:Functions|Fonctions|Fonctions disponibles dans le DarkRP}}\n{{CatItemNew|Gmodflatblack.png|:Category:Hooks|Hooks|Hooks disponibles dans le DarkRP}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:CustomJobFields:fr|Ajouter un job|Les customisations avanc\u00e9s des jobs}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:CustomShipmentFields|Ajouter un shipment|Les customisations avanc\u00e9s des shipments}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:CustomEntityFields|Ajouter une entit\u00e9|Les customisations avanc\u00e9s des entit\u00e9s}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:Functions|Anciennes fonctions (EN)|Anciennes fonctions pr\u00e9sentes dans le DarkRP 2.4.3 et ult\u00e9rieur}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:Hooks|Anciens hooks (EN)|Anciens hooks pr\u00e9sents dans le DarkRP 2.4.3 et ult\u00e9rieur}}\n|}\n</div>\n\n<div>\n{{CatStartNewMoreCategory|Tutoriaux}}\n===Information===\n{{CatItemNew|Book-Open-48.png\u200e|MigratingTo2.5.0:fr|Migrer vers DarkRP 2.5.0|Migration de DarkRP 2.4.3 vers 2.5.0 ou version ult\u00e9rieure}}\n{{CatItemNew|Book-Open-48.png\u200e|DarkRP:Console Commands:fr|Commandes console| Toutes les commandes de console DarkRP}}\n{{CatItemNew|Book-Open-48.png\u200e|DarkRP:FAQ:fr|F.A.Q|Questions fr\u00e9quemment pos\u00e9es}}\n|}\n\n{{CatStartNewMoreCategory|Programmation}}\n\n=== Modding - D\u00e9butant ===\n{{CatItemNew|Document-Settings-01-48.png\u200e|DarkRP:ModifyingDarkRP:fr|Modification DarkRP|Comment modifier les fichiers du DarkRP}}\n{{CatItemNew|Document-Settings-01-48.png\u200e|Creating_modules:fr|Cr\u00e9ation de module DarkRP|Comment cr\u00e9er des modules pour le DarkRP}}\n{{CatItemNew|Meeting-48.png\u200e|Donator Job configuration:fr|Ajouter un job donateur|Comment cr\u00e9er des jobs donateurs sur votre serveur}}\n{{CatItemNew|Meeting-48.png\u200e|Donator Entities:fr|Ajouter une entit\u00e9 donateur|Comment cr\u00e9er des entit\u00e9s donateurs sur votre serveur}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Shipments:fr|Comment cr\u00e9er des shipments|Comment cr\u00e9er des shipments sur votre serveur}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Jobs:fr|Cr\u00e9ation de jobs|Cr\u00e9er un job}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Agendas:fr|Ajouter un agenda|Comment ajouter des agendas sur votre serveur}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Door Groups:fr|Ajout de porte modifi\u00e9|Comment ajouter des portes modifi\u00e9es sur votre serveur}}\n{{CatItemNew|Meeting-48.png|DarkRP:Group Chat:fr|Groupe de chat|Comment cr\u00e9er / modifier des groupes de chat}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Vehicles:fr|Ajout de v\u00e9hicules|Comment ajouter des v\u00e9hicules sur votre serveur}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Ammo:fr|Ajout de munitions|Comment ajouter des munitions sur votre serveur}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:SettingCPTeams:fr|Configurer la police|Comment autoriser certains jobs au /wanted et /warrant}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Factions:fr|Ajout de factions|Comment ajouter des factions}}\n|-\n|\n=== Modding - Avanc\u00e9 ===\n\n{{CatItemNew|Meeting-48.png|LUA:Custom Money Printer:fr|Imprimante d'argent modifi\u00e9|Comment cr\u00e9er vos imprimantes d'argent}}\n{{CatItemNew|Meeting-48.png|LUA:DarkRP Chat Command:fr|Commande de chat|Comment ajouter des commandes dans le DarkRP}}\n{{CatItemNew|Meeting-48.png|LUA:Pay Day Baton:fr|Baton de jour de paie|Comment cr\u00e9er un b\u00e2ton jour de paie}}\n{{CatItemNew|Meeting-48.png|LUA:Demote Upon Death:fr|Licenciement \u00e0 la mort|Comment licencier un joueur mort}}\n{{CatItemNew|Meeting-48.png|LUA:Remove FAdmin:fr|Retirer FAdmin|Comment retirer ou d\u00e9sactiver le FAdmin}}\n{{CatItemNew|Meeting-48.png|LUA:Modifying F4:fr|Modifier le menu F4|Comment modifier le menu F4}}\n|}\n</div>\n\n__NOTOC__",
            "timestamp": "2021-01-27 12:43:21"
        },
        "ru": {
            "content": "<div>\n<div style=\"position:relative;top:-52px;margin-bottom: -40px;float:right;text-align:right;padding:2px;line-height:11px; margin-top:5px;border:0;width:100%\">[[File:Jarvis-flag_8010.png]] [[Main_Page|'''English''']]  [[File:Russia-flag.png]] [[Main_Page:ru|'''\u0420\u0443\u0441\u0441\u043a\u0438\u0439''']] [[File:France-flag.png]] [[Main_Page:fr|'''Fran\u00e7ais''']]</div>\n\n{{TOC rightNew:ru}}\n{{CatStartNewMain|\u041e DarkRP}}\n<div>\n<div style=\"padding:3px; border-width:1px; border-radius:0px; border-left:3px #4dfa73 solid; background:#4dfa73; float:center; margin:-10px; padding-left:9px;\">\n<b>[https://github.com/FPtje/DarkRP \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u0432\u0435\u0440\u0441\u0438\u044e DarkRP!]</b><br>\n</div><br />\n\nDarkRP \u2014 \u044d\u0442\u043e \u0440\u0435\u0436\u0438\u043c \u0434\u043b\u044f \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u043e\u0439 \u0438\u0433\u0440\u044b Garry's Mod, \u0438\u0434\u0435\u0435\u0439 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u043c\u0438\u0442\u0430\u0446\u0438\u044f \u0433\u043e\u0440\u043e\u0434\u0441\u043a\u043e\u0439 \u0436\u0438\u0437\u043d\u0438. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u0442\u0430\u0442\u044c \u0433\u0430\u043d\u0433\u0441\u0442\u0435\u0440\u043e\u043c \u0438 \u0433\u0440\u0430\u0431\u0438\u0442\u044c \u043b\u044e\u0434\u0435\u0439 \u0438\u043b\u0438, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u043f\u043e\u043b\u0438\u0446\u0435\u0439\u0441\u043a\u0438\u043c, \u0447\u0442\u043e\u0431\u044b \u0437\u0430\u0449\u0438\u0449\u0430\u0442\u044c \u0433\u043e\u0440\u043e\u0434 \u043e\u0442 \u043f\u0440\u0435\u0441\u0442\u0443\u043f\u043d\u043e\u0441\u0442\u0438. \u0422\u0430\u043a\u0436\u0435 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043e\u0442\u043a\u0440\u044b\u0442\u044c \u043e\u0440\u0443\u0436\u0435\u0439\u043d\u044b\u0439 \u043c\u0430\u0433\u0430\u0437\u0438\u043d \u0438\u043b\u0438 \u043f\u0438\u0446\u0446\u0435\u0440\u0438\u044e, \u0433\u0434\u0435 \u0431\u0443\u0434\u0435\u0442\u0435 \u043f\u0440\u043e\u0434\u0430\u0432\u0430\u0442\u044c \u0441\u0430\u043c\u0443\u044e \u0432\u043a\u0443\u0441\u043d\u0443\u044e \u0435\u0434\u0443 \u0432 \u0433\u043e\u0440\u043e\u0434\u0435; \u0441\u0442\u0430\u0442\u044c \u043c\u044d\u0440\u043e\u043c \u0438 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0433\u043e\u0440\u043e\u0434\u043e\u043c, \u0433\u043e\u0440\u043e\u0434\u0441\u043a\u043e\u0439 \u044d\u043a\u043e\u043d\u043e\u043c\u0438\u043a\u043e\u0439 \u0438 \u0432\u044b\u0434\u0430\u0432\u0430\u0442\u044c \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438 \u043b\u044e\u0434\u044f\u043c. [[DarkRP:ru|\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435...]]<br><br>\n{{ButtonMainGreen|\u0421\u043e\u043e\u0431\u0449\u0438\u0442\u044c \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435|DarkRP \u0432 \u041c\u0430\u0441\u0442\u0435\u0440\u0441\u043a\u043e\u0439|\u041e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 Discord}}\n</div>\n\n<div>\n{{CatStartNewMoreCategory|\u0421\u043a\u0440\u0438\u043f\u0442\u044b \u043d\u0430 Lua}}\n{{CatItemNew|Gmodflatblack.png|:Category:Functions|\u0424\u0443\u043d\u043a\u0446\u0438\u0438|\u0424\u0443\u043d\u043a\u0446\u0438\u0438, \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0432 DarkRP.}}\n{{CatItemNew|Gmodflatblack.png|:Category:Hooks|\u0425\u0443\u043a\u0438|\u0425\u0443\u043a\u0438, \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0432 DarkRP.}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:CustomJobFields:ru|\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u0439|\u041f\u043e\u043b\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0440\u0430\u0431\u043e\u0442.}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:CustomShipmentFields:ru|\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u044f\u0449\u0438\u043a\u043e\u0432|\u041f\u043e\u043b\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043f\u043e\u0441\u0442\u0430\u0432\u043e\u0447\u043d\u044b\u0445 \u044f\u0449\u0438\u043a\u043e\u0432.}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:CustomEntityFields:ru|\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u044d\u043d\u0442\u0438\u0442\u0438|\u041f\u043e\u043b\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u044d\u043d\u0442\u0438\u0442\u0438.}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:Categories:ru|\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438|\u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f\u043c\u0438 \u0432 DarkRP 2.6.1.}}\n|}\n</div>\n\n<div>\n{{CatStartNewMoreCategory|\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430}}\n=== \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f ===\n{{CatItemNew|Book-Open-48.png\u200e|MigratingTo2.5.0:ru|\u041f\u0435\u0440\u0435\u0445\u043e\u0434 \u043d\u0430 \u0432\u0435\u0440\u0441\u0438\u044e 2.5.0|\u041f\u0435\u0440\u0435\u0445\u043e\u0434 \u0441 \u0432\u0435\u0440\u0441\u0438\u0438 2.4.3 \u043d\u0430 2.5.0.}}\n{{CatItemNew|Book-Open-48.png\u200e|DarkRP:Console Commands:ru|\u041a\u043e\u043d\u0441\u043e\u043b\u044c\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b|\u0412\u0441\u0435 \u043a\u043e\u043d\u0441\u043e\u043b\u044c\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b DarkRP.}}\n{{CatItemNew|Book-Open-48.png\u200e|DarkRP:FAQ:ru|\u0427\u0430\u0441\u0442\u044b\u0435 \u0432\u043e\u043f\u0440\u043e\u0441\u044b|}}\n|}\n\n{{CatStartNewMoreCategory|\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435}}\n\n=== \u041c\u043e\u0434\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435: \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0435 ===\n{{CatItemNew|Document-Settings-01-48.png\u200e|DarkRP:ModifyingDarkRP:ru|\u041c\u043e\u0434\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435|\u041c\u043e\u0434\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 DarkRP \u0431\u0435\u0437 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432.}}\n{{CatItemNew|Document-Settings-01-48.png\u200e|Creating_modules:ru|\u041c\u043e\u0434\u0443\u043b\u0438|\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0443\u043b\u0435\u0439 \u0434\u043b\u044f DarkRP.}}\n{{CatItemNew|Meeting-48.png\u200e|Donator Job configuration|\u041e\u0441\u043e\u0431\u044b\u0435 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u0438|\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u0439 \u0441 \u043f\u0440\u0438\u0432\u044f\u0437\u043a\u043e\u0439 \u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0439 \u0433\u0440\u0443\u043f\u043f\u0435.}}\n{{CatItemNew|Meeting-48.png\u200e|Donator Entities:ru|\u041e\u0441\u043e\u0431\u044b\u0435 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u044b|\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u043e\u0432 \u0441 \u043f\u0440\u0438\u0432\u044f\u0437\u043a\u043e\u0439 \u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0439 \u0433\u0440\u0443\u043f\u043f\u0435.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Shipments:ru|\u041f\u043e\u0441\u0442\u0430\u0432\u043e\u0447\u043d\u044b\u0435 \u044f\u0449\u0438\u043a\u0438|\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u044f\u0449\u0438\u043a\u043e\u0432 \u0441 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u043c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u044b\u043c.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Jobs:ru|\u0420\u0430\u0431\u043e\u0442\u044b|\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Agendas:ru|\u041f\u043e\u0432\u0435\u0441\u0442\u043a\u0430 \u0434\u043d\u044f|\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u0432\u0435\u0441\u0442\u043a\u0438 \u0434\u043d\u044f.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Door Groups:ru|\u0414\u0432\u0435\u0440\u043d\u044b\u0435 \u0433\u0440\u0443\u043f\u043f\u044b|\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0434\u0432\u0435\u0440\u043d\u044b\u0445 \u0433\u0440\u0443\u043f\u043f.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Vehicles:ru|\u041f\u043e\u043a\u0443\u043f\u0430\u0435\u043c\u044b\u0439 \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442|\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u043a\u0443\u043f\u0430\u0435\u043c\u043e\u0433\u043e \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u0430.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Ammo|\u0411\u043e\u0435\u043f\u0440\u0438\u043f\u0430\u0441\u044b|\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0442\u0438\u043f\u043e\u0432 \u0431\u043e\u0435\u043f\u0440\u0438\u043f\u0430\u0441\u043e\u0432.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:SettingCPTeams:ru|\u041e\u0440\u0433\u0430\u043d\u044b \u043f\u0440\u0430\u0432\u043e\u043f\u043e\u0440\u044f\u0434\u043a\u0430|\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0435\u0439 \u043e\u0440\u0433\u0430\u043d\u043e\u0432 \u043f\u0440\u0430\u0432\u043e\u043f\u043e\u0440\u044f\u0434\u043a\u0430.}}\n{{CatItemNew|Meeting-48.png\u200e|DarkRP:Factions|\u0424\u0440\u0430\u043a\u0446\u0438\u0438|\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0444\u0440\u0430\u043a\u0446\u0438\u0439.}}\n|-\n|\n=== \u041c\u043e\u0434\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435: \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u043e\u0435 \u0438 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0435 ===\n{{CatItemNew|Meeting-48.png|DarkRP:Group Chat|\u0413\u0440\u0443\u043f\u043f\u043e\u0432\u044b\u0435 \u0447\u0430\u0442\u044b|\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0433\u0440\u0443\u043f\u043f\u043e\u0432\u044b\u0445 \u0447\u0430\u0442\u043e\u0432.}}\n{{CatItemNew|Meeting-48.png|LUA:Custom Money Printer|\u0414\u0435\u043d\u0435\u0436\u043d\u044b\u0435 \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u044b|\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0434\u0435\u043d\u0435\u0436\u043d\u044b\u0445 \u043f\u0440\u0438\u043d\u0442\u0435\u0440\u043e\u0432.}}\n{{CatItemNew|Meeting-48.png|LUA:DarkRP Chat Command|\u041a\u043e\u043c\u0430\u043d\u0434\u044b \u0447\u0430\u0442\u0430|\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0434\u0435\u043d\u0435\u0433.}}\n{{CatItemNew|Meeting-48.png|LUA:Pay Day Baton|\u0414\u0443\u0431\u0438\u043d\u043a\u0430 \u00ab\u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430\u00bb|\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0434\u0443\u0431\u0438\u043d\u043a\u0438, \u0432\u044b\u0434\u0430\u044e\u0449\u0435\u0439 \u0437\u0430\u0440\u043f\u043b\u0430\u0442\u0443 \u043f\u0440\u0438 \u043f\u043e\u043f\u0430\u0434\u0430\u043d\u0438\u0438.}}\n{{CatItemNew|Meeting-48.png|LUA:Demote Upon Death|\u0423\u0432\u043e\u043b\u044c\u043d\u0435\u043d\u0438\u0435 \u043f\u043e\u0441\u043b\u0435 \u0441\u043c\u0435\u0440\u0442\u0438|}}\n{{CatItemNew|Meeting-48.png|LUA:Remove FAdmin:ru|\u041e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 FAdmin|}}\n{{CatItemNew|Meeting-48.png|LUA:Modifying F4:ru|\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 F4-\u043c\u0435\u043d\u044e|}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:Functions|\u0421\u0442\u0430\u0440\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438|\u0424\u0443\u043d\u043a\u0446\u0438\u0438, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u0432 DarkRP \u0432\u0435\u0440\u0441\u0438\u0438 2.4.3. \u0438 \u0440\u0430\u043d\u0435\u0435.}}\n{{CatItemNew|Gmodflatblack.png|DarkRP:Hooks|\u0421\u0442\u0430\u0440\u044b\u0435 \u0445\u0443\u043a\u0438|\u0425\u0443\u043a\u0438, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u0432 DarkRP \u0432\u0435\u0440\u0441\u0438\u0438 2.4.3. \u0438 \u0440\u0430\u043d\u0435\u0435.}}\n|}\n</div>\n__NOTOC__\n</div>",
            "timestamp": "2020-07-24 09:54:46"
        }
    },
    "Main Page New": {
        "en": {
            "content": "#REDIRECT [[Main Page]]",
            "timestamp": "2020-07-23 18:08:11"
        },
        "ru": {
            "content": "#REDIRECT [[Main Page:ru]]",
            "timestamp": "2020-07-23 18:08:12"
        }
    },
    "MigratingTo2.5.0": {
        "en": {
            "content": "{{TOC right}}{{Languages|en=MigratingTo2.5.0|ru=MigratingTo2.5.0:ru|fr=MigratingTo2.5.0:fr}}\n\nAll support for DarkRP 2.4.3 has been dropped. You will need to update to DarkRP 2.5.0 if you want any support from the developers.\n\nDarkRP 2.5.0 can be obtained through several ways. First go to the DarkRP Github page:\nhttps://github.com/FPtje/DarkRP\n\nThen you are provided with three options to get DarkRP:\n# SVN: https://github.com/FPtje/DarkRP <br /> This option is the fastest and the best option for servers that support SVN. Your server host will be able to update DarkRP with just a click!\n# Download DarkRP as a zip file. You can upload this zip file to your server immediately and unpack it there. This is the fastest method for server owners if the host does not support SVN.\n# Clone the git repository: <br /> git@github.com:FPtje/DarkRP.git <br /> This option is recommended for power users (people who know how to use git and have a use for it) and people who want to contribute to the DarkRP project.\n\n\n= WHY you should migrate to DarkRP 2.5.0 =\nOh I hear you, you don't ''want'' to move to DarkRP 2.5.0 because you've edited your DarkRP to hell and back.\nWell now is the time to regret messing with DarkRP files, because DarkRP 2.5.0 is awesome.\n\n* F4 menu, F1 menu, pocket, language system. ALL recoded and much more awesome now.\n* Put all your modifications in a separate addon (can be downloaded [https://github.com/FPtje/DarkRPModification here])\n* Easy as shit to add F4 menu tabs. There's even an example module that adds an extra tab in the mod addon\n* Really easy to update DarkRP because you don't have to edit its files\n* Translating DarkRP to French, Russian or any other language is ''easier than ever''. Just edit the file in the mod addon!\n* Loads faster than DarkRP 2.4.3!\n\n= Migrating basic things =\nFirst of all, download and install the DarkRP modification addon.\nhttps://github.com/FPtje/DarkRPModification\n\nBecause from now on, you're going to stop messing with DarkRP files. You leave the DarkRP folder as it is, and you modify the addon instead.\nSounds impossible, but it isn't. Bear with me.\n\nALL of your custom jobs, custom shipments, custom team chats custom whatever things go in the files in the addon.\n\n<big>Note:</big> If you copy (edited) default jobs/shipments/entities/etc. to the addon, you'll end up with two versions of them. Disable the DarkRP original ones in disabled_defaults.lua\n\n<big>Note:</big> Don't just whack your shared.lua in jobs.lua. Copy the jobs from it to jobs.lua, the agendas to agendas.lua etc. Everything has its own file now.\n\nConfig files can be found in the addon as well. Just look around and you'll find it.\n\n= Advanced stuff =\n== Your custom modules ==\nyour HUD replacements, your F4 menu edits and all that kind of stuff.\n\nHere's your biggest problem: most function and hook names have changed. If you have a DarkRP module, it is likely to stop working. This is the error you're likely to get:\n{{Code|1=SomeFolder/someFile.lua:LinenumberHere Attempt to call method Whatever, a nil value.}}\n\nThere will also be problems with things that happen on events that suddenly stop happening. There will be no errors in such case. Think of\n* Your module does something when players are arrested, but suddenly your module doesn't do that anymore\n* Your module does something with doors (when you buy them or w/e), but it stops doing it without warning or error.\n\nIf it's a module that worked before the migration, it is very likely to be a migration problem. Here's some tips:\n* Many DarkRP hooks and functions used to start with an uppercase letter, but in DarkRP 2.5.0 all functions start with lowercase (DarkRP.'''G'''etDarkRPVar -> DarkRP.'''g'''etDarkRPVar)\nTry this trick first!\n* Some function names and hooks have simply changed names. Please take a look at the [[:Category:Functions|DarkRP 2.5.0. functions]] and [[:Category:Hooks|hooks]].\n\nIf you know Lua, migrating your module from old to new DarkRP should be easy. However, note the following:\n* The F4 menu has been recoded. If you modified showteamtabs.lua, may your favourite deity be with you, because that file and all of its contents are gone COMPLETELY\n* The F1 menu has been recoded. If you did anything with that (add help categories and help items), that will break\n* The pocket has been recoded. It still looks the same when you're playing, but it does totally different things. For one it doesn't make props invisible anymore. It really removes them now.\n* The language system has been recoded. If you translated DarkRP, you might be able to move some things over to the translation in the mod addon.\n* Pretty much everything that hasn't been recoded, has been moved somewhere else in the DarkRP folder. Everything is restructured. This shouldn't affect you if you didn't mess with DarkRP files.\n\n== HUD Replacement ==\nHalf of DarkRP servers replaced the HUD. Apparently this is something people wanted to do. Check out the DarkRP mod addon! It has an example HUD replacement. It's just a red health bar, but it shows you how to make your own HUD. \n\n== Adding a tab to the F4 menu ==\nThis was also done very often. For this there is also an example module in the DarkRP mod addon. You can even edit it to show your community's web page or the rules. It's really easy! Check it out!",
            "timestamp": "2020-07-23 18:08:12"
        },
        "fr": {
            "content": "{{TOC right}}{{Languages|en=MigratingTo2.5.0|ru=MigratingTo2.5.0:ru|fr=MigratingTo2.5.0:fr}}\n\nTout le support pour le DarkRP 2.4.3 a \u00e9t\u00e9 supprim\u00e9. Vous devez mettre \u00e0 jour votre DarkRP en 2.5.0 si vous voulez l'aide de d\u00e9veloppeurs\n\nLe DarkRP 2.5.0 peut \u00eatre obtenu de plusieurs fa\u00e7on possibles. Dans un premier temps, rendez vous sur la page GitHub du DarkRP: [https://github.com/FPtje/DarkRP https://github.com/FPtje/DarkRP]\n\nEnsuite, vous disposez de trois options pour obtenir le DarkRP:\n# SVN: https://github.com/FPtje/DarkRP <br /> C'est l'option la plus rapide et la plus appropri\u00e9e pour les serveur supportant SVN. Votre serveur sera capable de mettre \u00e0 jour le DarkRP d'un simple clic!\n# T\u00e9l\u00e9charger le DarkRP en fichier zip. Vous pouvez ensuite envoyer ce fichier sur votre serveur et le d\u00e9zipper. C'est la solution la plus rapide pour les serveurs ne supportant pas SVN.\n# Cloner le r\u00e9pertoire GIT: <br /> git@github.com:FPtje/DarkRP.git <br /> Cette option est recommand\u00e9e pour les utilisateur avertis (utilisateur savant faire fonctionner git et l'utiliser) et les personnes voulant contribuer au d\u00e9veloppement du DarkRP\n\n\n= Pourquoi migrer le DarkRP en 2.5.0 ? =\nAh, je vois, vous ne souhaitez pas migrer en 2.5.0 car vous avez modifi\u00e9 le coeur du DarkRP et vous ne voulez pas perdre vos modifications ?\nEt bien il est temps de vous repentir jeune Padawan, car le DarkRP 2.5.0 est vraiment am\u00e9lior\u00e9 !\n\n* Menu F4, menu F1, poche, syst\u00e8me de langues. TOUT recod\u00e9 et vraiment mieux maintenant.\n* Mettez toutes vos modifications dans un addon s\u00e9par\u00e9 (qui peut \u00eatre t\u00e9l\u00e9charg\u00e9 [https://github.com/FPtje/DarkRPModification ici])\n* Tr\u00e8s facile d'ajouter un onglet au menu F4. Il y a m\u00eame un exemple de module dans l'addon cit\u00e9 au dessus\n* Vraiment simple de mettre \u00e0 jour le DarkRP car vous n'avez pas modifi\u00e9 de fichier coeur\n* La traduction du DarkRP en fran\u00e7ais, klingon ou n'importe quel autre langage n'a ''jamais \u00e9t\u00e9 aussi facile''. editez juste le fichier dans l'addon de modification\n* Ah, et au fait, la version 2.5.0 charge plus rapidement que la  2.4.3 !\n\n= Migration simple =\nDans un premier temps, t\u00e9l\u00e9chargez et installez l'addon de modification. https://github.com/FPtje/DarkRPModification\n\nA partir de maintenant, vous allez arr\u00eater de modifier les fichiers coeur du DarkRP, vous allez pouvoir tout faire directement dans le dossier d'addon !\n\nTOUS vos jobs custom, shipments custom, tchat de groupe, tout \u00e7a va dans les fichiers de l'addon.\n\n<big>Note:</big> Si vous copiez (editez) les jobs/shipments/entities/etc par d\u00e9faut dans l'addon, vous vous retrouverez avec deux versions de ceux ci. D\u00e9sactivez les originaux dans le fichier disabled_defaults.lua\n\n<big>Note:</big> Ne vous contentez pas de juste coller votre shared.lua dans le jobs.lua. Copiez les jobs de ce fichier dans le jobs.lua, les agendas dans le agendas.lua, etc. Tout a son propre fichier maintenant\n\nLes fichiers de configuration se trouvent aussi dans cet addon, profitez en.\n\n= Options avanc\u00e9es =\n\nCette partie concerne vos remplacements de HUD, vos modifications du menu F4, et tout ce genre de choses.\n\nVoici notre plus gros probl\u00e8me: La plupart des noms de fonction et hooks ont chang\u00e9, et \u00e7a ne va peut \u00eatre pas fonctionner. Voici l'erreur que vous rencontrerez:\n{{Code|1=UnDossier/unFichier.lua:NumeroDeLigne Attempt to call method QuelqueChose, a nil value.}}\nEn d'autre termes:\n{{Code|1=La fonction que tu essayes d'appeler, je ne la connais pas.}}\n\nIl peu aussi y avoir des probl\u00e8mes avec des \u00e9v\u00e9nements qui s'arr\u00eatent d'un coup.\n* Votre module fait quelque chose quand le joueur est arr\u00eat\u00e9 et tout d'un coup votre module d'arr\u00eate.\n* Votre module fait quelque chose quand vous interagissez avec une porte (Achat ou autre) et soudainement cette action se termine, sans aucune erreur ou avertissement.\n\nSi il s'agit d'un module fonctionnant avant la migration, il ets tr\u00e8s probable que ce soit cette migration qui est \u00e0 l'origine du probl\u00e8me. Voici quelques astuces:\n* Beaucoup de fonctions ou de hooks du DarkRP 2.4.3 commen\u00e7aient avec une lettre majuscule. Ce n'est plus cas pour le DarkRP 2.5.0 (DarkRP.GetDarkRPVar -> DarkRP.getDarkRPVar)\nEssayez cette premi\u00e8re astuce !\n* D'autre noms de fonction ou de hooks ont simplement chang\u00e9. Vous pouvez jeter un coup d'oeil aux [[:Category:Functions|DarkRP 2.5.0. fonctions]] et [[:Category:Hooks|hooks]].\nSi vous vous connaissez un peu en lua, migrer ces modules de l'ancien au nouveau DarkRP devrait \u00eatre facile, cependant notez les choses suivantes:\n* Le menu F4 a \u00e9t\u00e9 recod\u00e9. Si vous avec modifi\u00e9 le fichier showteamtabs.lua, j'esp\u00e8re que votre dieu est avec vous, car ce fichier et tout ce qu'il contenait \u00e0 disparu COMPLETEMENT !\n* Le menu F1 a \u00e9t\u00e9 recod\u00e9. Si vous avez fait quelque chose concernant ce fichier, comme ajouter des cat\u00e9gories, ou des items, ce ne fonctionnera pas.\n* La poche (pocket) a \u00e9t\u00e9 recod\u00e9e. Elle fonctionne la m\u00eame mani\u00e8re en jeu, mais fait des choses totalement diff\u00e9rents. Il n'est plus question d'objets invisibles, ils sont r\u00e9ellement supprim\u00e9s maintenant.\n* Le syst\u00e8me de langues a \u00e9t\u00e9 recod\u00e9. Si vous aviez traduit les DarkRP, vous devriez \u00eatre en mesure de d\u00e9placer certaines choses de cette traduction dans l'addon de modification\n* A peu pr\u00e8s tout ce qui n'a pas \u00e9t\u00e9 recod\u00e9 a \u00e9t\u00e9 boug\u00e9 dans d'autres dossiers du DarkRP. Tout ets mieux structur\u00e9. \u00c7a ne devrait pas vous affecter si vous n'avez pas touch\u00e9 les fichiers c\u0153urs du DarkRP.\n\n= Remplacement du HUD =\nLa moiti\u00e9 des serveur DarkRP ont modifi\u00e9 leur HUD, apparemment c'ets quelque chose que les gens aiment bien personnaliser. Jetez un coup d\u2019\u0153il dans l'addon de modification, il y a un exemple de remplacement de HUD. Il s'agit juste d'une barre rouge pour la vie, mais \u00e7a vous indiquera comment faire votre propre HUD\n\n= Ajouter un onglet \u00e0 votre menu F4 =\nCette action aussi a souvent \u00e9t\u00e9 faite, vous avez aussi un exemple dans le dossier addons de modification du DarkRP. Vous pouvez l'\u00e9diter pour ajouter votre site web, ou les r\u00e8gles. C'est tr\u00e8s simple alors n'h\u00e9sitez pas et lancez vous !",
            "timestamp": "2020-07-23 18:08:12"
        },
        "ru": {
            "content": "{{TOC right}}{{Languages|en=MigratingTo2.5.0|ru=MigratingTo2.5.0:ru|fr=MigratingTo2.5.0:fr}}\n\n'''4 \u041e\u043a\u0442\u044f\u0431\u0440\u044f DarkRP 2.4.3 \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432''', \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u043f\u043e\u044f\u0432\u0438\u0442\u0441\u044f '''\u043d\u043e\u0432\u0430\u044f \u0432\u0435\u0440\u0441\u0438\u044f DarkRP 2.5.0'''.\n\u0412 \u044d\u0442\u043e\u0442 \u0436\u0435 \u0434\u0435\u043d\u044c \u043d\u0430 Github, \u0444\u0430\u0439\u043b\u044b DarkRP 2.4.3 \u0431\u0443\u0434\u0443\u0442 \u0437\u0430\u043c\u0435\u043d\u0435\u043d\u044b \u043d\u043e\u0432\u044b\u043c\u0438 \u0438\u0437 DarkRP 2.5.0.\n\n    \u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c '''\u043d\u043e\u0432\u0443\u044e \u0432\u0435\u0440\u0441\u0438\u044e DarkRP''', \u0442\u043e \u043f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u043d\u0430 [http://anonym.to/?steam://connect/test.darkrp.com test.darkrp.com].\n\n\u0412\u044b \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u043a\u0430\u0447\u0430\u0442\u044c DarkRP 2.5.0 \u043f\u043e \u044d\u0442\u043e\u0439 \u0441\u0441\u044b\u043b\u043a\u0435:\ngit@github.com:FPtje/DarkRP.git\n\n\u0418\u043b\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e SVN:\nhttps://github.com/FPtje/DarkRP/branches/refactor\n\n\n= \u041f\u043e\u0447\u0435\u043c\u0443 \u0432\u0430\u043c \u043b\u0443\u0447\u0448\u0435 \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u043d\u0430 DarkRP 2.5.0 =\n\u042f \u0447\u0430\u0441\u0442\u043e \u0440\u0430\u0437\u0433\u043e\u0432\u0430\u0440\u0438\u0432\u0430\u044e \u0441 \u0441\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044f\u043c\u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u0432 \u0438 ''\u043d\u0435 \u0432\u0441\u0435 \u043e\u043d\u0438 \u0445\u043e\u0442\u044f\u0442'' \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u043d\u0430 DarkRP 2.5.0. \u0418\u0445 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043d\u044f\u0442\u044c, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u043e\u043d\u0438 \u0434\u0435\u043b\u0430\u043b\u0438 \u0441\u0432\u043e\u0438 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0441 DarkRP, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u043b\u0438 \u043d\u043e\u0432\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0420\u0430\u0431\u043e\u0442\u044b, \u041e\u0440\u0443\u0436\u0438\u0435 \u0438 \u0442.\u043f.\n\u041d\u043e \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043f\u043e\u0434\u0435\u043b\u0430\u0435\u0448\u044c, \u043f\u0440\u0438\u0434\u0451\u0442\u0441\u044f \u0441\u043d\u043e\u0432\u0430 \u043f\u0438\u0441\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043b\u044f \u043d\u043e\u0432\u043e\u0433\u043e DarkRP, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430\u043c\u043d\u043e\u0433\u043e \u043b\u0443\u0447\u0448\u0435 \u0441\u0442\u0430\u0440\u043e\u0433\u043e. \u041a \u043f\u0440\u0438\u043c\u0435\u0440\u0443:\n\n* \u041c\u0435\u043d\u044e F4(\u0418\u0433\u0440\u043e\u0432\u043e\u0435) \u0438 F1(\u041f\u043e\u043c\u043e\u0449\u044c), \u0441\u0442\u0430\u043b\u0438 \u043e\u0447\u0435\u043d\u044c \u0443\u0434\u043e\u0431\u043d\u044b\u043c\u0438 \u0438 \u043a\u0440\u0430\u0441\u0438\u0432\u044b\u043c\u0438. \u0423\u0434\u043e\u0431\u043d\u043e\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u0439, \u043e\u0440\u0443\u0436\u0438\u044f, \u043a\u043e\u0440\u043e\u0431\u043e\u043a \u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u0438\u0433\u0440\u043e\u0432\u044b\u0445 \u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0439.\n* \u0423\u0434\u043e\u0431\u043d\u043e\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0439(\u0410\u0434\u0434\u043e\u043d\u043e\u0432) (\u041c\u043e\u0436\u043d\u043e \u0441\u043a\u0430\u0447\u0430\u0442\u044c [https://github.com/FPtje/DarkRPModification \u0437\u0434\u0435\u0441\u044c])\n* \u041f\u0440\u043e\u0441\u0442\u043e\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0432\u043a\u043b\u0430\u0434\u043a\u0438 \u0432 \u043c\u0435\u043d\u044e(F4). \u0415\u0441\u0442\u044c \u043f\u0440\u0438\u043c\u0435\u0440 \u043c\u043e\u0434\u0443\u043b\u044f \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u043e\u043f. \u0432\u043a\u043b\u0430\u0434\u043a\u0443.\n* \u0411\u044b\u0441\u0442\u0440\u043e\u0435 \u0438 \u043b\u0451\u0433\u043a\u043e\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 DarkRP.\n* ''\u041b\u0451\u0433\u043a\u0438\u0439 \u043f\u0435\u0440\u0435\u0432\u043e\u0434'' \u043d\u0430 \u0424\u0440\u0430\u043d\u0446\u0443\u0437\u0441\u043a\u0438\u0439, \u0420\u0443\u0441\u0441\u043a\u0438\u0439 \u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u044f\u0437\u044b\u043a. \u041f\u0440\u043e\u0441\u0442\u043e \u043e\u0442\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0444\u0430\u0439\u043b mod addon!\n* \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442\u0441\u044f \u0431\u044b\u0441\u0442\u0440\u0435\u0435, \u0447\u0435\u043c DarkRP 2.4.3!\n\n= \u042d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u0440\u043d\u043e\u0435 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 =\n\u0414\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b DarkRP \u0441\u043a\u0430\u0447\u0430\u0439\u0442\u0435 Add-On DarkRPModification \u043f\u043e \u044d\u0442\u043e\u0439 \u0441\u0441\u044b\u043b\u043a\u0435 https://github.com/FPtje/DarkRPModification\n\n\u0422\u0435\u043f\u0435\u0440\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 DarkRP \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043d\u0435 \u0432 \u043f\u0430\u043f\u043a\u0435 .../gamemodes/DarkRP, \u0430 \u0432 \u043f\u0430\u043f\u043a\u0435 .../Addons. \u042d\u0442\u043e \u043d\u0430\u043c\u043d\u043e\u0433\u043e \u0443\u0434\u043e\u0431\u043d\u0435\u0435, \u043f\u043e\u0432\u0435\u0440\u044c\u0442\u0435.\n\n\u0412\u0441\u0435 \u0444\u0430\u0439\u043b\u044b \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u0439, \u043a\u043e\u0440\u043e\u0431\u043e\u043a, \u043a\u043e\u043c\u0430\u043d\u0434 \u0434\u043b\u044f \u0447\u0430\u0442\u0430 \u0438 \u0434\u0440\u0443\u0433\u043e\u0433\u043e, \u0442\u0435\u043f\u0435\u0440\u044c \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u0432 \u043f\u0430\u043f\u043a\u0435 addon.\n\n<big>\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435:</big> \u0415\u0441\u043b\u0438 \u0432\u044b \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u0442\u0435 (\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u0443\u0435\u0442\u0435) \u0444\u0430\u0439\u043b\u044b \u0432 jobs/shipments/entities/etc, \u0432\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0435 \u0434\u0432\u0430 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430 \u0444\u0430\u0439\u043b\u043e\u0432. \u0427\u0442\u043e\u0431\u044b \u044d\u0442\u043e\u0433\u043e \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c, \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u0435 \u043e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 DarkRP \u0432 \u0444\u0430\u0439\u043b\u0435 disabled_defaults.lua\n\n<big>\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435:</big> Don't just whack your shared.lua in jobs.lua. Copy the jobs from it to jobs.lua, the agendas to agendas.lua etc. Everything has its own file now.\n\n\u0412\u0441\u0435 \u0444\u0430\u0439\u043b\u044b \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 (\u0420\u0430\u0431\u043e\u0442\u0430, \u041e\u0440\u0443\u0436\u0438\u0435, \u041a\u043e\u0440\u043e\u0431\u043a\u0438 \u0438 \u0434\u0440\u0443\u0433\u043e\u0435), \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043d\u0430\u0439\u0442\u0438 \u0432 /addon/DarkRPModification. \n\n= \u0411\u044b\u0441\u0442\u0440\u043e\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 =\n== \u0421\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 ==\n\u0412\u0430\u0448 HUD \u0438 \u043c\u0435\u043d\u044e F4, \u0430 \u0442\u043e\u0447\u043d\u0435\u0435 \u0438\u0445 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441 \u043e\u0447\u0435\u043d\u044c \u0441\u0438\u043b\u044c\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u0451\u043d.\n\n\u0418\u0437-\u0437\u0430 \u044d\u0442\u043e\u0433\u043e, \u043c\u043e\u0433\u0443\u0442 \u0432\u043e\u0437\u043d\u0438\u043a\u0430\u0442\u044c \u043e\u0448\u0438\u0431\u043a\u0438. \u041a \u043f\u0440\u0438\u043c\u0435\u0440\u0443 \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \u043c\u043e\u0434\u0443\u043b\u044c \u0441\u043e \u0441\u0442\u0430\u0440\u044b\u043c\u0438 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u043e\u043c DarkRP, \u0430 \u0432 \u043d\u043e\u0432\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u043d\u043e\u0432\u044b\u0435 \u0442\u0435\u0433\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u043f\u043e\u044d\u0442\u043e\u043c\u0443, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u0438\u0434\u0435\u0442\u044c \u0432\u043e\u0442 \u0442\u0430\u043a\u0443\u044e \u0432\u043e\u0442 \u043e\u0448\u0438\u0431\u043a\u0443:\n{{Code|1=\u0412\u0430\u0448\u0430\u041f\u0430\u043f\u043a\u0430/\u0432\u0430\u0448\u041a\u043e\u0434.lua:\u0421\u0442\u0440\u043e\u043a\u0430 Attempt to call method \u041b\u044e\u0431\u043e\u0439, a nil value.}}\n\n\u041f\u0440\u043e\u0431\u043b\u0435\u043c\u044b \u0442\u0430\u043a\u0436\u0435 \u0431\u0443\u0434\u0443\u0442 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442\u044c \u0432 \u0432\u0430\u0448\u0438\u0445 \u043c\u043e\u0434\u0443\u043b\u044f\u0445, \u0433\u0434\u0435 \u0435\u0441\u0442\u044c \u0441\u043e\u0431\u044b\u0442\u0438\u044f (\u041a \u043f\u0440\u0438\u043c\u0435\u0440\u0443 \u0417\u0430\u0440\u043f\u043b\u0430\u0442\u0430 \u0438 \u0442.\u0434), \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0434\u0440\u0443\u0433 \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u0443\u0442 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442\u044c. \u0412 \u0442\u0430\u043a\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, DarkRP \u043d\u0435 \u043f\u043e\u043a\u0430\u0436\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0438. \u041a \u043f\u0440\u0438\u043c\u0435\u0440\u0443:\n* \u0412\u0430\u0448 \u043c\u043e\u0434\u0443\u043b\u044c \u0441\u043e\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u043a\u0430\u043a\u043e\u0435-\u0442\u043e \u0441\u043e\u0431\u044b\u0442\u0438\u0435, \u043a\u043e\u0433\u0434\u0430 \u0438\u0433\u0440\u043e\u043a\u0430 \u0430\u0440\u0435\u0441\u0442\u043e\u0432\u044b\u0432\u0430\u044e\u0442, \u043d\u043e \u0438\u0437-\u0437\u0430 \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0432\u0430\u0448 \u043c\u043e\u0434\u0443\u043b\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b \u0441\u0442\u0430\u0440\u044b\u0439 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441, \u043e\u043d \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c.\n* \u0412\u0430\u0448 \u043c\u043e\u0434\u0443\u043b\u044c \u0434\u0435\u043b\u0430\u0435\u0442 \u0447\u0442\u043e-\u0442\u043e, \u043a\u043e\u0433\u0434\u0430 \u0432\u044b \u043f\u043e\u043a\u0443\u043f\u0430\u0435\u0442\u0435 \u0434\u0432\u0435\u0440\u044c \u0438\u043b\u0438 \u043c\u0430\u0448\u0438\u043d\u0443, \u043e\u043d \u0442\u0430\u043a\u0436\u0435 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c, \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u043d\u0438\u043a\u0430\u043a\u043e\u0439 \u043e\u0448\u0438\u0431\u043a\u0438 \u0438\u043b\u0438 \u043f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044f.\n\n\u0422\u0430\u043a\u0436\u0435, \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0432 Lua \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0435 \u0432\u0430\u0448\u0435\u0433\u043e \u043c\u043e\u0434\u0443\u043b\u044f:\n* \u041c\u043d\u043e\u0433\u0438\u0435 DarkRP \u0442\u0435\u0433\u0438 (hooks) \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 (functions) \u043c\u043e\u0433\u0443\u0442 \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c, \u0442\u0430\u043a \u043a\u0430\u043a \u0432 DarkRP \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f 1 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 (DarkRP.'''G'''etDarkRPVar \u0432\u043c\u0435\u0441\u0442\u043e DarkRP.'''g'''etDarkRPVar)\n* \u041d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 (functions) \u0438 \u0442\u0435\u0433\u0438 (hooks) \u043c\u043e\u0433\u043b\u0438 \u043f\u0440\u043e\u0441\u0442\u043e \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0441\u0432\u043e\u0451 \u0438\u043c\u044f. \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u043c \u0432\u0430\u043c \u0438\u0437\u0443\u0447\u0438\u0442\u044c [[:Category:Functions|\u0444\u0443\u043d\u043a\u0446\u0438\u0438]] \u0438 [[:Category:Hooks|\u0442\u0435\u0433\u0438]] \u0438\u0437 DarkRP 2.5.0.\n\n\u0415\u0441\u043b\u0438 \u0432\u044b \u0437\u043d\u0430\u0435\u0442\u0435 Lua, \u0442\u043e \u043f\u0435\u0440\u0435\u043d\u043e\u0441 \u0432\u0430\u0448\u0438\u0445 \u043c\u043e\u0434\u0443\u043b\u0435\u0439 \u0441\u043e \u0441\u0442\u0430\u0440\u043e\u0433\u043e \u043d\u0430 \u043d\u043e\u0432\u044b\u0439 DarkRP \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0441\u0442. \u041e\u0434\u043d\u0430\u043a\u043e, \u0437\u0430\u043f\u043e\u043c\u043d\u0438\u0442\u0435 \u044d\u0442\u0438 \u0432\u0435\u0449\u0438:\n* \u041c\u0435\u043d\u044e F4 \u0431\u044b\u043b\u043e \u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u043d\u043e. \u0415\u0441\u043b\u0438 \u0432\u044b \u0438\u0437\u043c\u0435\u043d\u044f\u043b\u0438 showteamtabs.lua, \u0442\u043e \u043a\u0440\u0435\u043f\u0438\u0442\u0435\u0441\u044c, \u044d\u0442\u043e \u0432\u0441\u0451 \u044d\u0442\u043e \u0443\u0436\u0435 \u043f\u043e\u0442\u0435\u0440\u044f\u043d\u043e \u041f\u041e\u041b\u041d\u041e\u0421\u0422\u042c\u042e.\n* \u041c\u0435\u043d\u044e F1 \u0431\u044b\u043b\u043e \u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u043d\u043e. \u0415\u0441\u043b\u0438 \u0432\u044b \u0447\u0442\u043e-\u0442\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u043b\u0438 (\u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u0438 \u0434\u0440\u0443\u0433\u043e\u0435), \u043e\u043d\u043e \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c\n* \"\u041a\u0430\u0440\u043c\u0430\u043d\u044b\" \u0431\u044b\u043b\u0438 \u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u043d\u044b. \u042d\u0442\u043e \u0441\u0445\u043e\u0436\u0435 \u0441 \u043f\u0440\u043e\u0448\u043b\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0435\u0439 \u043f\u0440\u0438 \u0438\u0433\u0440\u0435, \u043d\u043e \u044d\u0442\u043e \u0442\u0435\u043f\u0435\u0440\u044c \u0441\u043e\u0432\u0441\u0435\u043c \u0434\u0440\u0443\u0433\u043e\u0435. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432\u0435\u0449\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u043d\u0435\u0432\u0438\u0434\u0438\u043c\u043e\u0439. \u041e\u043d\u0430 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0443\u0434\u0430\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u0437 \u043c\u0438\u0440\u0430.\n* \u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0430 \u0431\u044b\u043b\u0430 \u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u043d\u0430. \u0415\u0441\u043b\u0438 \u0432\u044b \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u043b\u0438 DarkRP, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u043c\u043e\u0434 \u0432 \u0430\u0434\u0434\u043e\u043d\u0435.\n* \u041c\u043d\u043e\u0433\u043e \u0432\u0441\u0435\u0433\u043e \u043f\u0440\u043e\u0447\u0435\u0433\u043e \u0447\u0442\u043e \u043d\u0435 \u0431\u044b\u043b\u043e \u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u043d\u043e, \u0438\u0437\u043c\u0435\u043d\u0438\u043b\u043e \u0441\u0432\u043e\u0451 \u043c\u0435\u0441\u0442\u043e \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0432 \u043f\u0430\u043f\u043a\u0435 DarkRP. \u0412\u0421\u0401 \u043f\u043e\u043c\u0435\u043d\u044f\u043b\u043e \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443. \u042d\u0442\u043e \u0432\u0430\u043c \u043d\u0435 \u043f\u043e\u043c\u0435\u0445\u0430, \u0435\u0441\u043b\u0438 \u0432\u044b \u043d\u0435 \u0437\u0430\u043f\u0443\u0442\u0430\u0435\u0442\u0435\u0441\u044c \u0432 \u0444\u0430\u0439\u043b\u0430\u0445 DarkRP.\n\n== \u041e HUD ==\n\u0411\u043e\u043b\u044c\u0448\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u0432 DarkRP \u0438\u0437\u043c\u0435\u043d\u044f\u043b\u0438 HUD. \u0412\u0438\u0434\u0438\u043c\u043e, \u043e\u043d\u0438 \u044d\u0442\u043e \u0434\u0435\u043b\u0430\u043b\u0438 \u043f\u043e\u0442\u043e\u043c\u0443, \u0447\u0442\u043e \u0445\u043e\u0442\u0435\u043b\u0438 \u0431\u043e\u043b\u044c\u0448\u0435\u0439 \u043a\u0440\u0430\u0441\u043e\u0442\u044b, \u043e\u0442\u043b\u0438\u0447\u0438\u044f \u0438 \u0443\u0434\u043e\u0431\u043d\u043e\u0441\u0442\u0438 \u043c\u0435\u043d\u044e. \u0422\u0435\u043f\u0435\u0440\u044c \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043b\u0451\u0433\u043a\u043e \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c HUD \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e DarkRPModification! \u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0446\u0432\u0435\u0442\u0430 \u0441\u0442\u0430\u043b\u043e \u043e\u0447\u0435\u043d\u044c \u043f\u0440\u043e\u0441\u0442\u043e, \u043a \u043f\u0440\u0438\u043c\u0435\u0440\u0443 \u043a\u0440\u0430\u0441\u043d\u044b\u0439 \u0431\u0430\u0440 \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u044f \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u043d\u0430 \u0437\u0435\u043b\u0451\u043d\u044b\u0439 \u0438 \u0442.\u0434. \u0412 \u044d\u0442\u043e\u043c \u0432\u0430\u043c \u043f\u043e\u043c\u043e\u0436\u0435\u0442 HUD\n\n== \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0432\u043a\u043b\u0430\u0434\u043e\u043a (F4) ==\n\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u044b\u0445 \u0432\u043a\u043b\u0430\u0434\u043e\u043a \u0442\u043e\u0436\u0435 \u0431\u044b\u043b\u043e \u043d\u0430 \u0431\u043e\u043b\u044c\u0448\u0435\u0439 \u0447\u0430\u0441\u0442\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u0432 DarkRP, \u043f\u043e\u044d\u0442\u043e\u043c\u0443, \u0432 \u043d\u043e\u0432\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438 \u0432\u044b \u0441\u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u043b\u044e\u0431\u044b\u0435 \u0432\u043a\u043b\u0430\u0434\u043a\u0438. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u0441 \u0432\u0430\u0448\u0438\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u0441\u0442\u0432\u043e\u043c, \u043f\u0440\u0430\u0432\u0438\u043b\u0430\u043c\u0438, \u0432\u0435\u0431-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435\u0439 \u0438 \u0442.\u0434. \u042d\u0442\u043e \u043e\u0447\u0435\u043d\u044c \u043f\u0440\u043e\u0441\u0442\u043e, \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435!",
            "timestamp": "2020-07-23 18:08:12"
        }
    },
    "Npcs": {
        "en": {
            "content": "{{delete|Vandalism page (and blank now)}}",
            "timestamp": "2021-01-31 22:21:22"
        }
    },
    "RP Mapping": {
        "en": {
            "content": "{{Article|\ncategory = Mapping|\nname = Mapping for RP| \nauthor = [[User:Smurfy|Smurfy]] |\ndate = 24th May 2008 |\ndescription = Mapping for an RP gamemode, such as DarkRP, CakeScript or TS. However this is heavily focused on the quirks of DarkRP}}\n\n==Common map design==\n\n===Buildings===\n\nRoleplay features some common buildings that should be in every map to serve a setting for each [[DarkRP#Jobs|job]]. However, you should consider whether they interfere with the theme or setting of the map as ambiance is what makes great a roleplay. Here are a few mentions.\n\n*Police station '''(Civil Protection)'''\n*Mayor's office\n*Plain residential buildings, e.g. a hotel, detached houses, mansions etc. '''(Citizens)'''\n*Places for small business, e.g. stores and restaurants (it might be a good idea to have stores of a specific type as well) '''(Shopkeepers)'''\n*Lowlife areas, e.g. cheap properties '''(Gangsters)'''\n*Underground tunnels or a subway (might be a good idea to think these thoroughly)\n*Bank\n*Medical center\n*A labotary for drugs\n*Scenery, e.g. monuments and statues to increase realism\n\n===Map borders===\n\nIt is a common practice in RP to surround the map with tower blocks and inaccessible buildings to block the players' view out of the map. However, this is overused and there are many more ways of doing this, such as:\n\n*Hills\n*A 3D skybox ocean\n*Blocked off roads\n*Opaque fences\n*Locked gates\n*Combine roadblocks\n\nOr anything else you can imagine as long as it doesn't interfere with the map itself.\n\nUse ''clip textures'' in order to add invisible walls blocking access to certain places. It might be a good idea to use this on rooftops for example in case they're only intended for scenery purposes.\n\n===Secret doors===\n\nSometimes you don't want your \u00fcber secret room with 1,000 puzzles required to gain entry to be bypassed with a battering ram. You can create doors that aren't affected by RP scripts with the func_movelinear brush entity. These doors cannot be owned, rammed, lockpicked nor interacted with. Another alternative, would be to use the func_illusionary brush to make walls look real but really you can walk through them\u2014as seen in rp_evocity. Yet another option, is to make fake doors using trigger_teleport placed in front of the entry position, this is not advised, as the door becomes less visible to the player.\n\n==Detail==\n\nYou've put the pieces together; the map is playable. However you might feel like something is rather missing. Perhaps it's about the detail.\n\nRoleplaying maps should be more detailed in general to enhance the realistic feel. Therefore don't forget to add these:\n\n*Light sources and glow sprites\n*Env_sun\n*Soundscapes for different areas\n*Props and decals according to the setting (don't forget set up fade distance for props if you want the map to run smoothly)\n*Architectural details, such as all kinds support structures and columns\n\n==Weapons==\nRP is not a deathmatch gamemode. Keep this in mind when placing guns in your map. If you make a gun store don't put automatic weapons in, such as SMGs and AR2s. Gun stores should generally have pistols and crowbars. Although adding magnums may seem like a good idea, they are one-hit kills, and thus encourage deathmatching. Also keep in mind that some servers use custom weapons and certain guns might not even be acquirable.\n\nPolice station armories should not feature automatic weapons either, for two reasons. Firstly, it is unrealistic. The police in real life are not equipped with MP5s and sniper rifles. Secondly, people will try to break in and steal the guns. This is a problem that plagues RP_HomeTown2000, where the most common activity seen on the map is people breaking into the PD and stealing the powerful automatic weapons.\n\nAlthough if you want to add a secret admin only armory that's fine but make sure it is not accessible from inside the map anywhere without noclipping.\n\nTL;DR: Avoid placing hard coded weapons in the map, especially powerful ones.",
            "timestamp": "2020-07-23 18:08:12"
        }
    },
    "Updating": {
        "en": {
            "content": "This guide is deprecated.",
            "timestamp": "2020-07-23 18:08:12"
        },
        "ru": {
            "content": "This guide is deprecated.",
            "timestamp": "2020-07-23 18:08:12"
        }
    },
    "\u0427\u0442\u043e \u0442\u0430\u043a\u043e\u0435 DarkRP": {
        "en": {
            "content": "#REDIRECT [[DarkRP:ru]]",
            "timestamp": "2020-07-23 18:08:12"
        }
    }
}